

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Nov 14 11:26:30 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4520 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _PORTDbits	set	3971
    62  0000                     _TMR0L	set	4054
    63  0000                     _T0CONbits	set	4053
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TRISDbits	set	3989
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70  00038C                     __pcinit:
    71                           	callstack 0
    72  00038C                     start_initialization:
    73                           	callstack 0
    74  00038C                     __initialization:
    75                           	callstack 0
    76                           
    77                           ; Clear objects allocated to COMRAM (34 bytes)
    78  00038C  EE00  F001         	lfsr	0,__pbssCOMRAM
    79  000390  0E22               	movlw	34
    80  000392                     clear_0:
    81  000392  6AEE               	clrf	postinc0,c
    82  000394  06E8               	decf	wreg,f,c
    83  000396  E1FD               	bnz	clear_0
    84  000398                     end_of_initialization:
    85                           	callstack 0
    86  000398                     __end_of__initialization:
    87                           	callstack 0
    88  000398  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  00039A  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  00039C  0E00               	movlw	low (__Lmediumconst shr (0+16))
    91  00039E  6EF8               	movwf	tblptru,c
    92  0003A0  0100               	movlb	0
    93  0003A2  EFFD  F000         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	bssCOMRAM
    96  000001                     __pbssCOMRAM:
    97                           	callstack 0
    98  000001                     _task_list:
    99                           	callstack 0
   100  000001                     	ds	28
   101  00001D                     _quantum:
   102                           	callstack 0
   103  00001D                     	ds	2
   104  00001F                     _running_task:
   105                           	callstack 0
   106  00001F                     	ds	2
   107  000021                     _task_counter:
   108                           	callstack 0
   109  000021                     	ds	2
   110                           
   111                           	psect	cstackCOMRAM
   112  000023                     __pcstackCOMRAM:
   113                           	callstack 0
   114  000023                     ??_blue_led:
   115  000023                     ??_green_led:
   116  000023                     ??_yellow_led:
   117  000023                     ?___awmod:
   118                           	callstack 0
   119  000023                     ?i2___wmul:
   120                           	callstack 0
   121  000023                     ___awmod@dividend:
   122                           	callstack 0
   123  000023                     i2___wmul@multiplier:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x0
   127  000023                     	ds	2
   128  000025                     ___awmod@divisor:
   129                           	callstack 0
   130  000025                     i2___wmul@multiplicand:
   131                           	callstack 0
   132                           
   133                           ; 2 bytes @ 0x2
   134  000025                     	ds	2
   135  000027                     ___awmod@counter:
   136                           	callstack 0
   137  000027                     i2___wmul@product:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x4
   141  000027                     	ds	1
   142  000028                     ___awmod@sign:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x5
   146  000028                     	ds	1
   147  000029                     ??_interrup0:
   148                           
   149                           ; 1 bytes @ 0x6
   150  000029                     	ds	6
   151  00002F                     ?___wmul:
   152                           	callstack 0
   153  00002F                     ___wmul@multiplier:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0xC
   157  00002F                     	ds	2
   158  000031                     ___wmul@multiplicand:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0xE
   162  000031                     	ds	2
   163  000033                     ___wmul@product:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x10
   167  000033                     	ds	2
   168  000035                     create_task@prioridade:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x12
   172  000035                     	ds	2
   173  000037                     create_task@func:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x14
   177  000037                     	ds	2
   178  000039                     ??_create_task:
   179                           
   180                           ; 1 bytes @ 0x16
   181  000039                     	ds	2
   182  00003B                     
   183                           ; 1 bytes @ 0x18
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 80 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   203 ;;      Params:         0       0       0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0       0       0
   205 ;;      Temps:          0       0       0       0       0       0       0
   206 ;;      Totals:         0       0       0       0       0       0       0
   207 ;;Total ram usage:        0 bytes
   208 ;; Hardware stack levels required when called:    6
   209 ;; This function calls:
   210 ;;		_create_task
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  0001FA                     __ptext0:
   218                           	callstack 0
   219  0001FA                     _main:
   220                           	callstack 25
   221  0001FA                     
   222                           ;main.c: 82:  TRISDbits.RD0 = 0;
   223  0001FA  9095               	bcf	149,0,c	;volatile
   224                           
   225                           ;main.c: 83:  TRISDbits.RD1 = 0;
   226  0001FC  9295               	bcf	149,1,c	;volatile
   227                           
   228                           ;main.c: 84:  TRISDbits.RD2 = 0;
   229  0001FE  9495               	bcf	149,2,c	;volatile
   230                           
   231                           ;main.c: 85:  TRISDbits.RD3 = 0;
   232  000200  9695               	bcf	149,3,c	;volatile
   233                           
   234                           ;main.c: 88:  INTCONbits.GIE = 1;
   235  000202  8EF2               	bsf	242,7,c	;volatile
   236                           
   237                           ;main.c: 89:  INTCONbits.PEIE = 1;
   238  000204  8CF2               	bsf	242,6,c	;volatile
   239                           
   240                           ;main.c: 91:  INTCONbits.TMR0IE = 1;
   241  000206  8AF2               	bsf	242,5,c	;volatile
   242                           
   243                           ;main.c: 92:  INTCONbits.TMR0IF = 0;
   244  000208  94F2               	bcf	242,2,c	;volatile
   245                           
   246                           ;main.c: 95:  T0CONbits.TMR0ON = 1;
   247  00020A  8ED5               	bsf	213,7,c	;volatile
   248                           
   249                           ;main.c: 96:  T0CONbits.T08BIT = 1;
   250  00020C  8CD5               	bsf	213,6,c	;volatile
   251                           
   252                           ;main.c: 97:  T0CONbits.T0CS = 0;
   253  00020E  9AD5               	bcf	213,5,c	;volatile
   254                           
   255                           ;main.c: 98:  T0CONbits.PSA = 1;
   256  000210  86D5               	bsf	213,3,c	;volatile
   257  000212                     
   258                           ;main.c: 99:  T0CONbits.T0PS = 0b001;
   259  000212  50D5               	movf	213,w,c	;volatile
   260  000214  0BF8               	andlw	-8
   261  000216  0901               	iorlw	1
   262  000218  6ED5               	movwf	213,c	;volatile
   263                           
   264                           ;main.c: 100:  TMR0L = 0x06;
   265  00021A  0E06               	movlw	6
   266  00021C  6ED6               	movwf	214,c	;volatile
   267  00021E                     
   268                           ;main.c: 104:  create_task(5, blue_led);
   269  00021E  0E00               	movlw	0
   270  000220  6E36               	movwf	(create_task@prioridade+1)^0,c
   271  000222  0E05               	movlw	5
   272  000224  6E35               	movwf	create_task@prioridade^0,c
   273  000226  0E18               	movlw	low _blue_led
   274  000228  6E37               	movwf	create_task@func^0,c
   275  00022A  0E03               	movlw	high _blue_led
   276  00022C  6E38               	movwf	(create_task@func+1)^0,c
   277  00022E  EC61  F000         	call	_create_task	;wreg free
   278  000232                     
   279                           ;main.c: 105:  create_task(5, green_led);
   280  000232  0E00               	movlw	0
   281  000234  6E36               	movwf	(create_task@prioridade+1)^0,c
   282  000236  0E05               	movlw	5
   283  000238  6E35               	movwf	create_task@prioridade^0,c
   284  00023A  0EEE               	movlw	low _green_led
   285  00023C  6E37               	movwf	create_task@func^0,c
   286  00023E  0E02               	movlw	high _green_led
   287  000240  6E38               	movwf	(create_task@func+1)^0,c
   288  000242  EC61  F000         	call	_create_task	;wreg free
   289  000246                     
   290                           ;main.c: 106:  create_task(5, yellow_led);
   291  000246  0E00               	movlw	0
   292  000248  6E36               	movwf	(create_task@prioridade+1)^0,c
   293  00024A  0E05               	movlw	5
   294  00024C  6E35               	movwf	create_task@prioridade^0,c
   295  00024E  0EC2               	movlw	low _yellow_led
   296  000250  6E37               	movwf	create_task@func^0,c
   297  000252  0E02               	movlw	high _yellow_led
   298  000254  6E38               	movwf	(create_task@func+1)^0,c
   299  000256  EC61  F000         	call	_create_task	;wreg free
   300  00025A                     l31:
   301  00025A  EF2D  F001         	goto	l31
   302  00025E  EF07  F000         	goto	start
   303  000262                     __end_of_main:
   304                           	callstack 0
   305                           
   306 ;; *************** function _create_task *****************
   307 ;; Defined at:
   308 ;;		line 115 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  prioridade      2   18[COMRAM] unsigned int 
   311 ;;  func            2   20[COMRAM] PTR FTN()void 
   312 ;;		 -> yellow_led(1), green_led(1), blue_led(1), 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   324 ;;      Params:         4       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0
   326 ;;      Temps:          2       0       0       0       0       0       0
   327 ;;      Totals:         6       0       0       0       0       0       0
   328 ;;Total ram usage:        6 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; Hardware stack levels required when called:    5
   331 ;; This function calls:
   332 ;;		___wmul
   333 ;; This function is called by:
   334 ;;		_main
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text1
   339  0000C2                     __ptext1:
   340                           	callstack 0
   341  0000C2                     _create_task:
   342                           	callstack 25
   343  0000C2                     
   344                           ;main.c: 116:  task_list[task_counter].task_ID = task_counter+1;
   345  0000C2  0E01               	movlw	1
   346  0000C4  2421               	addwf	_task_counter^0,w,c
   347  0000C6  6E39               	movwf	??_create_task^0,c
   348  0000C8  0E00               	movlw	0
   349  0000CA  2022               	addwfc	(_task_counter+1)^0,w,c
   350  0000CC  6E3A               	movwf	(??_create_task+1)^0,c
   351  0000CE  C021  F02F         	movff	_task_counter,___wmul@multiplier
   352  0000D2  C022  F030         	movff	_task_counter+1,___wmul@multiplier+1
   353  0000D6  0E00               	movlw	0
   354  0000D8  6E32               	movwf	(___wmul@multiplicand+1)^0,c
   355  0000DA  0E07               	movlw	7
   356  0000DC  6E31               	movwf	___wmul@multiplicand^0,c
   357  0000DE  ECA0  F001         	call	___wmul	;wreg free
   358  0000E2  0E01               	movlw	low _task_list
   359  0000E4  242F               	addwf	?___wmul^0,w,c
   360  0000E6  6ED9               	movwf	fsr2l,c
   361  0000E8  0E00               	movlw	high _task_list
   362  0000EA  2030               	addwfc	(?___wmul+1)^0,w,c
   363  0000EC  6EDA               	movwf	fsr2h,c
   364  0000EE  C039  FFDE         	movff	??_create_task,postinc2
   365  0000F2  C03A  FFDD         	movff	??_create_task+1,postdec2
   366                           
   367                           ;main.c: 117:  task_list[task_counter].task_prior = prioridade;
   368  0000F6  C021  F02F         	movff	_task_counter,___wmul@multiplier
   369  0000FA  C022  F030         	movff	_task_counter+1,___wmul@multiplier+1
   370  0000FE  0E00               	movlw	0
   371  000100  6E32               	movwf	(___wmul@multiplicand+1)^0,c
   372  000102  0E07               	movlw	7
   373  000104  6E31               	movwf	___wmul@multiplicand^0,c
   374  000106  ECA0  F001         	call	___wmul	;wreg free
   375  00010A  0E03               	movlw	low (_task_list+2)
   376  00010C  242F               	addwf	?___wmul^0,w,c
   377  00010E  6ED9               	movwf	fsr2l,c
   378  000110  0E00               	movlw	high (_task_list+2)
   379  000112  2030               	addwfc	(?___wmul+1)^0,w,c
   380  000114  6EDA               	movwf	fsr2h,c
   381  000116  C035  FFDE         	movff	create_task@prioridade,postinc2
   382  00011A  C036  FFDD         	movff	create_task@prioridade+1,postdec2
   383                           
   384                           ;main.c: 118:  task_list[task_counter].task_func = func;
   385  00011E  C021  F02F         	movff	_task_counter,___wmul@multiplier
   386  000122  C022  F030         	movff	_task_counter+1,___wmul@multiplier+1
   387  000126  0E00               	movlw	0
   388  000128  6E32               	movwf	(___wmul@multiplicand+1)^0,c
   389  00012A  0E07               	movlw	7
   390  00012C  6E31               	movwf	___wmul@multiplicand^0,c
   391  00012E  ECA0  F001         	call	___wmul	;wreg free
   392  000132  0E05               	movlw	low (_task_list+4)
   393  000134  242F               	addwf	?___wmul^0,w,c
   394  000136  6ED9               	movwf	fsr2l,c
   395  000138  0E00               	movlw	high (_task_list+4)
   396  00013A  2030               	addwfc	(?___wmul+1)^0,w,c
   397  00013C  6EDA               	movwf	fsr2h,c
   398  00013E  C037  FFDE         	movff	create_task@func,postinc2
   399  000142  C038  FFDD         	movff	create_task@func+1,postdec2
   400                           
   401                           ;main.c: 119:  task_list[task_counter].task_state = READY;
   402  000146  C021  F02F         	movff	_task_counter,___wmul@multiplier
   403  00014A  C022  F030         	movff	_task_counter+1,___wmul@multiplier+1
   404  00014E  0E00               	movlw	0
   405  000150  6E32               	movwf	(___wmul@multiplicand+1)^0,c
   406  000152  0E07               	movlw	7
   407  000154  6E31               	movwf	___wmul@multiplicand^0,c
   408  000156  ECA0  F001         	call	___wmul	;wreg free
   409  00015A  0E07               	movlw	low (_task_list+6)
   410  00015C  242F               	addwf	?___wmul^0,w,c
   411  00015E  6ED9               	movwf	fsr2l,c
   412  000160  0E00               	movlw	high (_task_list+6)
   413  000162  2030               	addwfc	(?___wmul+1)^0,w,c
   414  000164  6EDA               	movwf	fsr2h,c
   415  000166  0E00               	movlw	0
   416  000168  6EDF               	movwf	indf2,c
   417  00016A                     
   418                           ;main.c: 120:  task_counter++;
   419  00016A  4A21               	infsnz	_task_counter^0,f,c
   420  00016C  2A22               	incf	(_task_counter+1)^0,f,c
   421  00016E  0012               	return		;funcret
   422  000170                     __end_of_create_task:
   423                           	callstack 0
   424                           
   425 ;; *************** function ___wmul *****************
   426 ;; Defined at:
   427 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  multiplier      2   12[COMRAM] unsigned int 
   430 ;;  multiplicand    2   14[COMRAM] unsigned int 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  product         2   16[COMRAM] unsigned int 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  2   12[COMRAM] unsigned int 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, prodl, prodh
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         4       0       0       0       0       0       0
   443 ;;      Locals:         2       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         6       0       0       0       0       0       0
   446 ;;Total ram usage:        6 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; Hardware stack levels required when called:    4
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_create_task
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text2
   457  000340                     __ptext2:
   458                           	callstack 0
   459  000340                     ___wmul:
   460                           	callstack 25
   461  000340  502F               	movf	___wmul@multiplier^0,w,c
   462  000342  0231               	mulwf	___wmul@multiplicand^0,c
   463  000344  CFF3 F033          	movff	prodl,___wmul@product
   464  000348  CFF4 F034          	movff	prodh,___wmul@product+1
   465  00034C  502F               	movf	___wmul@multiplier^0,w,c
   466  00034E  0232               	mulwf	(___wmul@multiplicand+1)^0,c
   467  000350  50F3               	movf	243,w,c
   468  000352  2634               	addwf	(___wmul@product+1)^0,f,c
   469  000354  5030               	movf	(___wmul@multiplier+1)^0,w,c
   470  000356  0231               	mulwf	___wmul@multiplicand^0,c
   471  000358  50F3               	movf	243,w,c
   472  00035A  2634               	addwf	(___wmul@product+1)^0,f,c
   473  00035C  C033  F02F         	movff	___wmul@product,?___wmul
   474  000360  C034  F030         	movff	___wmul@product+1,?___wmul+1
   475  000364  0012               	return		;funcret
   476  000366                     __end_of___wmul:
   477                           	callstack 0
   478                           
   479 ;; *************** function _interrup0 *****************
   480 ;; Defined at:
   481 ;;		line 161 in file "main.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   495 ;;      Params:         0       0       0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0
   497 ;;      Temps:          6       0       0       0       0       0       0
   498 ;;      Totals:         6       0       0       0       0       0       0
   499 ;;Total ram usage:        6 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    3
   502 ;; This function calls:
   503 ;;		_scheduler
   504 ;; This function is called by:
   505 ;;		Interrupt level 2
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	intcode
   510  000008                     __pintcode:
   511                           	callstack 0
   512  000008                     _interrup0:
   513                           	callstack 25
   514                           
   515                           ;incstack = 0
   516  000008  823B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   517  00000A  EDB8  F000         	call	int_func,f	;refresh shadow registers
   518                           
   519                           	psect	intcode_body
   520  000170                     __pintcode_body:
   521                           	callstack 25
   522  000170                     int_func:
   523                           	callstack 25
   524  000170  0006               	pop		; remove dummy address from shadow register refresh
   525  000172  CFFA F029          	movff	pclath,??_interrup0
   526  000176  CFFB F02A          	movff	pclatu,??_interrup0+1
   527  00017A  CFD9 F02B          	movff	fsr2l,??_interrup0+2
   528  00017E  CFDA F02C          	movff	fsr2h,??_interrup0+3
   529  000182  CFF3 F02D          	movff	prodl,??_interrup0+4
   530  000186  CFF4 F02E          	movff	prodh,??_interrup0+5
   531  00018A                     
   532                           ;main.c: 162:  if (INTCONbits.TMR0IF && quantum == 3000){
   533  00018A  A4F2               	btfss	242,2,c	;volatile
   534  00018C  EFCA  F000         	goto	i2u22_41
   535  000190  EFCC  F000         	goto	i2u22_40
   536  000194                     i2u22_41:
   537  000194  EFE3  F000         	goto	i2l60
   538  000198                     i2u22_40:
   539  000198  0EB8               	movlw	184
   540  00019A  181D               	xorwf	_quantum^0,w,c
   541  00019C  E107               	bnz	i2u23_41
   542  00019E  0E0B               	movlw	11
   543  0001A0  181E               	xorwf	(_quantum+1)^0,w,c
   544  0001A2  A4D8               	btfss	status,2,c
   545  0001A4  EFD6  F000         	goto	i2u23_41
   546  0001A8  EFD8  F000         	goto	i2u23_40
   547  0001AC                     i2u23_41:
   548  0001AC  EFE3  F000         	goto	i2l60
   549  0001B0                     i2u23_40:
   550  0001B0                     
   551                           ;main.c: 163:   scheduler();
   552  0001B0  EC31  F001         	call	_scheduler	;wreg free
   553  0001B4                     
   554                           ;main.c: 164:   TMR0L = 0x06;
   555  0001B4  0E06               	movlw	6
   556  0001B6  6ED6               	movwf	214,c	;volatile
   557  0001B8                     
   558                           ;main.c: 165:   quantum = 0;
   559  0001B8  0E00               	movlw	0
   560  0001BA  6E1E               	movwf	(_quantum+1)^0,c
   561  0001BC  0E00               	movlw	0
   562  0001BE  6E1D               	movwf	_quantum^0,c
   563  0001C0                     
   564                           ;main.c: 166:   INTCONbits.TMR0IF = 0;
   565  0001C0  94F2               	bcf	242,2,c	;volatile
   566                           
   567                           ;main.c: 167:  }
   568  0001C2  EFEF  F000         	goto	i2l63
   569  0001C6                     i2l60:
   570  0001C6  A4F2               	btfss	242,2,c	;volatile
   571  0001C8  EFE8  F000         	goto	i2u24_41
   572  0001CC  EFEA  F000         	goto	i2u24_40
   573  0001D0                     i2u24_41:
   574  0001D0  EFEF  F000         	goto	i2l63
   575  0001D4                     i2u24_40:
   576  0001D4                     
   577                           ;main.c: 169:   quantum++;
   578  0001D4  4A1D               	infsnz	_quantum^0,f,c
   579  0001D6  2A1E               	incf	(_quantum+1)^0,f,c
   580  0001D8                     
   581                           ;main.c: 170:   TMR0L = 0x06;
   582  0001D8  0E06               	movlw	6
   583  0001DA  6ED6               	movwf	214,c	;volatile
   584  0001DC                     
   585                           ;main.c: 171:   INTCONbits.TMR0IF = 0;
   586  0001DC  94F2               	bcf	242,2,c	;volatile
   587  0001DE                     i2l63:
   588  0001DE  C02E  FFF4         	movff	??_interrup0+5,prodh
   589  0001E2  C02D  FFF3         	movff	??_interrup0+4,prodl
   590  0001E6  C02C  FFDA         	movff	??_interrup0+3,fsr2h
   591  0001EA  C02B  FFD9         	movff	??_interrup0+2,fsr2l
   592  0001EE  C02A  FFFB         	movff	??_interrup0+1,pclatu
   593  0001F2  C029  FFFA         	movff	??_interrup0,pclath
   594  0001F6  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   595  0001F8  0011               	retfie		f
   596  0001FA                     __end_of_interrup0:
   597                           	callstack 0
   598                           
   599 ;; *************** function _scheduler *****************
   600 ;; Defined at:
   601 ;;		line 123 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   615 ;;      Params:         0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    2
   622 ;; This function calls:
   623 ;;		___awmod
   624 ;;		_blue_led
   625 ;;		_green_led
   626 ;;		_yellow_led
   627 ;;		i2___wmul
   628 ;; This function is called by:
   629 ;;		_interrup0
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text4
   634  000262                     __ptext4:
   635                           	callstack 0
   636  000262                     _scheduler:
   637                           	callstack 25
   638  000262                     
   639                           ;main.c: 124:  running_task = (running_task + 1) % task_counter;
   640  000262  0E01               	movlw	1
   641  000264  241F               	addwf	_running_task^0,w,c
   642  000266  6E23               	movwf	___awmod@dividend^0,c
   643  000268  0E00               	movlw	0
   644  00026A  2020               	addwfc	(_running_task+1)^0,w,c
   645  00026C  6E24               	movwf	(___awmod@dividend+1)^0,c
   646  00026E  C021  F025         	movff	_task_counter,___awmod@divisor
   647  000272  C022  F026         	movff	_task_counter+1,___awmod@divisor+1
   648  000276  EC09  F000         	call	___awmod	;wreg free
   649  00027A  C023  F01F         	movff	?___awmod,_running_task
   650  00027E  C024  F020         	movff	?___awmod+1,_running_task+1
   651  000282                     
   652                           ;main.c: 126:  (*task_list[running_task++].task_func)();
   653  000282  501F               	movf	_running_task^0,w,c
   654  000284  6E23               	movwf	i2___wmul@multiplier^0,c
   655  000286  5020               	movf	(_running_task+1)^0,w,c
   656  000288  6E24               	movwf	(i2___wmul@multiplier+1)^0,c
   657  00028A  4A1F               	infsnz	_running_task^0,f,c
   658  00028C  2A20               	incf	(_running_task+1)^0,f,c
   659  00028E  0E00               	movlw	0
   660  000290  6E26               	movwf	(i2___wmul@multiplicand+1)^0,c
   661  000292  0E07               	movlw	7
   662  000294  6E25               	movwf	i2___wmul@multiplicand^0,c
   663  000296  ECB3  F001         	call	i2___wmul	;wreg free
   664  00029A  0E05               	movlw	low (_task_list+4)
   665  00029C  2423               	addwf	?i2___wmul^0,w,c
   666  00029E  6ED9               	movwf	fsr2l,c
   667  0002A0  0E00               	movlw	high (_task_list+4)
   668  0002A2  2024               	addwfc	(?i2___wmul+1)^0,w,c
   669  0002A4  6EDA               	movwf	fsr2h,c
   670  0002A6  D802               	call	i2u21_48
   671  0002A8  EF60  F001         	goto	i2u21_49
   672  0002AC                     i2u21_48:
   673  0002AC  0005               	push	
   674  0002AE  6EFA               	movwf	pclath,c
   675  0002B0  50DE               	movf	postinc2,w,c
   676  0002B2  6EFD               	movwf	tosl,c
   677  0002B4  50DE               	movf	postinc2,w,c
   678  0002B6  6EFE               	movwf	tosh,c
   679  0002B8  50F8               	movf	tblptru,w,c
   680  0002BA  6EFF               	movwf	tosu,c
   681  0002BC  50FA               	movf	pclath,w,c
   682  0002BE  0012               	return		;indir
   683  0002C0                     i2u21_49:
   684  0002C0  0012               	return		;funcret
   685  0002C2                     __end_of_scheduler:
   686                           	callstack 0
   687                           
   688 ;; *************** function i2___wmul *****************
   689 ;; Defined at:
   690 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  multiplier      2    0[COMRAM] unsigned int 
   693 ;;  multiplicand    2    2[COMRAM] unsigned int 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  product         2    4[COMRAM] unsigned int 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2    0[COMRAM] unsigned int 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, prodl, prodh
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   705 ;;      Params:         4       0       0       0       0       0       0
   706 ;;      Locals:         2       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0
   708 ;;      Totals:         6       0       0       0       0       0       0
   709 ;;Total ram usage:        6 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_scheduler
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text5
   719  000366                     __ptext5:
   720                           	callstack 0
   721  000366                     i2___wmul:
   722                           	callstack 26
   723  000366  5023               	movf	i2___wmul@multiplier^0,w,c
   724  000368  0225               	mulwf	i2___wmul@multiplicand^0,c
   725  00036A  CFF3 F027          	movff	prodl,i2___wmul@product
   726  00036E  CFF4 F028          	movff	prodh,i2___wmul@product+1
   727  000372  5023               	movf	i2___wmul@multiplier^0,w,c
   728  000374  0226               	mulwf	(i2___wmul@multiplicand+1)^0,c
   729  000376  50F3               	movf	243,w,c
   730  000378  2628               	addwf	(i2___wmul@product+1)^0,f,c
   731  00037A  5024               	movf	(i2___wmul@multiplier+1)^0,w,c
   732  00037C  0225               	mulwf	i2___wmul@multiplicand^0,c
   733  00037E  50F3               	movf	243,w,c
   734  000380  2628               	addwf	(i2___wmul@product+1)^0,f,c
   735  000382  C027  F023         	movff	i2___wmul@product,?i2___wmul
   736  000386  C028  F024         	movff	i2___wmul@product+1,?i2___wmul+1
   737  00038A  0012               	return		;funcret
   738  00038C                     __end_ofi2___wmul:
   739                           	callstack 0
   740                           
   741 ;; *************** function _green_led *****************
   742 ;; Defined at:
   743 ;;		line 151 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   757 ;;      Params:         0       0       0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0
   759 ;;      Temps:          1       0       0       0       0       0       0
   760 ;;      Totals:         1       0       0       0       0       0       0
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    1
   764 ;; This function calls:
   765 ;;		_led_reset
   766 ;; This function is called by:
   767 ;;		_main
   768 ;;		_scheduler
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text6
   773  0002EE                     __ptext6:
   774                           	callstack 0
   775  0002EE                     _green_led:
   776                           	callstack 25
   777  0002EE                     
   778                           ;main.c: 152:  led_reset();
   779  0002EE  ECD3  F001         	call	_led_reset	;wreg free
   780  0002F2                     
   781                           ;main.c: 153:  PORTDbits.RD2 = ~PORTDbits.RD2;
   782  0002F2  B483               	btfsc	131,2,c	;volatile
   783  0002F4  EF7E  F001         	goto	i2u2_41
   784  0002F8  EF81  F001         	goto	i2u2_40
   785  0002FC                     i2u2_41:
   786  0002FC  0E01               	movlw	1
   787  0002FE  EF82  F001         	goto	i2u2_46
   788  000302                     i2u2_40:
   789  000302  0E00               	movlw	0
   790  000304                     i2u2_46:
   791  000304  0AFF               	xorlw	255
   792  000306  6E23               	movwf	??_green_led^0,c
   793  000308  4623               	rlncf	??_green_led^0,f,c
   794  00030A  4623               	rlncf	??_green_led^0,f,c
   795  00030C  5083               	movf	131,w,c	;volatile
   796  00030E  1823               	xorwf	??_green_led^0,w,c
   797  000310  0BFB               	andlw	-5
   798  000312  1823               	xorwf	??_green_led^0,w,c
   799  000314  6E83               	movwf	131,c	;volatile
   800  000316  0012               	return		;funcret
   801  000318                     __end_of_green_led:
   802                           	callstack 0
   803                           
   804 ;; *************** function _blue_led *****************
   805 ;; Defined at:
   806 ;;		line 146 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0
   822 ;;      Temps:          1       0       0       0       0       0       0
   823 ;;      Totals:         1       0       0       0       0       0       0
   824 ;;Total ram usage:        1 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    1
   827 ;; This function calls:
   828 ;;		_led_reset
   829 ;; This function is called by:
   830 ;;		_main
   831 ;;		_scheduler
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text7
   836  000318                     __ptext7:
   837                           	callstack 0
   838  000318                     _blue_led:
   839                           	callstack 25
   840  000318                     
   841                           ;main.c: 147:  led_reset();
   842  000318  ECD3  F001         	call	_led_reset	;wreg free
   843  00031C                     
   844                           ;main.c: 148:  PORTDbits.RD1 = ~PORTDbits.RD1;
   845  00031C  B283               	btfsc	131,1,c	;volatile
   846  00031E  EF93  F001         	goto	i2u1_41
   847  000322  EF96  F001         	goto	i2u1_40
   848  000326                     i2u1_41:
   849  000326  0E01               	movlw	1
   850  000328  EF97  F001         	goto	i2u1_46
   851  00032C                     i2u1_40:
   852  00032C  0E00               	movlw	0
   853  00032E                     i2u1_46:
   854  00032E  0AFF               	xorlw	255
   855  000330  6E23               	movwf	??_blue_led^0,c
   856  000332  4623               	rlncf	??_blue_led^0,f,c
   857  000334  5083               	movf	131,w,c	;volatile
   858  000336  1823               	xorwf	??_blue_led^0,w,c
   859  000338  0BFD               	andlw	-3
   860  00033A  1823               	xorwf	??_blue_led^0,w,c
   861  00033C  6E83               	movwf	131,c	;volatile
   862  00033E  0012               	return		;funcret
   863  000340                     __end_of_blue_led:
   864                           	callstack 0
   865                           
   866 ;; *************** function _yellow_led *****************
   867 ;; Defined at:
   868 ;;		line 156 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0
   884 ;;      Temps:          1       0       0       0       0       0       0
   885 ;;      Totals:         1       0       0       0       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		_led_reset
   891 ;; This function is called by:
   892 ;;		_main
   893 ;;		_scheduler
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text8
   898  0002C2                     __ptext8:
   899                           	callstack 0
   900  0002C2                     _yellow_led:
   901                           	callstack 25
   902  0002C2                     
   903                           ;main.c: 157:  led_reset();
   904  0002C2  ECD3  F001         	call	_led_reset	;wreg free
   905  0002C6                     
   906                           ;main.c: 158:  PORTDbits.RD3 = ~PORTDbits.RD3;
   907  0002C6  B683               	btfsc	131,3,c	;volatile
   908  0002C8  EF68  F001         	goto	i2u3_41
   909  0002CC  EF6B  F001         	goto	i2u3_40
   910  0002D0                     i2u3_41:
   911  0002D0  0E01               	movlw	1
   912  0002D2  EF6C  F001         	goto	i2u3_46
   913  0002D6                     i2u3_40:
   914  0002D6  0E00               	movlw	0
   915  0002D8                     i2u3_46:
   916  0002D8  0AFF               	xorlw	255
   917  0002DA  6E23               	movwf	??_yellow_led^0,c
   918  0002DC  4623               	rlncf	??_yellow_led^0,f,c
   919  0002DE  4623               	rlncf	??_yellow_led^0,f,c
   920  0002E0  4623               	rlncf	??_yellow_led^0,f,c
   921  0002E2  5083               	movf	131,w,c	;volatile
   922  0002E4  1823               	xorwf	??_yellow_led^0,w,c
   923  0002E6  0BF7               	andlw	-9
   924  0002E8  1823               	xorwf	??_yellow_led^0,w,c
   925  0002EA  6E83               	movwf	131,c	;volatile
   926  0002EC  0012               	return		;funcret
   927  0002EE                     __end_of_yellow_led:
   928                           	callstack 0
   929                           
   930 ;; *************** function _led_reset *****************
   931 ;; Defined at:
   932 ;;		line 134 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		None
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_blue_led
   956 ;;		_green_led
   957 ;;		_yellow_led
   958 ;;		_red_led
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text9
   963  0003A6                     __ptext9:
   964                           	callstack 0
   965  0003A6                     _led_reset:
   966                           	callstack 25
   967  0003A6                     
   968                           ;main.c: 135:  PORTDbits.RD0 = 0b0;
   969  0003A6  9083               	bcf	131,0,c	;volatile
   970                           
   971                           ;main.c: 136:  PORTDbits.RD1 = 0b0;
   972  0003A8  9283               	bcf	131,1,c	;volatile
   973                           
   974                           ;main.c: 137:  PORTDbits.RD2 = 0b0;
   975  0003AA  9483               	bcf	131,2,c	;volatile
   976                           
   977                           ;main.c: 138:  PORTDbits.RD3 = 0b0;
   978  0003AC  9683               	bcf	131,3,c	;volatile
   979  0003AE  0012               	return		;funcret
   980  0003B0                     __end_of_led_reset:
   981                           	callstack 0
   982                           
   983 ;; *************** function ___awmod *****************
   984 ;; Defined at:
   985 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  dividend        2    0[COMRAM] int 
   988 ;;  divisor         2    2[COMRAM] int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  sign            1    5[COMRAM] unsigned char 
   991 ;;  counter         1    4[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  2    0[COMRAM] int 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         4       0       0       0       0       0       0
  1002 ;;      Locals:         2       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         6       0       0       0       0       0       0
  1005 ;;Total ram usage:        6 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_scheduler
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text10
  1015  000012                     __ptext10:
  1016                           	callstack 0
  1017  000012                     ___awmod:
  1018                           	callstack 26
  1019  000012  0E00               	movlw	0
  1020  000014  6E28               	movwf	___awmod@sign^0,c
  1021  000016  BE24               	btfsc	(___awmod@dividend+1)^0,7,c
  1022  000018  EF12  F000         	goto	i2u15_40
  1023  00001C  EF10  F000         	goto	i2u15_41
  1024  000020                     i2u15_41:
  1025  000020  EF18  F000         	goto	i2l855
  1026  000024                     i2u15_40:
  1027  000024  6C23               	negf	___awmod@dividend^0,c
  1028  000026  1E24               	comf	(___awmod@dividend+1)^0,f,c
  1029  000028  B0D8               	btfsc	status,0,c
  1030  00002A  2A24               	incf	(___awmod@dividend+1)^0,f,c
  1031  00002C  0E01               	movlw	1
  1032  00002E  6E28               	movwf	___awmod@sign^0,c
  1033  000030                     i2l855:
  1034  000030  BE26               	btfsc	(___awmod@divisor+1)^0,7,c
  1035  000032  EF1F  F000         	goto	i2u16_40
  1036  000036  EF1D  F000         	goto	i2u16_41
  1037  00003A                     i2u16_41:
  1038  00003A  EF23  F000         	goto	i2l859
  1039  00003E                     i2u16_40:
  1040  00003E  6C25               	negf	___awmod@divisor^0,c
  1041  000040  1E26               	comf	(___awmod@divisor+1)^0,f,c
  1042  000042  B0D8               	btfsc	status,0,c
  1043  000044  2A26               	incf	(___awmod@divisor+1)^0,f,c
  1044  000046                     i2l859:
  1045  000046  5025               	movf	___awmod@divisor^0,w,c
  1046  000048  1026               	iorwf	(___awmod@divisor+1)^0,w,c
  1047  00004A  B4D8               	btfsc	status,2,c
  1048  00004C  EF2A  F000         	goto	i2u17_41
  1049  000050  EF2C  F000         	goto	i2u17_40
  1050  000054                     i2u17_41:
  1051  000054  EF50  F000         	goto	i2l875
  1052  000058                     i2u17_40:
  1053  000058  0E01               	movlw	1
  1054  00005A  6E27               	movwf	___awmod@counter^0,c
  1055  00005C  EF34  F000         	goto	i2l865
  1056  000060                     i2l863:
  1057  000060  90D8               	bcf	status,0,c
  1058  000062  3625               	rlcf	___awmod@divisor^0,f,c
  1059  000064  3626               	rlcf	(___awmod@divisor+1)^0,f,c
  1060  000066  2A27               	incf	___awmod@counter^0,f,c
  1061  000068                     i2l865:
  1062  000068  AE26               	btfss	(___awmod@divisor+1)^0,7,c
  1063  00006A  EF39  F000         	goto	i2u18_41
  1064  00006E  EF3B  F000         	goto	i2u18_40
  1065  000072                     i2u18_41:
  1066  000072  EF30  F000         	goto	i2l863
  1067  000076                     i2u18_40:
  1068  000076                     i2l867:
  1069  000076  5025               	movf	___awmod@divisor^0,w,c
  1070  000078  5C23               	subwf	___awmod@dividend^0,w,c
  1071  00007A  5026               	movf	(___awmod@divisor+1)^0,w,c
  1072  00007C  5824               	subwfb	(___awmod@dividend+1)^0,w,c
  1073  00007E  A0D8               	btfss	status,0,c
  1074  000080  EF44  F000         	goto	i2u19_41
  1075  000084  EF46  F000         	goto	i2u19_40
  1076  000088                     i2u19_41:
  1077  000088  EF4A  F000         	goto	i2l871
  1078  00008C                     i2u19_40:
  1079  00008C  5025               	movf	___awmod@divisor^0,w,c
  1080  00008E  5E23               	subwf	___awmod@dividend^0,f,c
  1081  000090  5026               	movf	(___awmod@divisor+1)^0,w,c
  1082  000092  5A24               	subwfb	(___awmod@dividend+1)^0,f,c
  1083  000094                     i2l871:
  1084  000094  90D8               	bcf	status,0,c
  1085  000096  3226               	rrcf	(___awmod@divisor+1)^0,f,c
  1086  000098  3225               	rrcf	___awmod@divisor^0,f,c
  1087  00009A  2E27               	decfsz	___awmod@counter^0,f,c
  1088  00009C  EF3B  F000         	goto	i2l867
  1089  0000A0                     i2l875:
  1090  0000A0  5028               	movf	___awmod@sign^0,w,c
  1091  0000A2  B4D8               	btfsc	status,2,c
  1092  0000A4  EF56  F000         	goto	i2u20_41
  1093  0000A8  EF58  F000         	goto	i2u20_40
  1094  0000AC                     i2u20_41:
  1095  0000AC  EF5C  F000         	goto	i2l879
  1096  0000B0                     i2u20_40:
  1097  0000B0  6C23               	negf	___awmod@dividend^0,c
  1098  0000B2  1E24               	comf	(___awmod@dividend+1)^0,f,c
  1099  0000B4  B0D8               	btfsc	status,0,c
  1100  0000B6  2A24               	incf	(___awmod@dividend+1)^0,f,c
  1101  0000B8                     i2l879:
  1102  0000B8  C023  F023         	movff	___awmod@dividend,?___awmod
  1103  0000BC  C024  F024         	movff	___awmod@dividend+1,?___awmod+1
  1104  0000C0  0012               	return		;funcret
  1105  0000C2                     __end_of___awmod:
  1106                           	callstack 0
  1107  0000                     
  1108                           	psect	text11
  1109  000000                     __ptext11:
  1110                           	callstack 0
  1111  000000                     
  1112                           	psect	rparam
  1113  0000                     
  1114                           	psect	temp
  1115  00003B                     btemp:
  1116                           	callstack 0
  1117  00003B                     	ds	1
  1118  0000                     int$flags	set	btemp
  1119  0000                     wtemp8	set	btemp+1
  1120  0000                     ttemp5	set	btemp+1
  1121  0000                     ttemp6	set	btemp+4
  1122  0000                     ttemp7	set	btemp+8
  1123                           
  1124                           	psect	idloc
  1125                           
  1126                           ;Config register IDLOC0 @ 0x200000
  1127                           ;	unspecified, using default values
  1128  200000                     	org	2097152
  1129  200000  FF                 	db	255
  1130                           
  1131                           ;Config register IDLOC1 @ 0x200001
  1132                           ;	unspecified, using default values
  1133  200001                     	org	2097153
  1134  200001  FF                 	db	255
  1135                           
  1136                           ;Config register IDLOC2 @ 0x200002
  1137                           ;	unspecified, using default values
  1138  200002                     	org	2097154
  1139  200002  FF                 	db	255
  1140                           
  1141                           ;Config register IDLOC3 @ 0x200003
  1142                           ;	unspecified, using default values
  1143  200003                     	org	2097155
  1144  200003  FF                 	db	255
  1145                           
  1146                           ;Config register IDLOC4 @ 0x200004
  1147                           ;	unspecified, using default values
  1148  200004                     	org	2097156
  1149  200004  FF                 	db	255
  1150                           
  1151                           ;Config register IDLOC5 @ 0x200005
  1152                           ;	unspecified, using default values
  1153  200005                     	org	2097157
  1154  200005  FF                 	db	255
  1155                           
  1156                           ;Config register IDLOC6 @ 0x200006
  1157                           ;	unspecified, using default values
  1158  200006                     	org	2097158
  1159  200006  FF                 	db	255
  1160                           
  1161                           ;Config register IDLOC7 @ 0x200007
  1162                           ;	unspecified, using default values
  1163  200007                     	org	2097159
  1164  200007  FF                 	db	255
  1165                           
  1166                           	psect	config
  1167                           
  1168                           ; Padding undefined space
  1169  300000                     	org	3145728
  1170  300000  FF                 	db	255
  1171                           
  1172                           ;Config register CONFIG1H @ 0x300001
  1173                           ;	unspecified, using default values
  1174                           ;	Oscillator Selection bits
  1175                           ;	OSC = 0x7, unprogrammed default
  1176                           ;	Fail-Safe Clock Monitor Enable bit
  1177                           ;	FCMEN = 0x0, unprogrammed default
  1178                           ;	Internal/External Oscillator Switchover bit
  1179                           ;	IESO = 0x0, unprogrammed default
  1180  300001                     	org	3145729
  1181  300001  07                 	db	7
  1182                           
  1183                           ;Config register CONFIG2L @ 0x300002
  1184                           ;	unspecified, using default values
  1185                           ;	Power-up Timer Enable bit
  1186                           ;	PWRT = 0x1, unprogrammed default
  1187                           ;	Brown-out Reset Enable bits
  1188                           ;	BOREN = 0x3, unprogrammed default
  1189                           ;	Brown Out Reset Voltage bits
  1190                           ;	BORV = 0x3, unprogrammed default
  1191  300002                     	org	3145730
  1192  300002  1F                 	db	31
  1193                           
  1194                           ;Config register CONFIG2H @ 0x300003
  1195                           ;	Watchdog Timer Enable bit
  1196                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1197                           ;	Watchdog Timer Postscale Select bits
  1198                           ;	WDTPS = 0xF, unprogrammed default
  1199  300003                     	org	3145731
  1200  300003  1E                 	db	30
  1201                           
  1202                           ; Padding undefined space
  1203  300004                     	org	3145732
  1204  300004  FF                 	db	255
  1205                           
  1206                           ;Config register CONFIG3H @ 0x300005
  1207                           ;	CCP2 MUX bit
  1208                           ;	CCP2MX = 0x1, unprogrammed default
  1209                           ;	PORTB A/D Enable bit
  1210                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1211                           ;	Low-Power Timer1 Oscillator Enable bit
  1212                           ;	LPT1OSC = 0x0, unprogrammed default
  1213                           ;	MCLR Pin Enable bit
  1214                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1215  300005                     	org	3145733
  1216  300005  81                 	db	129
  1217                           
  1218                           ;Config register CONFIG4L @ 0x300006
  1219                           ;	unspecified, using default values
  1220                           ;	Stack Full/Underflow Reset Enable bit
  1221                           ;	STVREN = 0x1, unprogrammed default
  1222                           ;	Single-Supply ICSP Enable bit
  1223                           ;	LVP = 0x1, unprogrammed default
  1224                           ;	Extended Instruction Set Enable bit
  1225                           ;	XINST = 0x0, unprogrammed default
  1226                           ;	Background Debugger Enable bit
  1227                           ;	DEBUG = 0x1, unprogrammed default
  1228  300006                     	org	3145734
  1229  300006  85                 	db	133
  1230                           
  1231                           ; Padding undefined space
  1232  300007                     	org	3145735
  1233  300007  FF                 	db	255
  1234                           
  1235                           ;Config register CONFIG5L @ 0x300008
  1236                           ;	unspecified, using default values
  1237                           ;	Code Protection bit
  1238                           ;	CP0 = 0x1, unprogrammed default
  1239                           ;	Code Protection bit
  1240                           ;	CP1 = 0x1, unprogrammed default
  1241                           ;	Code Protection bit
  1242                           ;	CP2 = 0x1, unprogrammed default
  1243                           ;	Code Protection bit
  1244                           ;	CP3 = 0x1, unprogrammed default
  1245  300008                     	org	3145736
  1246  300008  0F                 	db	15
  1247                           
  1248                           ;Config register CONFIG5H @ 0x300009
  1249                           ;	unspecified, using default values
  1250                           ;	Boot Block Code Protection bit
  1251                           ;	CPB = 0x1, unprogrammed default
  1252                           ;	Data EEPROM Code Protection bit
  1253                           ;	CPD = 0x1, unprogrammed default
  1254  300009                     	org	3145737
  1255  300009  C0                 	db	192
  1256                           
  1257                           ;Config register CONFIG6L @ 0x30000A
  1258                           ;	unspecified, using default values
  1259                           ;	Write Protection bit
  1260                           ;	WRT0 = 0x1, unprogrammed default
  1261                           ;	Write Protection bit
  1262                           ;	WRT1 = 0x1, unprogrammed default
  1263                           ;	Write Protection bit
  1264                           ;	WRT2 = 0x1, unprogrammed default
  1265                           ;	Write Protection bit
  1266                           ;	WRT3 = 0x1, unprogrammed default
  1267  30000A                     	org	3145738
  1268  30000A  0F                 	db	15
  1269                           
  1270                           ;Config register CONFIG6H @ 0x30000B
  1271                           ;	unspecified, using default values
  1272                           ;	Configuration Register Write Protection bit
  1273                           ;	WRTC = 0x1, unprogrammed default
  1274                           ;	Boot Block Write Protection bit
  1275                           ;	WRTB = 0x1, unprogrammed default
  1276                           ;	Data EEPROM Write Protection bit
  1277                           ;	WRTD = 0x1, unprogrammed default
  1278  30000B                     	org	3145739
  1279  30000B  E0                 	db	224
  1280                           
  1281                           ;Config register CONFIG7L @ 0x30000C
  1282                           ;	unspecified, using default values
  1283                           ;	Table Read Protection bit
  1284                           ;	EBTR0 = 0x1, unprogrammed default
  1285                           ;	Table Read Protection bit
  1286                           ;	EBTR1 = 0x1, unprogrammed default
  1287                           ;	Table Read Protection bit
  1288                           ;	EBTR2 = 0x1, unprogrammed default
  1289                           ;	Table Read Protection bit
  1290                           ;	EBTR3 = 0x1, unprogrammed default
  1291  30000C                     	org	3145740
  1292  30000C  0F                 	db	15
  1293                           
  1294                           ;Config register CONFIG7H @ 0x30000D
  1295                           ;	unspecified, using default values
  1296                           ;	Boot Block Table Read Protection bit
  1297                           ;	EBTRB = 0x1, unprogrammed default
  1298  30000D                     	org	3145741
  1299  30000D  40                 	db	64
  1300                           tosu	equ	0xFFF
  1301                           tosh	equ	0xFFE
  1302                           tosl	equ	0xFFD
  1303                           stkptr	equ	0xFFC
  1304                           pclatu	equ	0xFFB
  1305                           pclath	equ	0xFFA
  1306                           pcl	equ	0xFF9
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           prodh	equ	0xFF4
  1312                           prodl	equ	0xFF3
  1313                           indf0	equ	0xFEF
  1314                           postinc0	equ	0xFEE
  1315                           postdec0	equ	0xFED
  1316                           preinc0	equ	0xFEC
  1317                           plusw0	equ	0xFEB
  1318                           fsr0h	equ	0xFEA
  1319                           fsr0l	equ	0xFE9
  1320                           wreg	equ	0xFE8
  1321                           indf1	equ	0xFE7
  1322                           postinc1	equ	0xFE6
  1323                           postdec1	equ	0xFE5
  1324                           preinc1	equ	0xFE4
  1325                           plusw1	equ	0xFE3
  1326                           fsr1h	equ	0xFE2
  1327                           fsr1l	equ	0xFE1
  1328                           bsr	equ	0xFE0
  1329                           indf2	equ	0xFDF
  1330                           postinc2	equ	0xFDE
  1331                           postdec2	equ	0xFDD
  1332                           preinc2	equ	0xFDC
  1333                           plusw2	equ	0xFDB
  1334                           fsr2h	equ	0xFDA
  1335                           fsr2l	equ	0xFD9
  1336                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24      58
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    create_task@func	PTR FTN()void  size(2) Largest target is 1
		 -> yellow_led(), green_led(), blue_led(), 

    S29TCB$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> yellow_led(), green_led(), blue_led(), 

    task_list.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> yellow_led(), green_led(), blue_led(), 


Critical Paths under _main in COMRAM

    _main->_create_task
    _create_task->___wmul

Critical Paths under _interrup0 in COMRAM

    _scheduler->___awmod
    _scheduler->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrup0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrup0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrup0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrup0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrup0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrup0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1367
                        _create_task
 ---------------------------------------------------------------------------------
 (1) _create_task                                          6     2      4    1367
                                             18 COMRAM     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     867
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrup0                                            6     6      0     659
                                              6 COMRAM     6     6      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (4) _scheduler                                            0     0      0     659
                            ___awmod
                           _blue_led *
                          _green_led *
                         _yellow_led *
                           i2___wmul
 ---------------------------------------------------------------------------------
 (5) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _yellow_led                                           1     1      0       0
                                              0 COMRAM     1     1      0
                          _led_reset
 ---------------------------------------------------------------------------------
 (5) _green_led                                            1     1      0       0
                                              0 COMRAM     1     1      0
                          _led_reset
 ---------------------------------------------------------------------------------
 (5) _blue_led                                             1     1      0       0
                                              0 COMRAM     1     1      0
                          _led_reset
 ---------------------------------------------------------------------------------
 (6) _led_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _create_task
     ___wmul

 _interrup0 (ROOT)
   _scheduler
     ___awmod
     _blue_led *
       _led_reset
     _green_led *
       _led_reset
     _yellow_led *
       _led_reset
     i2___wmul *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      3A       1       46.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      15        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Nov 14 11:26:30 2020

           fp__green_led 0000                       l31 025A                       l32 025A  
                     l37 016E                       l66 0364    create_task@prioridade 0035  
    ___wmul@multiplicand 0031                      l901 021E                      l903 0232  
                    l841 0340                      l905 0246                      l843 035C  
                    l891 016A                      l889 00C2                      l897 01FA  
                    l899 0212             ___awmod@sign 0028                      tosl 000FFD  
                    wreg 000FE8                     i2l40 02C0                     i2l43 03AE  
                   i2l52 0316                     i2l60 01C6                     i2l55 02EC  
                   i2l63 01DE                     i2l49 033E                     i2l66 038A  
                   _main 01FA                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 003B                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ?_main 0023          __end_of___awmod 00C2                    i2l310 00C0  
                  i2l741 0318                    i2l751 02C6                    i2l743 031C  
                  i2l911 01B0                    i2l745 02EE                    i2l921 01D8  
                  i2l913 01B4                    i2l851 0024                    i2l739 03A6  
                  i2l747 02F2                    i2l923 01DC                    i2l915 01B8  
                  i2l907 018A                    i2l861 0058                    i2l853 002C  
                  i2l749 02C2                    i2l917 01C0                    i2l909 0198  
                  i2l871 0094                    i2l863 0060                    i2l855 0030  
                  i2l847 0012                    i2l919 01D4                    i2l873 009A  
                  i2l865 0068                    i2l857 003E                    i2l849 0016  
                  i2l867 0076                    i2l875 00A0                    i2l859 0046  
                  i2l883 0366                    i2l877 00B0                    i2l869 008C  
                  i2l885 0382                    i2l893 0262                    i2l879 00B8  
                  i2l895 0282                    _TMR0L 000FD6          create_task@func 0037  
                  pclath 000FFA             _running_task 001F         __end_ofi2___wmul 038C  
                  ttemp5 003C                    ttemp6 003F                    ttemp7 0043  
                  status 000FD8                    wtemp8 003C            fp__yellow_led 0000  
        __initialization 038C             __end_of_main 0262                   ??_main 003B  
          __activetblptr 000002                   i2u1_40 032C                   i2u1_41 0326  
                 i2u1_46 032E                   i2u2_40 0302                   i2u2_41 02FC  
                 i2u2_46 0304                   i2u3_40 02D6                   i2u3_41 02D0  
                 i2u3_46 02D8     __size_of_create_task 00AE         __end_of_blue_led 0340  
                 ___wmul 0340                ??___awmod 0027                   clear_0 0392  
        ___awmod@divisor 0025          ___awmod@counter 0027                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0398            ___rparam_used 000001  
         __pcstackCOMRAM 0023                ?i2___wmul 0023       __size_of_led_reset 000A  
     __size_of_green_led 002A       __size_of_interrup0 01F2       __size_of_scheduler 0060  
                ?___wmul 002F               ??i2___wmul 0027                  i2u20_40 00B0  
                i2u20_41 00AC                  i2u21_48 02AC                  i2u22_40 0198  
                i2u21_49 02C0                  i2u22_41 0194                  i2u15_40 0024  
                i2u23_40 01B0                  i2u15_41 0020                  i2u23_41 01AC  
                i2u16_40 003E                  i2u24_40 01D4                  i2u16_41 003A  
                i2u24_41 01D0                  i2u17_40 0058                  i2u17_41 0054  
                i2u18_40 0076                  i2u18_41 0072                  i2u19_40 008C  
                i2u19_41 0088                ?_blue_led 0023                  __Hparam 0000  
                __Lparam 0000                  ___awmod 0012          __size_of___wmul 0026  
      __end_of_led_reset 03B0                  __pcinit 038C                  __ramtop 0600  
      __end_of_green_led 0318                  __ptext0 01FA                  __ptext1 00C2  
                __ptext2 0340                  __ptext4 0262                  __ptext5 0366  
                __ptext6 02EE                  __ptext7 0318                  __ptext8 02C2  
                __ptext9 03A6                _T0CONbits 000FD5         ___awmod@dividend 0023  
      __end_of_interrup0 01FA                  _quantum 001D               ??_blue_led 0023  
      __end_of_scheduler 02C2           __pintcode_body 0170     end_of_initialization 0398  
          __Lmediumconst 0000                  int_func 0170      i2___wmul@multiplier 0023  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTDbits 000F83                _TRISDbits 000F95            ??_create_task 0039  
             _yellow_led 02C2           __end_of___wmul 0366         i2___wmul@product 0027  
    start_initialization 038C        __size_ofi2___wmul 0026      __end_of_create_task 0170  
               ??___wmul 0033              __pbssCOMRAM 0001        __size_of_blue_led 0028  
            ?_yellow_led 0023                __pintcode 0008                 ?___awmod 0023  
              _led_reset 03A6                _green_led 02EE                _interrup0 0008  
              _scheduler 0262              _create_task 00C2           ___wmul@product 0033  
              _task_list 0001        ___wmul@multiplier 002F               ?_led_reset 0023  
               i2___wmul 0366      __size_of_yellow_led 002C               ?_green_led 0023  
             ?_interrup0 0023               ?_scheduler 0023                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awmod 00B0    i2___wmul@multiplicand 0025  
               __ptext10 0012                 __ptext11 0000                 _blue_led 0318  
           _task_counter 0021            __size_of_main 0068                 int$flags 003B  
            ??_led_reset 0023               _INTCONbits 000FF2              ??_green_led 0023  
               intlevel2 0000              ??_interrup0 0029             ??_yellow_led 0023  
            ??_scheduler 0029       __end_of_yellow_led 02EE             ?_create_task 0035  
            fp__blue_led 0000  
