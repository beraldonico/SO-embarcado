

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 05 00:53:07 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  000C46                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _quantum
    83  000C46  000C               	dw	12
    84  0000                     _TOS	set	4093
    85  0000                     _TMR0L	set	4054
    86  0000                     _TRISDbits	set	3989
    87  0000                     _PORTDbits	set	3971
    88  0000                     _T0CONbits	set	4053
    89  0000                     _STKPTR	set	4092
    90  0000                     _STATUS	set	4056
    91  0000                     _BSR	set	4064
    92  0000                     _WREG	set	4072
    93  0000                     _INTCONbits	set	4082
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98  000ACC                     __pcinit:
    99                           	callstack 0
   100  000ACC                     start_initialization:
   101                           	callstack 0
   102  000ACC                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (2 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107  000ACC  0E46               	movlw	low __pidataCOMRAM
   108  000ACE  6EF6               	movwf	tblptrl,c
   109  000AD0  0E0C               	movlw	high __pidataCOMRAM
   110  000AD2  6EF7               	movwf	tblptrh,c
   111  000AD4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112  000AD6  6EF8               	movwf	tblptru,c
   113  000AD8  0009               	tblrd		*+	;fetch initializer
   114  000ADA  CFF5 F01C          	movff	tablat,__pdataCOMRAM
   115  000ADE  0009               	tblrd		*+	;fetch initializer
   116  000AE0  CFF5 F01D          	movff	tablat,__pdataCOMRAM+1
   117                           
   118                           ; Clear objects allocated to BANK2 (234 bytes)
   119  000AE4  EE02  F000         	lfsr	0,__pbssBANK2
   120  000AE8  0EEA               	movlw	234
   121  000AEA                     clear_0:
   122  000AEA  6AEE               	clrf	postinc0,c
   123  000AEC  06E8               	decf	wreg,f,c
   124  000AEE  E1FD               	bnz	clear_0
   125                           
   126                           ; Clear objects allocated to BANK0 (2 bytes)
   127  000AF0  0100               	movlb	0
   128  000AF2  6B81               	clrf	(__pbssBANK0+1)& (0+255),b
   129  000AF4  6B80               	clrf	__pbssBANK0& (0+255),b
   130  000AF6                     end_of_initialization:
   131                           	callstack 0
   132  000AF6                     __end_of__initialization:
   133                           	callstack 0
   134  000AF6  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  000AF8  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  000AFA  0100               	movlb	0
   137  000AFC  EF06  F005         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	dataCOMRAM
   140  00001C                     __pdataCOMRAM:
   141                           	callstack 0
   142  00001C                     _quantum:
   143                           	callstack 0
   144  00001C                     	ds	2
   145                           
   146                           	psect	bssBANK0
   147  000080                     __pbssBANK0:
   148                           	callstack 0
   149  000080                     _index:
   150                           	callstack 0
   151  000080                     	ds	2
   152                           
   153                           	psect	bssBANK2
   154  000200                     __pbssBANK2:
   155                           	callstack 0
   156  000200                     _f_aptos:
   157                           	callstack 0
   158  000200                     	ds	234
   159                           
   160                           	psect	cstackBANK3
   161  000300                     __pcstackBANK3:
   162                           	callstack 0
   163  000300                     task_create@new_task:
   164                           	callstack 0
   165                           
   166                           ; 46 bytes @ 0x0
   167  000300                     	ds	46
   168                           
   169                           	psect	cstackBANK1
   170  000100                     __pcstackBANK1:
   171                           	callstack 0
   172  000100                     	ds	86
   173  000156                     ?___lwmod:
   174                           	callstack 0
   175  000156                     ?i1___wmul:
   176                           	callstack 0
   177  000156                     ___lwmod@dividend:
   178                           	callstack 0
   179  000156                     i1___wmul@multiplier:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x56
   183  000156                     	ds	2
   184  000158                     ___lwmod@divisor:
   185                           	callstack 0
   186  000158                     i1___wmul@multiplicand:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x58
   190  000158                     	ds	2
   191  00015A                     ___lwmod@counter:
   192                           	callstack 0
   193  00015A                     i1___wmul@product:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x5A
   197  00015A                     	ds	2
   198  00015C                     ?_rr_scheduler:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x5C
   202  00015C                     	ds	2
   203  00015E                     rr_scheduler@next_task:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x5E
   207  00015E                     	ds	2
   208  000160                     ?_scheduler:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x60
   212  000160                     	ds	2
   213  000162                     task_delay@ms:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x62
   217  000162                     	ds	2
   218  000164                     ??_task_delay:
   219                           
   220                           ; 1 bytes @ 0x64
   221  000164                     	ds	3
   222  000167                     ??_task_3:
   223                           
   224                           ; 1 bytes @ 0x67
   225  000167                     	ds	1
   226  000168                     ?___wmul:
   227                           	callstack 0
   228  000168                     ___wmul@multiplier:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x68
   232  000168                     	ds	2
   233  00016A                     ___wmul@multiplicand:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x6A
   237  00016A                     	ds	2
   238  00016C                     ___wmul@product:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x6C
   242  00016C                     	ds	2
   243  00016E                     task_create@prior:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x6E
   247  00016E                     	ds	2
   248  000170                     task_create@func:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x70
   252  000170                     	ds	2
   253  000172                     
   254                           ; 1 bytes @ 0x72
   255                           
   256                           	psect	cstackCOMRAM
   257  000001                     __pcstackCOMRAM:
   258                           	callstack 0
   259  000001                     ?i2___wmul:
   260                           	callstack 0
   261  000001                     ?i2___lwmod:
   262                           	callstack 0
   263  000001                     i2___wmul@multiplier:
   264                           	callstack 0
   265  000001                     i2___lwmod@dividend:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x0
   269  000001                     	ds	2
   270  000003                     i2___wmul@multiplicand:
   271                           	callstack 0
   272  000003                     i2___lwmod@divisor:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x2
   276  000003                     	ds	2
   277  000005                     i2___lwmod@counter:
   278                           	callstack 0
   279  000005                     i2___wmul@product:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x4
   283  000005                     	ds	2
   284  000007                     ?_controle_delay:
   285                           	callstack 0
   286  000007                     ?i2_rr_scheduler:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x6
   290  000007                     	ds	2
   291  000009                     i2rr_scheduler@next_task:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x8
   295  000009                     	ds	2
   296  00000B                     ?i2_scheduler:
   297                           	callstack 0
   298  00000B                     controle_delay@flag:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xA
   302  00000B                     	ds	2
   303  00000D                     controle_delay@i:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xC
   307  00000D                     	ds	2
   308  00000F                     ??_IRQ_Timer0:
   309                           
   310                           ; 1 bytes @ 0xE
   311  00000F                     	ds	10
   312  000019                     ??_task_idle:
   313                           
   314                           ; 1 bytes @ 0x18
   315  000019                     	ds	1
   316  00001A                     ??_task_1:
   317                           
   318                           ; 1 bytes @ 0x19
   319  00001A                     	ds	1
   320  00001B                     ??_task_2:
   321                           
   322                           ; 1 bytes @ 0x1A
   323  00001B                     	ds	1
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 17 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   344 ;;      Params:         0       0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called:   12
   350 ;; This function calls:
   351 ;;		_os_config
   352 ;;		_os_start
   353 ;;		_task_create
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text0
   360  000A0C                     __ptext0:
   361                           	callstack 0
   362  000A0C                     _main:
   363                           	callstack 19
   364  000A0C                     
   365                           ;main.c: 19:    os_config();
   366  000A0C  EC9A  F005         	call	_os_config	;wreg free
   367                           
   368                           ;main.c: 22:    task_create(2, &task_1);
   369  000A10  0E00               	movlw	0
   370  000A12  0101               	movlb	1	; () banked
   371  000A14  6F6F               	movwf	(task_create@prior+1)& (0+255),b
   372  000A16  0E02               	movlw	2
   373  000A18  6F6E               	movwf	task_create@prior& (0+255),b
   374  000A1A  0E00               	movlw	low _task_1
   375  000A1C  6F70               	movwf	task_create@func& (0+255),b
   376  000A1E  0E0B               	movlw	high _task_1
   377  000A20  6F71               	movwf	(task_create@func+1)& (0+255),b
   378  000A22  EC38  F004         	call	_task_create	;wreg free
   379                           
   380                           ;main.c: 23:    task_create(2, &task_2);
   381  000A26  0E00               	movlw	0
   382  000A28  0101               	movlb	1	; () banked
   383  000A2A  6F6F               	movwf	(task_create@prior+1)& (0+255),b
   384  000A2C  0E02               	movlw	2
   385  000A2E  6F6E               	movwf	task_create@prior& (0+255),b
   386  000A30  0E96               	movlw	low _task_2
   387  000A32  6F70               	movwf	task_create@func& (0+255),b
   388  000A34  0E0A               	movlw	high _task_2
   389  000A36  6F71               	movwf	(task_create@func+1)& (0+255),b
   390  000A38  EC38  F004         	call	_task_create	;wreg free
   391                           
   392                           ;main.c: 24:    task_create(3, &task_3);
   393  000A3C  0E00               	movlw	0
   394  000A3E  0101               	movlb	1	; () banked
   395  000A40  6F6F               	movwf	(task_create@prior+1)& (0+255),b
   396  000A42  0E03               	movlw	3
   397  000A44  6F6E               	movwf	task_create@prior& (0+255),b
   398  000A46  0E5E               	movlw	low _task_3
   399  000A48  6F70               	movwf	task_create@func& (0+255),b
   400  000A4A  0E0A               	movlw	high _task_3
   401  000A4C  6F71               	movwf	(task_create@func+1)& (0+255),b
   402  000A4E  EC38  F004         	call	_task_create	;wreg free
   403  000A52                     
   404                           ;main.c: 27:    os_start();
   405  000A52  EC20  F006         	call	_os_start	;wreg free
   406  000A56                     l19:
   407  000A56  EF2B  F005         	goto	l19
   408  000A5A  EF07  F000         	goto	start
   409  000A5E                     __end_of_main:
   410                           	callstack 0
   411                           
   412 ;; *************** function _os_start *****************
   413 ;; Defined at:
   414 ;;		line 49 in file "kernel.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		None
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   428 ;;      Params:         0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels used:    1
   434 ;; Hardware stack levels required when called:    9
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text1
   443  000C40                     __ptext1:
   444                           	callstack 0
   445  000C40                     _os_start:
   446                           	callstack 21
   447  000C40                     
   448                           ;kernel.c: 54:    INTCONbits.GIE = 1;
   449  000C40  8EF2               	bsf	242,7,c	;volatile
   450                           
   451                           ;kernel.c: 57:    T0CONbits.TMR0ON = 1;
   452  000C42  8ED5               	bsf	213,7,c	;volatile
   453  000C44  0012               	return		;funcret
   454  000C46                     __end_of_os_start:
   455                           	callstack 0
   456                           
   457 ;; *************** function _os_config *****************
   458 ;; Defined at:
   459 ;;		line 60 in file "kernel.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   473 ;;      Params:         0       0       0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:   11
   480 ;; This function calls:
   481 ;;		_config_tasks
   482 ;;		_setup_timer_0
   483 ;;		_task_create
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  000B34                     __ptext2:
   491                           	callstack 0
   492  000B34                     _os_config:
   493                           	callstack 19
   494  000B34                     
   495                           ;kernel.c: 66:    f_aptos.task_running = 0;
   496  000B34  0E00               	movlw	0
   497  000B36  0102               	movlb	2	; () banked
   498  000B38  6FE9               	movwf	(_f_aptos+233)& (0+255),b
   499  000B3A  0E00               	movlw	0
   500  000B3C  6FE8               	movwf	(_f_aptos+232)& (0+255),b
   501                           
   502                           ;kernel.c: 67:    f_aptos.ready_queue_size = 0;
   503  000B3E  0E00               	movlw	0
   504  000B40  6FE7               	movwf	(_f_aptos+231)& (0+255),b
   505  000B42  0E00               	movlw	0
   506  000B44  6FE6               	movwf	(_f_aptos+230)& (0+255),b
   507  000B46                     
   508                           ; BSR set to: 2
   509                           ;kernel.c: 70:    setup_timer_0();
   510  000B46  EC04  F006         	call	_setup_timer_0	;wreg free
   511  000B4A                     
   512                           ;kernel.c: 73:    task_create(0, &task_idle);
   513  000B4A  0E00               	movlw	0
   514  000B4C  0101               	movlb	1	; () banked
   515  000B4E  6F6F               	movwf	(task_create@prior+1)& (0+255),b
   516  000B50  0E00               	movlw	0
   517  000B52  6F6E               	movwf	task_create@prior& (0+255),b
   518  000B54  0E66               	movlw	low _task_idle
   519  000B56  6F70               	movwf	task_create@func& (0+255),b
   520  000B58  0E0B               	movlw	high _task_idle
   521  000B5A  6F71               	movwf	(task_create@func+1)& (0+255),b
   522  000B5C  EC38  F004         	call	_task_create	;wreg free
   523  000B60                     
   524                           ;kernel.c: 76:    config_tasks();
   525  000B60  EC1B  F006         	call	_config_tasks	;wreg free
   526  000B64  0012               	return		;funcret
   527  000B66                     __end_of_os_config:
   528                           	callstack 0
   529                           
   530 ;; *************** function _task_create *****************
   531 ;; Defined at:
   532 ;;		line 34 in file "kernel.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  prior           2  110[BANK1 ] unsigned int 
   535 ;;  func            2  112[BANK1 ] PTR FTN()void 
   536 ;;		 -> task_idle(1), task_3(1), task_2(1), task_1(1), 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  new_task       46    0[BANK3 ] struct tcb
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   548 ;;      Params:         0       0       4       0       0       0       0
   549 ;;      Locals:         0       0       0       0      46       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0
   551 ;;      Totals:         0       0       4       0      46       0       0
   552 ;;Total ram usage:       50 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:   10
   555 ;; This function calls:
   556 ;;		___wmul
   557 ;; This function is called by:
   558 ;;		_main
   559 ;;		_os_config
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text3
   564  000870                     __ptext3:
   565                           	callstack 0
   566  000870                     _task_create:
   567                           	callstack 20
   568  000870                     
   569                           ;kernel.c: 34: void task_create(u_int prior, task_ptr func);kernel.c: 35: {;kernel.c: 36
      +                          :    tcb_t new_task;;kernel.c: 38:    new_task.task_id = f_aptos.ready_queue_size + 1;
   570  000870  0E01               	movlw	1
   571  000872  0102               	movlb	2	; () banked
   572  000874  25E6               	addwf	(_f_aptos+230)& (0+255),w,b
   573  000876  0103               	movlb	3	; () banked
   574  000878  6F00               	movwf	task_create@new_task& (0+255),b
   575  00087A  0E00               	movlw	0
   576  00087C  0102               	movlb	2	; () banked
   577  00087E  21E7               	addwfc	(_f_aptos+231)& (0+255),w,b
   578  000880  0103               	movlb	3	; () banked
   579  000882  6F01               	movwf	(task_create@new_task+1)& (0+255),b
   580  000884                     
   581                           ; BSR set to: 3
   582                           ;kernel.c: 39:    new_task.task_prior = prior;
   583  000884  C16E  F303         	movff	task_create@prior,task_create@new_task+3
   584  000888  C16F  F304         	movff	task_create@prior+1,task_create@new_task+4
   585  00088C                     
   586                           ; BSR set to: 3
   587                           ;kernel.c: 40:    new_task.task_state = READY;
   588  00088C  0E00               	movlw	0
   589  00088E  6F02               	movwf	(task_create@new_task+2)& (0+255),b
   590  000890                     
   591                           ; BSR set to: 3
   592                           ;kernel.c: 41:    new_task.task_func = func;
   593  000890  C170  F305         	movff	task_create@func,task_create@new_task+5
   594  000894  C171  F306         	movff	task_create@func+1,task_create@new_task+6
   595                           
   596                           ;kernel.c: 42:    new_task.task_stack.size = 0;
   597  000898  0E00               	movlw	0
   598  00089A  6F28               	movwf	(task_create@new_task+40)& (0+255),b
   599  00089C  0E00               	movlw	0
   600  00089E  6F27               	movwf	(task_create@new_task+39)& (0+255),b
   601  0008A0                     
   602                           ; BSR set to: 3
   603                           ;kernel.c: 45:    f_aptos.ready_queue[f_aptos.ready_queue_size+1] = new_task;
   604  0008A0  EE23  F000         	lfsr	2,task_create@new_task
   605  0008A4  C2E6  F168         	movff	_f_aptos+230,___wmul@multiplier
   606  0008A8  C2E7  F169         	movff	_f_aptos+231,___wmul@multiplier+1
   607  0008AC  0E00               	movlw	0
   608  0008AE  0101               	movlb	1	; () banked
   609  0008B0  6F6B               	movwf	(___wmul@multiplicand+1)& (0+255),b
   610  0008B2  0E2E               	movlw	46
   611  0008B4  6F6A               	movwf	___wmul@multiplicand& (0+255),b
   612  0008B6  ECC9  F005         	call	___wmul	;wreg free
   613  0008BA  0E2E               	movlw	low (_f_aptos+46)
   614  0008BC  0101               	movlb	1	; () banked
   615  0008BE  2568               	addwf	?___wmul& (0+255),w,b
   616  0008C0  6EE1               	movwf	fsr1l,c
   617  0008C2  0E02               	movlw	high (_f_aptos+46)
   618  0008C4  2169               	addwfc	(?___wmul+1)& (0+255),w,b
   619  0008C6  6EE2               	movwf	fsr1h,c
   620  0008C8  0E2D               	movlw	45
   621  0008CA                     u1461:
   622  0008CA  CFDB FFE3          	movff	plusw2,plusw1
   623  0008CE  06E8               	decf	wreg,f,c
   624  0008D0  E2FC               	bc	u1461
   625  0008D2                     
   626                           ; BSR set to: 1
   627                           ;kernel.c: 46:    f_aptos.ready_queue_size++;
   628  0008D2  0102               	movlb	2	; () banked
   629  0008D4  4BE6               	infsnz	(_f_aptos+230)& (0+255),f,b
   630  0008D6  2BE7               	incf	(_f_aptos+231)& (0+255),f,b
   631  0008D8                     
   632                           ; BSR set to: 2
   633  0008D8  0012               	return		;funcret
   634  0008DA                     __end_of_task_create:
   635                           	callstack 0
   636                           
   637 ;; *************** function ___wmul *****************
   638 ;; Defined at:
   639 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  multiplier      2  104[BANK1 ] unsigned int 
   642 ;;  multiplicand    2  106[BANK1 ] unsigned int 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  product         2  108[BANK1 ] unsigned int 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2  104[BANK1 ] unsigned int 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, prodl, prodh
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:         0       0       4       0       0       0       0
   655 ;;      Locals:         0       0       2       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0
   657 ;;      Totals:         0       0       6       0       0       0       0
   658 ;;Total ram usage:        6 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    9
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_task_create
   665 ;;		_get_task_id
   666 ;;		_sem_wait
   667 ;;		_sem_post
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text4
   672  000B92                     __ptext4:
   673                           	callstack 0
   674  000B92                     ___wmul:
   675                           	callstack 20
   676  000B92  0101               	movlb	1	; () banked
   677  000B94  5168               	movf	___wmul@multiplier& (0+255),w,b
   678  000B96  036A               	mulwf	___wmul@multiplicand& (0+255),b
   679  000B98  CFF3 F16C          	movff	prodl,___wmul@product
   680  000B9C  CFF4 F16D          	movff	prodh,___wmul@product+1
   681  000BA0  5168               	movf	___wmul@multiplier& (0+255),w,b
   682  000BA2  036B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   683  000BA4  50F3               	movf	243,w,c
   684  000BA6  276D               	addwf	(___wmul@product+1)& (0+255),f,b
   685  000BA8  5169               	movf	(___wmul@multiplier+1)& (0+255),w,b
   686  000BAA  036A               	mulwf	___wmul@multiplicand& (0+255),b
   687  000BAC  50F3               	movf	243,w,c
   688  000BAE  276D               	addwf	(___wmul@product+1)& (0+255),f,b
   689  000BB0                     
   690                           ; BSR set to: 1
   691  000BB0  C16C  F168         	movff	___wmul@product,?___wmul
   692  000BB4  C16D  F169         	movff	___wmul@product+1,?___wmul+1
   693  000BB8                     
   694                           ; BSR set to: 1
   695  000BB8  0012               	return		;funcret
   696  000BBA                     __end_of___wmul:
   697                           	callstack 0
   698                           
   699 ;; *************** function _setup_timer_0 *****************
   700 ;; Defined at:
   701 ;;		line 15 in file "timer.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    9
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_os_config
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text5
   730  000C08                     __ptext5:
   731                           	callstack 0
   732  000C08                     _setup_timer_0:
   733                           	callstack 20
   734  000C08                     
   735                           ;timer.c: 18:    INTCONbits.TMR0IE = 1;
   736  000C08  8AF2               	bsf	242,5,c	;volatile
   737                           
   738                           ;timer.c: 19:    INTCONbits.PEIE = 1;
   739  000C0A  8CF2               	bsf	242,6,c	;volatile
   740                           
   741                           ;timer.c: 20:    T0CONbits.T0CS = 0;
   742  000C0C  9AD5               	bcf	213,5,c	;volatile
   743                           
   744                           ;timer.c: 21:    T0CONbits.PSA = 0;
   745  000C0E  96D5               	bcf	213,3,c	;volatile
   746  000C10                     
   747                           ;timer.c: 22:    T0CONbits.T0PS = 0b111;
   748  000C10  0E07               	movlw	7
   749  000C12  12D5               	iorwf	213,f,c	;volatile
   750                           
   751                           ;timer.c: 23:    TMR0L = 0;
   752  000C14  0E00               	movlw	0
   753  000C16  6ED6               	movwf	214,c	;volatile
   754  000C18  0012               	return		;funcret
   755  000C1A                     __end_of_setup_timer_0:
   756                           	callstack 0
   757                           
   758 ;; *************** function _config_tasks *****************
   759 ;; Defined at:
   760 ;;		line 11 in file "tasks.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		None
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   774 ;;      Params:         0       0       0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    9
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_os_config
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text6
   789  000C36                     __ptext6:
   790                           	callstack 0
   791  000C36                     _config_tasks:
   792                           	callstack 20
   793  000C36                     
   794                           ;tasks.c: 13:    TRISDbits.RD0 = 0;
   795  000C36  9095               	bcf	149,0,c	;volatile
   796                           
   797                           ;tasks.c: 14:    TRISDbits.RD1 = 0;
   798  000C38  9295               	bcf	149,1,c	;volatile
   799                           
   800                           ;tasks.c: 15:    TRISDbits.RD2 = 0;
   801  000C3A  9495               	bcf	149,2,c	;volatile
   802                           
   803                           ;tasks.c: 16:    TRISDbits.RD3 = 0;
   804  000C3C  9695               	bcf	149,3,c	;volatile
   805  000C3E  0012               	return		;funcret
   806  000C40                     __end_of_config_tasks:
   807                           	callstack 0
   808                           
   809 ;; *************** function _task_idle *****************
   810 ;; Defined at:
   811 ;;		line 79 in file "kernel.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   825 ;;      Params:         0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0
   827 ;;      Temps:          1       0       0       0       0       0       0
   828 ;;      Totals:         1       0       0       0       0       0       0
   829 ;;Total ram usage:        1 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    4
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_os_config
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text7
   840  000B66                     __ptext7:
   841                           	callstack 0
   842  000B66                     _task_idle:
   843                           	callstack 23
   844  000B66                     l81:
   845  000B66                     
   846                           ;kernel.c: 83:       PORTDbits.RD3 = ~PORTDbits.RD3;
   847  000B66  B683               	btfsc	131,3,c	;volatile
   848  000B68  EFB8  F005         	goto	u17_21
   849  000B6C  EFBB  F005         	goto	u17_20
   850  000B70                     u17_21:
   851  000B70  0E01               	movlw	1
   852  000B72  EFBC  F005         	goto	u17_26
   853  000B76                     u17_20:
   854  000B76  0E00               	movlw	0
   855  000B78                     u17_26:
   856  000B78  0AFF               	xorlw	255
   857  000B7A  6E19               	movwf	??_task_idle^0,c
   858  000B7C  4619               	rlncf	??_task_idle^0,f,c
   859  000B7E  4619               	rlncf	??_task_idle^0,f,c
   860  000B80  4619               	rlncf	??_task_idle^0,f,c
   861  000B82  5083               	movf	131,w,c	;volatile
   862  000B84  1819               	xorwf	??_task_idle^0,w,c
   863  000B86  0BF7               	andlw	-9
   864  000B88  1819               	xorwf	??_task_idle^0,w,c
   865  000B8A  6E83               	movwf	131,c	;volatile
   866  000B8C  EFB3  F005         	goto	l81
   867  000B90  0012               	return		;funcret
   868  000B92                     __end_of_task_idle:
   869                           	callstack 0
   870                           
   871 ;; *************** function _task_1 *****************
   872 ;; Defined at:
   873 ;;		line 19 in file "tasks.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   887 ;;      Params:         0       0       0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0
   889 ;;      Temps:          1       0       0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    8
   894 ;; This function calls:
   895 ;;		_task_delay
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text8
   902  000B00                     __ptext8:
   903                           	callstack 0
   904  000B00                     _task_1:
   905                           	callstack 19
   906  000B00                     l99:
   907  000B00                     
   908                           ;tasks.c: 22:       PORTDbits.RD0 = ~PORTDbits.RD0;
   909  000B00  B083               	btfsc	131,0,c	;volatile
   910  000B02  EF85  F005         	goto	u138_21
   911  000B06  EF88  F005         	goto	u138_20
   912  000B0A                     u138_21:
   913  000B0A  0E01               	movlw	1
   914  000B0C  EF89  F005         	goto	u138_26
   915  000B10                     u138_20:
   916  000B10  0E00               	movlw	0
   917  000B12                     u138_26:
   918  000B12  0AFF               	xorlw	255
   919  000B14  6E1A               	movwf	??_task_1^0,c
   920  000B16  5083               	movf	131,w,c	;volatile
   921  000B18  181A               	xorwf	??_task_1^0,w,c
   922  000B1A  0BFE               	andlw	-2
   923  000B1C  181A               	xorwf	??_task_1^0,w,c
   924  000B1E  6E83               	movwf	131,c	;volatile
   925  000B20                     
   926                           ;tasks.c: 23:       task_delay(500);
   927  000B20  0E01               	movlw	1
   928  000B22  0101               	movlb	1	; () banked
   929  000B24  6F63               	movwf	(task_delay@ms+1)& (0+255),b
   930  000B26  0EF4               	movlw	244
   931  000B28  6F62               	movwf	task_delay@ms& (0+255),b
   932  000B2A  EC09  F000         	call	_task_delay	;wreg free
   933  000B2E  EF80  F005         	goto	l99
   934  000B32  0012               	return		;funcret
   935  000B34                     __end_of_task_1:
   936                           	callstack 0
   937                           
   938 ;; *************** function _task_delay *****************
   939 ;; Defined at:
   940 ;;		line 18 in file "kernel.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  ms              2   98[BANK1 ] unsigned int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         0       0       2       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0
   956 ;;      Temps:          0       0       3       0       0       0       0
   957 ;;      Totals:         0       0       5       0       0       0       0
   958 ;;Total ram usage:        5 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    7
   961 ;; This function calls:
   962 ;;		_scheduler
   963 ;;		i1___wmul
   964 ;; This function is called by:
   965 ;;		_task_1
   966 ;;		_task_2
   967 ;;		_task_3
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text9
   972  000012                     __ptext9:
   973                           	callstack 0
   974  000012                     _task_delay:
   975                           	callstack 19
   976  000012                     
   977                           ;kernel.c: 18: void task_delay(u_int ms);kernel.c: 19: {;kernel.c: 21:    INTCONbits.GIE
      +                           = 0;
   978  000012  9EF2               	bcf	242,7,c	;volatile
   979  000014  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
   980  000018  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
   981  00001C  0E00               	movlw	0
   982  00001E  0101               	movlb	1	; () banked
   983  000020  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
   984  000022  0E2E               	movlw	46
   985  000024  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
   986  000026  ECDD  F005         	call	i1___wmul	;wreg free
   987  00002A  0E27               	movlw	low (_f_aptos+39)
   988  00002C  0101               	movlb	1	; () banked
   989  00002E  2556               	addwf	?i1___wmul& (0+255),w,b
   990  000030  6ED9               	movwf	fsr2l,c
   991  000032  0E02               	movlw	high (_f_aptos+39)
   992  000034  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
   993  000036  6EDA               	movwf	fsr2h,c
   994  000038  50DE               	movf	postinc2,w,c
   995  00003A  10DE               	iorwf	postinc2,w,c
   996  00003C  B4D8               	btfsc	status,2,c
   997  00003E  EF23  F000         	goto	i1u134_21
   998  000042  EF25  F000         	goto	i1u134_20
   999  000046                     i1u134_21:
  1000  000046  EFBE  F000         	goto	i1l2139
  1001  00004A                     i1u134_20:
  1002  00004A                     
  1003                           ; BSR set to: 1
  1004  00004A  0E00               	movlw	0
  1005  00004C  0100               	movlb	0	; () banked
  1006  00004E  6F81               	movwf	(_index+1)& (0+255),b
  1007  000050  0E00               	movlw	0
  1008  000052  6F80               	movwf	_index& (0+255),b
  1009  000054                     
  1010                           ; BSR set to: 0
  1011  000054  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1012  000058  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1013  00005C  0E00               	movlw	0
  1014  00005E  0101               	movlb	1	; () banked
  1015  000060  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1016  000062  0E2E               	movlw	46
  1017  000064  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1018  000066  ECDD  F005         	call	i1___wmul	;wreg free
  1019  00006A  0E02               	movlw	low (_f_aptos+2)
  1020  00006C  0101               	movlb	1	; () banked
  1021  00006E  2556               	addwf	?i1___wmul& (0+255),w,b
  1022  000070  6ED9               	movwf	fsr2l,c
  1023  000072  0E02               	movlw	high (_f_aptos+2)
  1024  000074  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1025  000076  6EDA               	movwf	fsr2h,c
  1026  000078  0E03               	movlw	3
  1027  00007A  6EDF               	movwf	indf2,c
  1028  00007C                     
  1029                           ; BSR set to: 1
  1030  00007C  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1031  000080  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1032  000084  0E00               	movlw	0
  1033  000086  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1034  000088  0E2E               	movlw	46
  1035  00008A  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1036  00008C  ECDD  F005         	call	i1___wmul	;wreg free
  1037  000090  0E2A               	movlw	low (_f_aptos+42)
  1038  000092  0101               	movlb	1	; () banked
  1039  000094  2556               	addwf	?i1___wmul& (0+255),w,b
  1040  000096  6ED9               	movwf	fsr2l,c
  1041  000098  0E02               	movlw	high (_f_aptos+42)
  1042  00009A  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1043  00009C  6EDA               	movwf	fsr2h,c
  1044  00009E  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1045  0000A2                     
  1046                           ; BSR set to: 1
  1047  0000A2  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1048  0000A6  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1049  0000AA  0E00               	movlw	0
  1050  0000AC  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1051  0000AE  0E2E               	movlw	46
  1052  0000B0  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1053  0000B2  ECDD  F005         	call	i1___wmul	;wreg free
  1054  0000B6  0E29               	movlw	low (_f_aptos+41)
  1055  0000B8  0101               	movlb	1	; () banked
  1056  0000BA  2556               	addwf	?i1___wmul& (0+255),w,b
  1057  0000BC  6ED9               	movwf	fsr2l,c
  1058  0000BE  0E02               	movlw	high (_f_aptos+41)
  1059  0000C0  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1060  0000C2  6EDA               	movwf	fsr2h,c
  1061  0000C4  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1062  0000C8                     
  1063                           ; BSR set to: 1
  1064  0000C8  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1065  0000CC  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1066  0000D0  0E00               	movlw	0
  1067  0000D2  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1068  0000D4  0E2E               	movlw	46
  1069  0000D6  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1070  0000D8  ECDD  F005         	call	i1___wmul	;wreg free
  1071  0000DC  0E2B               	movlw	low (_f_aptos+43)
  1072  0000DE  0101               	movlb	1	; () banked
  1073  0000E0  2556               	addwf	?i1___wmul& (0+255),w,b
  1074  0000E2  6ED9               	movwf	fsr2l,c
  1075  0000E4  0E02               	movlw	high (_f_aptos+43)
  1076  0000E6  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1077  0000E8  6EDA               	movwf	fsr2h,c
  1078  0000EA  CFD8 FFDF          	movff	status,indf2	;volatile
  1079  0000EE                     
  1080                           ; BSR set to: 1
  1081  0000EE  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1082  0000F2  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1083  0000F6  0E00               	movlw	0
  1084  0000F8  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1085  0000FA  0E2E               	movlw	46
  1086  0000FC  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1087  0000FE  ECDD  F005         	call	i1___wmul	;wreg free
  1088  000102  0E27               	movlw	low (_f_aptos+39)
  1089  000104  0101               	movlb	1	; () banked
  1090  000106  2556               	addwf	?i1___wmul& (0+255),w,b
  1091  000108  6ED9               	movwf	fsr2l,c
  1092  00010A  0E02               	movlw	high (_f_aptos+39)
  1093  00010C  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1094  00010E  6EDA               	movwf	fsr2h,c
  1095  000110  0E00               	movlw	0
  1096  000112  6EDE               	movwf	postinc2,c
  1097  000114  0E00               	movlw	0
  1098  000116  6EDD               	movwf	postdec2,c
  1099  000118                     i1l2133:
  1100  000118  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1101  00011C  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1102  000120  0E00               	movlw	0
  1103  000122  0101               	movlb	1	; () banked
  1104  000124  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1105  000126  0E2E               	movlw	46
  1106  000128  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1107  00012A  ECDD  F005         	call	i1___wmul	;wreg free
  1108  00012E  0E00               	movlw	low _f_aptos
  1109  000130  0101               	movlb	1	; () banked
  1110  000132  6F64               	movwf	??_task_delay& (0+255),b
  1111  000134  0E02               	movlw	high _f_aptos
  1112  000136  6F65               	movwf	(??_task_delay+1)& (0+255),b
  1113  000138  0E07               	movlw	7
  1114  00013A  2764               	addwf	??_task_delay& (0+255),f,b
  1115  00013C  0E00               	movlw	0
  1116  00013E  2365               	addwfc	(??_task_delay+1)& (0+255),f,b
  1117  000140  5156               	movf	?i1___wmul& (0+255),w,b
  1118  000142  2764               	addwf	??_task_delay& (0+255),f,b
  1119  000144  5157               	movf	(?i1___wmul+1)& (0+255),w,b
  1120  000146  2365               	addwfc	(??_task_delay+1)& (0+255),f,b
  1121  000148  0100               	movlb	0	; () banked
  1122  00014A  5180               	movf	_index& (0+255),w,b
  1123  00014C  0101               	movlb	1	; () banked
  1124  00014E  2564               	addwf	??_task_delay& (0+255),w,b
  1125  000150  6ED9               	movwf	fsr2l,c
  1126  000152  0100               	movlb	0	; () banked
  1127  000154  5181               	movf	(_index+1)& (0+255),w,b
  1128  000156  0101               	movlb	1	; () banked
  1129  000158  2165               	addwfc	(??_task_delay+1)& (0+255),w,b
  1130  00015A  6EDA               	movwf	fsr2h,c
  1131  00015C  CFFD FFDF          	movff	tosl,indf2	;volatile
  1132  000160                     
  1133                           ; BSR set to: 1
  1134  000160  0100               	movlb	0	; () banked
  1135  000162  4B80               	infsnz	_index& (0+255),f,b
  1136  000164  2B81               	incf	(_index+1)& (0+255),f,b
  1137  000166  0006               	pop		;# 
  1138  000168  50FC               	movf	252,w,c	;volatile
  1139  00016A  A4D8               	btfss	status,2,c
  1140  00016C  EFBA  F000         	goto	i1u135_21
  1141  000170  EFBC  F000         	goto	i1u135_20
  1142  000174                     i1u135_21:
  1143  000174  EF8C  F000         	goto	i1l2133
  1144  000178                     i1u135_20:
  1145  000178  EFD1  F000         	goto	i1l61
  1146  00017C                     i1l2139:
  1147                           
  1148                           ; BSR set to: 1
  1149  00017C  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1150  000180  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1151  000184  0E00               	movlw	0
  1152  000186  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1153  000188  0E2E               	movlw	46
  1154  00018A  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1155  00018C  ECDD  F005         	call	i1___wmul	;wreg free
  1156  000190  0E02               	movlw	low (_f_aptos+2)
  1157  000192  0101               	movlb	1	; () banked
  1158  000194  2556               	addwf	?i1___wmul& (0+255),w,b
  1159  000196  6ED9               	movwf	fsr2l,c
  1160  000198  0E02               	movlw	high (_f_aptos+2)
  1161  00019A  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1162  00019C  6EDA               	movwf	fsr2h,c
  1163  00019E  0E03               	movlw	3
  1164  0001A0  6EDF               	movwf	indf2,c
  1165  0001A2                     i1l61:
  1166                           
  1167                           ;kernel.c: 28:    f_aptos.ready_queue[f_aptos.task_running].delay = ms;
  1168  0001A2  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1169  0001A6  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1170  0001AA  0E00               	movlw	0
  1171  0001AC  0101               	movlb	1	; () banked
  1172  0001AE  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1173  0001B0  0E2E               	movlw	46
  1174  0001B2  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1175  0001B4  ECDD  F005         	call	i1___wmul	;wreg free
  1176  0001B8  0E2C               	movlw	low (_f_aptos+44)
  1177  0001BA  0101               	movlb	1	; () banked
  1178  0001BC  2556               	addwf	?i1___wmul& (0+255),w,b
  1179  0001BE  6ED9               	movwf	fsr2l,c
  1180  0001C0  0E02               	movlw	high (_f_aptos+44)
  1181  0001C2  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1182  0001C4  6EDA               	movwf	fsr2h,c
  1183  0001C6  C162  FFDE         	movff	task_delay@ms,postinc2
  1184  0001CA  C163  FFDD         	movff	task_delay@ms+1,postdec2
  1185  0001CE                     
  1186                           ; BSR set to: 1
  1187  0001CE  EC0D  F006         	call	_scheduler	;wreg free
  1188  0001D2  C160  F2E8         	movff	?_scheduler,_f_aptos+232
  1189  0001D6  C161  F2E9         	movff	?_scheduler+1,_f_aptos+233
  1190  0001DA  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1191  0001DE  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1192  0001E2  0E00               	movlw	0
  1193  0001E4  0101               	movlb	1	; () banked
  1194  0001E6  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1195  0001E8  0E2E               	movlw	46
  1196  0001EA  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1197  0001EC  ECDD  F005         	call	i1___wmul	;wreg free
  1198  0001F0  0E27               	movlw	low (_f_aptos+39)
  1199  0001F2  0101               	movlb	1	; () banked
  1200  0001F4  2556               	addwf	?i1___wmul& (0+255),w,b
  1201  0001F6  6ED9               	movwf	fsr2l,c
  1202  0001F8  0E02               	movlw	high (_f_aptos+39)
  1203  0001FA  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1204  0001FC  6EDA               	movwf	fsr2h,c
  1205  0001FE  50DE               	movf	postinc2,w,c
  1206  000200  10DE               	iorwf	postinc2,w,c
  1207  000202  A4D8               	btfss	status,2,c
  1208  000204  EF06  F001         	goto	i1u136_21
  1209  000208  EF08  F001         	goto	i1u136_20
  1210  00020C                     i1u136_21:
  1211  00020C  EF24  F001         	goto	i1l2143
  1212  000210                     i1u136_20:
  1213  000210                     
  1214                           ; BSR set to: 1
  1215  000210  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1216  000214  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1217  000218  0E00               	movlw	0
  1218  00021A  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1219  00021C  0E2E               	movlw	46
  1220  00021E  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1221  000220  ECDD  F005         	call	i1___wmul	;wreg free
  1222  000224  0E05               	movlw	low (_f_aptos+5)
  1223  000226  0101               	movlb	1	; () banked
  1224  000228  2556               	addwf	?i1___wmul& (0+255),w,b
  1225  00022A  6ED9               	movwf	fsr2l,c
  1226  00022C  0E02               	movlw	high (_f_aptos+5)
  1227  00022E  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1228  000230  6EDA               	movwf	fsr2h,c
  1229  000232  CFDE F164          	movff	postinc2,??_task_delay
  1230  000236  CFDD F165          	movff	postdec2,??_task_delay+1
  1231  00023A  C164  FFFD         	movff	??_task_delay,tosl	;volatile
  1232  00023E  C165  FFFE         	movff	??_task_delay+1,tosh	;volatile
  1233  000242  6AFF               	clrf	255,c	;volatile
  1234  000244  EFC9  F001         	goto	i1l64
  1235  000248                     i1l2143:
  1236                           
  1237                           ; BSR set to: 1
  1238  000248  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1239  00024C  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1240  000250  0E00               	movlw	0
  1241  000252  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1242  000254  0E2E               	movlw	46
  1243  000256  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1244  000258  ECDD  F005         	call	i1___wmul	;wreg free
  1245  00025C  0E02               	movlw	low (_f_aptos+2)
  1246  00025E  0101               	movlb	1	; () banked
  1247  000260  2556               	addwf	?i1___wmul& (0+255),w,b
  1248  000262  6ED9               	movwf	fsr2l,c
  1249  000264  0E02               	movlw	high (_f_aptos+2)
  1250  000266  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1251  000268  6EDA               	movwf	fsr2h,c
  1252  00026A  0E01               	movlw	1
  1253  00026C  6EDF               	movwf	indf2,c
  1254  00026E  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1255  000272  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1256  000276  0E00               	movlw	0
  1257  000278  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1258  00027A  0E2E               	movlw	46
  1259  00027C  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1260  00027E  ECDD  F005         	call	i1___wmul	;wreg free
  1261  000282  0E2A               	movlw	low (_f_aptos+42)
  1262  000284  0101               	movlb	1	; () banked
  1263  000286  2556               	addwf	?i1___wmul& (0+255),w,b
  1264  000288  6ED9               	movwf	fsr2l,c
  1265  00028A  0E02               	movlw	high (_f_aptos+42)
  1266  00028C  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1267  00028E  6EDA               	movwf	fsr2h,c
  1268  000290  50DF               	movf	indf2,w,c
  1269  000292  6F64               	movwf	??_task_delay& (0+255),b
  1270  000294  5164               	movf	??_task_delay& (0+255),w,b
  1271  000296  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1272  00029A  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1273  00029E  0E00               	movlw	0
  1274  0002A0  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1275  0002A2  0E2E               	movlw	46
  1276  0002A4  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1277  0002A6  ECDD  F005         	call	i1___wmul	;wreg free
  1278  0002AA  0E29               	movlw	low (_f_aptos+41)
  1279  0002AC  0101               	movlb	1	; () banked
  1280  0002AE  2556               	addwf	?i1___wmul& (0+255),w,b
  1281  0002B0  6ED9               	movwf	fsr2l,c
  1282  0002B2  0E02               	movlw	high (_f_aptos+41)
  1283  0002B4  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1284  0002B6  6EDA               	movwf	fsr2h,c
  1285  0002B8  50DF               	movf	indf2,w,c
  1286  0002BA  6EE0               	movwf	224,c	;volatile
  1287  0002BC  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1288  0002C0  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1289  0002C4  0E00               	movlw	0
  1290  0002C6  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1291  0002C8  0E2E               	movlw	46
  1292  0002CA  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1293  0002CC  ECDD  F005         	call	i1___wmul	;wreg free
  1294  0002D0  0E2B               	movlw	low (_f_aptos+43)
  1295  0002D2  0101               	movlb	1	; () banked
  1296  0002D4  2556               	addwf	?i1___wmul& (0+255),w,b
  1297  0002D6  6ED9               	movwf	fsr2l,c
  1298  0002D8  0E02               	movlw	high (_f_aptos+43)
  1299  0002DA  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1300  0002DC  6EDA               	movwf	fsr2h,c
  1301  0002DE  50DF               	movf	indf2,w,c
  1302  0002E0  6ED8               	movwf	216,c	;volatile
  1303  0002E2  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1304  0002E6  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1305  0002EA  0E00               	movlw	0
  1306  0002EC  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1307  0002EE  0E2E               	movlw	46
  1308  0002F0  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1309  0002F2  ECDD  F005         	call	i1___wmul	;wreg free
  1310  0002F6  0E27               	movlw	low (_f_aptos+39)
  1311  0002F8  0101               	movlb	1	; () banked
  1312  0002FA  2556               	addwf	?i1___wmul& (0+255),w,b
  1313  0002FC  6ED9               	movwf	fsr2l,c
  1314  0002FE  0E02               	movlw	high (_f_aptos+39)
  1315  000300  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1316  000302  6EDA               	movwf	fsr2h,c
  1317  000304  CFDE F164          	movff	postinc2,??_task_delay
  1318  000308  CFDD F165          	movff	postdec2,??_task_delay+1
  1319  00030C  0EFF               	movlw	255
  1320  00030E  2564               	addwf	??_task_delay& (0+255),w,b
  1321  000310  0100               	movlb	0	; () banked
  1322  000312  6F80               	movwf	_index& (0+255),b
  1323  000314  0EFF               	movlw	255
  1324  000316  0101               	movlb	1	; () banked
  1325  000318  2165               	addwfc	(??_task_delay+1)& (0+255),w,b
  1326  00031A  0100               	movlb	0	; () banked
  1327  00031C  6F81               	movwf	(_index+1)& (0+255),b
  1328  00031E                     
  1329                           ; BSR set to: 0
  1330  00031E  0E00               	movlw	0
  1331  000320  6EFC               	movwf	252,c	;volatile
  1332  000322  EFC0  F001         	goto	i1l2151
  1333  000326                     i1l66:
  1334                           
  1335                           ; BSR set to: 0
  1336  000326  0005               	push		;# 
  1337  000328  C2E8  F156         	movff	_f_aptos+232,i1___wmul@multiplier
  1338  00032C  C2E9  F157         	movff	_f_aptos+233,i1___wmul@multiplier+1
  1339  000330  0E00               	movlw	0
  1340  000332  0101               	movlb	1	; () banked
  1341  000334  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1342  000336  0E2E               	movlw	46
  1343  000338  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1344  00033A  ECDD  F005         	call	i1___wmul	;wreg free
  1345  00033E  0E00               	movlw	low _f_aptos
  1346  000340  0101               	movlb	1	; () banked
  1347  000342  6F64               	movwf	??_task_delay& (0+255),b
  1348  000344  0E02               	movlw	high _f_aptos
  1349  000346  6F65               	movwf	(??_task_delay+1)& (0+255),b
  1350  000348  0E07               	movlw	7
  1351  00034A  2764               	addwf	??_task_delay& (0+255),f,b
  1352  00034C  0E00               	movlw	0
  1353  00034E  2365               	addwfc	(??_task_delay+1)& (0+255),f,b
  1354  000350  5156               	movf	?i1___wmul& (0+255),w,b
  1355  000352  2764               	addwf	??_task_delay& (0+255),f,b
  1356  000354  5157               	movf	(?i1___wmul+1)& (0+255),w,b
  1357  000356  2365               	addwfc	(??_task_delay+1)& (0+255),f,b
  1358  000358  0100               	movlb	0	; () banked
  1359  00035A  5180               	movf	_index& (0+255),w,b
  1360  00035C  0101               	movlb	1	; () banked
  1361  00035E  2564               	addwf	??_task_delay& (0+255),w,b
  1362  000360  6ED9               	movwf	fsr2l,c
  1363  000362  0100               	movlb	0	; () banked
  1364  000364  5181               	movf	(_index+1)& (0+255),w,b
  1365  000366  0101               	movlb	1	; () banked
  1366  000368  2165               	addwfc	(??_task_delay+1)& (0+255),w,b
  1367  00036A  6EDA               	movwf	fsr2h,c
  1368  00036C  50DF               	movf	indf2,w,c
  1369  00036E  6F66               	movwf	(??_task_delay+2)& (0+255),b
  1370  000370  5166               	movf	(??_task_delay+2)& (0+255),w,b
  1371  000372  6EFD               	movwf	253,c	;volatile
  1372  000374  6AFE               	clrf	254,c	;volatile
  1373  000376  6AFF               	clrf	255,c	;volatile
  1374  000378                     
  1375                           ; BSR set to: 1
  1376  000378  0100               	movlb	0	; () banked
  1377  00037A  0780               	decf	_index& (0+255),f,b
  1378  00037C  A0D8               	btfss	status,0,c
  1379  00037E  0781               	decf	(_index+1)& (0+255),f,b
  1380  000380                     i1l2151:
  1381                           
  1382                           ; BSR set to: 0
  1383  000380  5180               	movf	_index& (0+255),w,b
  1384  000382  1181               	iorwf	(_index+1)& (0+255),w,b
  1385  000384  A4D8               	btfss	status,2,c
  1386  000386  EFC7  F001         	goto	i1u137_21
  1387  00038A  EFC9  F001         	goto	i1u137_20
  1388  00038E                     i1u137_21:
  1389  00038E  EF93  F001         	goto	i1l66
  1390  000392                     i1u137_20:
  1391  000392                     i1l64:
  1392  000392  8EF2               	bsf	242,7,c	;volatile
  1393  000394  0012               	return		;funcret
  1394  000396                     __end_of_task_delay:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _scheduler *****************
  1398 ;; Defined at:
  1399 ;;		line 12 in file "scheduler.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  2   96[BANK1 ] unsigned int 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1413 ;;      Params:         0       0       2       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0
  1416 ;;      Totals:         0       0       2       0       0       0       0
  1417 ;;Total ram usage:        2 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    6
  1420 ;; This function calls:
  1421 ;;		_rr_scheduler
  1422 ;; This function is called by:
  1423 ;;		_task_delay
  1424 ;;		_sem_wait
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text10
  1429  000C1A                     __ptext10:
  1430                           	callstack 0
  1431  000C1A                     _scheduler:
  1432                           	callstack 19
  1433  000C1A                     
  1434                           ;scheduler.c: 15:    return rr_scheduler();
  1435  000C1A  ECFE  F003         	call	_rr_scheduler	;wreg free
  1436  000C1E  C15C  F160         	movff	?_rr_scheduler,?_scheduler
  1437  000C22  C15D  F161         	movff	?_rr_scheduler+1,?_scheduler+1
  1438  000C26  0012               	return		;funcret
  1439  000C28                     __end_of_scheduler:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _rr_scheduler *****************
  1443 ;; Defined at:
  1444 ;;		line 22 in file "scheduler.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  next_task       2   94[BANK1 ] unsigned int 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  2   92[BANK1 ] unsigned int 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1458 ;;      Params:         0       0       2       0       0       0       0
  1459 ;;      Locals:         0       0       2       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0
  1461 ;;      Totals:         0       0       4       0       0       0       0
  1462 ;;Total ram usage:        4 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    5
  1465 ;; This function calls:
  1466 ;;		___lwmod
  1467 ;;		i1___wmul
  1468 ;; This function is called by:
  1469 ;;		_scheduler
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text11
  1474  0007FC                     __ptext11:
  1475                           	callstack 0
  1476  0007FC                     _rr_scheduler:
  1477                           	callstack 19
  1478  0007FC                     
  1479                           ;scheduler.c: 24:    u_int next_task = f_aptos.task_running;
  1480  0007FC  C2E8  F15E         	movff	_f_aptos+232,rr_scheduler@next_task
  1481  000800  C2E9  F15F         	movff	_f_aptos+233,rr_scheduler@next_task+1
  1482  000804                     i1l2109:
  1483                           
  1484                           ;scheduler.c: 28:       next_task = (next_task + 1) % (f_aptos.ready_queue_size + 1);
  1485  000804  0E01               	movlw	1
  1486  000806  0101               	movlb	1	; () banked
  1487  000808  255E               	addwf	rr_scheduler@next_task& (0+255),w,b
  1488  00080A  6F56               	movwf	___lwmod@dividend& (0+255),b
  1489  00080C  0E00               	movlw	0
  1490  00080E  215F               	addwfc	(rr_scheduler@next_task+1)& (0+255),w,b
  1491  000810  6F57               	movwf	(___lwmod@dividend+1)& (0+255),b
  1492  000812  0E01               	movlw	1
  1493  000814  0102               	movlb	2	; () banked
  1494  000816  25E6               	addwf	(_f_aptos+230)& (0+255),w,b
  1495  000818  0101               	movlb	1	; () banked
  1496  00081A  6F58               	movwf	___lwmod@divisor& (0+255),b
  1497  00081C  0E00               	movlw	0
  1498  00081E  0102               	movlb	2	; () banked
  1499  000820  21E7               	addwfc	(_f_aptos+231)& (0+255),w,b
  1500  000822  0101               	movlb	1	; () banked
  1501  000824  6F59               	movwf	(___lwmod@divisor+1)& (0+255),b
  1502  000826  ECA1  F004         	call	___lwmod	;wreg free
  1503  00082A  C156  F15E         	movff	?___lwmod,rr_scheduler@next_task
  1504  00082E  C157  F15F         	movff	?___lwmod+1,rr_scheduler@next_task+1
  1505  000832                     
  1506                           ;scheduler.c: 29:    } while (f_aptos.ready_queue[next_task].task_state != READY);
  1507  000832  C15E  F156         	movff	rr_scheduler@next_task,i1___wmul@multiplier
  1508  000836  C15F  F157         	movff	rr_scheduler@next_task+1,i1___wmul@multiplier+1
  1509  00083A  0E00               	movlw	0
  1510  00083C  0101               	movlb	1	; () banked
  1511  00083E  6F59               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1512  000840  0E2E               	movlw	46
  1513  000842  6F58               	movwf	i1___wmul@multiplicand& (0+255),b
  1514  000844  ECDD  F005         	call	i1___wmul	;wreg free
  1515  000848  0E02               	movlw	low (_f_aptos+2)
  1516  00084A  0101               	movlb	1	; () banked
  1517  00084C  2556               	addwf	?i1___wmul& (0+255),w,b
  1518  00084E  6ED9               	movwf	fsr2l,c
  1519  000850  0E02               	movlw	high (_f_aptos+2)
  1520  000852  2157               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1521  000854  6EDA               	movwf	fsr2h,c
  1522  000856  50DF               	movf	indf2,w,c
  1523  000858  A4D8               	btfss	status,2,c
  1524  00085A  EF31  F004         	goto	i1u133_21
  1525  00085E  EF33  F004         	goto	i1u133_20
  1526  000862                     i1u133_21:
  1527  000862  EF02  F004         	goto	i1l2109
  1528  000866                     i1u133_20:
  1529  000866                     
  1530                           ; BSR set to: 1
  1531                           ;scheduler.c: 32:    return next_task;
  1532  000866  C15E  F15C         	movff	rr_scheduler@next_task,?_rr_scheduler
  1533  00086A  C15F  F15D         	movff	rr_scheduler@next_task+1,?_rr_scheduler+1
  1534  00086E                     
  1535                           ; BSR set to: 1
  1536  00086E  0012               	return		;funcret
  1537  000870                     __end_of_rr_scheduler:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function i1___wmul *****************
  1541 ;; Defined at:
  1542 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  multiplier      2   86[BANK1 ] unsigned int 
  1545 ;;  multiplicand    2   88[BANK1 ] unsigned int 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  product         2   90[BANK1 ] unsigned int 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2   86[BANK1 ] unsigned int 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, prodl, prodh
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1557 ;;      Params:         0       0       4       0       0       0       0
  1558 ;;      Locals:         0       0       2       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0
  1560 ;;      Totals:         0       0       6       0       0       0       0
  1561 ;;Total ram usage:        6 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    4
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_task_delay
  1568 ;;		_rr_scheduler
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text12
  1573  000BBA                     __ptext12:
  1574                           	callstack 0
  1575  000BBA                     i1___wmul:
  1576                           	callstack 21
  1577  000BBA  0101               	movlb	1	; () banked
  1578  000BBC  5156               	movf	i1___wmul@multiplier& (0+255),w,b
  1579  000BBE  0358               	mulwf	i1___wmul@multiplicand& (0+255),b
  1580  000BC0  CFF3 F15A          	movff	prodl,i1___wmul@product
  1581  000BC4  CFF4 F15B          	movff	prodh,i1___wmul@product+1
  1582  000BC8  5156               	movf	i1___wmul@multiplier& (0+255),w,b
  1583  000BCA  0359               	mulwf	(i1___wmul@multiplicand+1)& (0+255),b
  1584  000BCC  50F3               	movf	243,w,c
  1585  000BCE  275B               	addwf	(i1___wmul@product+1)& (0+255),f,b
  1586  000BD0  5157               	movf	(i1___wmul@multiplier+1)& (0+255),w,b
  1587  000BD2  0358               	mulwf	i1___wmul@multiplicand& (0+255),b
  1588  000BD4  50F3               	movf	243,w,c
  1589  000BD6  275B               	addwf	(i1___wmul@product+1)& (0+255),f,b
  1590  000BD8                     
  1591                           ; BSR set to: 1
  1592  000BD8  C15A  F156         	movff	i1___wmul@product,?i1___wmul
  1593  000BDC  C15B  F157         	movff	i1___wmul@product+1,?i1___wmul+1
  1594  000BE0                     
  1595                           ; BSR set to: 1
  1596  000BE0  0012               	return		;funcret
  1597  000BE2                     __end_ofi1___wmul:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function ___lwmod *****************
  1601 ;; Defined at:
  1602 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  dividend        2   86[BANK1 ] unsigned int 
  1605 ;;  divisor         2   88[BANK1 ] unsigned int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  counter         1   90[BANK1 ] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2   86[BANK1 ] unsigned int 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1617 ;;      Params:         0       0       4       0       0       0       0
  1618 ;;      Locals:         0       0       1       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0
  1620 ;;      Totals:         0       0       5       0       0       0       0
  1621 ;;Total ram usage:        5 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    4
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_rr_scheduler
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text13
  1632  000942                     __ptext13:
  1633                           	callstack 0
  1634  000942                     ___lwmod:
  1635                           	callstack 19
  1636  000942  0101               	movlb	1	; () banked
  1637  000944  5158               	movf	___lwmod@divisor& (0+255),w,b
  1638  000946  1159               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1639  000948  B4D8               	btfsc	status,2,c
  1640  00094A  EFA9  F004         	goto	i1u130_21
  1641  00094E  EFAB  F004         	goto	i1u130_20
  1642  000952                     i1u130_21:
  1643  000952  EFCF  F004         	goto	i1l751
  1644  000956                     i1u130_20:
  1645  000956                     
  1646                           ; BSR set to: 1
  1647  000956  0E01               	movlw	1
  1648  000958  6F5A               	movwf	___lwmod@counter& (0+255),b
  1649  00095A  EFB3  F004         	goto	i1l2091
  1650  00095E                     i1l2089:
  1651                           
  1652                           ; BSR set to: 1
  1653  00095E  90D8               	bcf	status,0,c
  1654  000960  3758               	rlcf	___lwmod@divisor& (0+255),f,b
  1655  000962  3759               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1656  000964  2B5A               	incf	___lwmod@counter& (0+255),f,b
  1657  000966                     i1l2091:
  1658                           
  1659                           ; BSR set to: 1
  1660  000966  AF59               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1661  000968  EFB8  F004         	goto	i1u131_21
  1662  00096C  EFBA  F004         	goto	i1u131_20
  1663  000970                     i1u131_21:
  1664  000970  EFAF  F004         	goto	i1l2089
  1665  000974                     i1u131_20:
  1666  000974                     i1l2093:
  1667                           
  1668                           ; BSR set to: 1
  1669  000974  5158               	movf	___lwmod@divisor& (0+255),w,b
  1670  000976  5D56               	subwf	___lwmod@dividend& (0+255),w,b
  1671  000978  5159               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1672  00097A  5957               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1673  00097C  A0D8               	btfss	status,0,c
  1674  00097E  EFC3  F004         	goto	i1u132_21
  1675  000982  EFC5  F004         	goto	i1u132_20
  1676  000986                     i1u132_21:
  1677  000986  EFC9  F004         	goto	i1l2097
  1678  00098A                     i1u132_20:
  1679  00098A                     
  1680                           ; BSR set to: 1
  1681  00098A  5158               	movf	___lwmod@divisor& (0+255),w,b
  1682  00098C  5F56               	subwf	___lwmod@dividend& (0+255),f,b
  1683  00098E  5159               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1684  000990  5B57               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1685  000992                     i1l2097:
  1686                           
  1687                           ; BSR set to: 1
  1688  000992  90D8               	bcf	status,0,c
  1689  000994  3359               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1690  000996  3358               	rrcf	___lwmod@divisor& (0+255),f,b
  1691  000998                     
  1692                           ; BSR set to: 1
  1693  000998  2F5A               	decfsz	___lwmod@counter& (0+255),f,b
  1694  00099A  EFBA  F004         	goto	i1l2093
  1695  00099E                     i1l751:
  1696                           
  1697                           ; BSR set to: 1
  1698  00099E  C156  F156         	movff	___lwmod@dividend,?___lwmod
  1699  0009A2  C157  F157         	movff	___lwmod@dividend+1,?___lwmod+1
  1700  0009A6                     
  1701                           ; BSR set to: 1
  1702  0009A6  0012               	return		;funcret
  1703  0009A8                     __end_of___lwmod:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _task_2 *****************
  1707 ;; Defined at:
  1708 ;;		line 27 in file "tasks.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1722 ;;      Params:         0       0       0       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0       0       0
  1724 ;;      Temps:          1       0       0       0       0       0       0
  1725 ;;      Totals:         1       0       0       0       0       0       0
  1726 ;;Total ram usage:        1 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    8
  1729 ;; This function calls:
  1730 ;;		_task_delay
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text14
  1737  000A96                     __ptext14:
  1738                           	callstack 0
  1739  000A96                     _task_2:
  1740                           	callstack 19
  1741  000A96                     l105:
  1742  000A96                     
  1743                           ;tasks.c: 30:       PORTDbits.RD1 = ~PORTDbits.RD1;
  1744  000A96  B283               	btfsc	131,1,c	;volatile
  1745  000A98  EF50  F005         	goto	u139_21
  1746  000A9C  EF53  F005         	goto	u139_20
  1747  000AA0                     u139_21:
  1748  000AA0  0E01               	movlw	1
  1749  000AA2  EF54  F005         	goto	u139_26
  1750  000AA6                     u139_20:
  1751  000AA6  0E00               	movlw	0
  1752  000AA8                     u139_26:
  1753  000AA8  0AFF               	xorlw	255
  1754  000AAA  6E1B               	movwf	??_task_2^0,c
  1755  000AAC  461B               	rlncf	??_task_2^0,f,c
  1756  000AAE  5083               	movf	131,w,c	;volatile
  1757  000AB0  181B               	xorwf	??_task_2^0,w,c
  1758  000AB2  0BFD               	andlw	-3
  1759  000AB4  181B               	xorwf	??_task_2^0,w,c
  1760  000AB6  6E83               	movwf	131,c	;volatile
  1761  000AB8                     
  1762                           ;tasks.c: 31:       task_delay(300);
  1763  000AB8  0E01               	movlw	1
  1764  000ABA  0101               	movlb	1	; () banked
  1765  000ABC  6F63               	movwf	(task_delay@ms+1)& (0+255),b
  1766  000ABE  0E2C               	movlw	44
  1767  000AC0  6F62               	movwf	task_delay@ms& (0+255),b
  1768  000AC2  EC09  F000         	call	_task_delay	;wreg free
  1769  000AC6  EF4B  F005         	goto	l105
  1770  000ACA  0012               	return		;funcret
  1771  000ACC                     __end_of_task_2:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _task_3 *****************
  1775 ;; Defined at:
  1776 ;;		line 35 in file "tasks.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1790 ;;      Params:         0       0       0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0
  1792 ;;      Temps:          0       0       1       0       0       0       0
  1793 ;;      Totals:         0       0       1       0       0       0       0
  1794 ;;Total ram usage:        1 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    8
  1797 ;; This function calls:
  1798 ;;		_task_delay
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text15
  1805  000A5E                     __ptext15:
  1806                           	callstack 0
  1807  000A5E                     _task_3:
  1808                           	callstack 19
  1809  000A5E                     l111:
  1810  000A5E                     
  1811                           ;tasks.c: 38:       PORTDbits.RD2 = ~PORTDbits.RD2;
  1812  000A5E  B483               	btfsc	131,2,c	;volatile
  1813  000A60  EF34  F005         	goto	u140_21
  1814  000A64  EF37  F005         	goto	u140_20
  1815  000A68                     u140_21:
  1816  000A68  0E01               	movlw	1
  1817  000A6A  EF38  F005         	goto	u140_26
  1818  000A6E                     u140_20:
  1819  000A6E  0E00               	movlw	0
  1820  000A70                     u140_26:
  1821  000A70  0AFF               	xorlw	255
  1822  000A72  0101               	movlb	1	; () banked
  1823  000A74  6F67               	movwf	??_task_3& (0+255),b
  1824  000A76  4767               	rlncf	??_task_3& (0+255),f,b
  1825  000A78  4767               	rlncf	??_task_3& (0+255),f,b
  1826  000A7A  5083               	movf	131,w,c	;volatile
  1827  000A7C  1967               	xorwf	??_task_3& (0+255),w,b
  1828  000A7E  0BFB               	andlw	-5
  1829  000A80  1967               	xorwf	??_task_3& (0+255),w,b
  1830  000A82  6E83               	movwf	131,c	;volatile
  1831  000A84                     
  1832                           ; BSR set to: 1
  1833                           ;tasks.c: 39:       task_delay(100);
  1834  000A84  0E00               	movlw	0
  1835  000A86  6F63               	movwf	(task_delay@ms+1)& (0+255),b
  1836  000A88  0E64               	movlw	100
  1837  000A8A  6F62               	movwf	task_delay@ms& (0+255),b
  1838  000A8C  EC09  F000         	call	_task_delay	;wreg free
  1839  000A90  EF2F  F005         	goto	l111
  1840  000A94  0012               	return		;funcret
  1841  000A96                     __end_of_task_3:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _IRQ_Timer0 *****************
  1845 ;; Defined at:
  1846 ;;		line 44 in file "timer.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  i               1    0        unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1860 ;;      Params:         0       0       0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0
  1862 ;;      Temps:          7       0       0       0       0       0       0
  1863 ;;      Totals:         7       0       0       0       0       0       0
  1864 ;;Total ram usage:        7 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		_controle_delay
  1869 ;;		i2___wmul
  1870 ;;		i2_scheduler
  1871 ;; This function is called by:
  1872 ;;		Interrupt level 2
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	intcode
  1877  000008                     __pintcode:
  1878                           	callstack 0
  1879  000008                     _IRQ_Timer0:
  1880                           	callstack 19
  1881                           
  1882                           ;incstack = 0
  1883  000008  821E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1884  00000A  EDCB  F001         	call	int_func,f	;refresh shadow registers
  1885                           
  1886                           	psect	intcode_body
  1887  000396                     __pintcode_body:
  1888                           	callstack 19
  1889  000396                     int_func:
  1890                           	callstack 19
  1891  000396  0006               	pop		; remove dummy address from shadow register refresh
  1892  000398  CFD9 F012          	movff	fsr2l,??_IRQ_Timer0+3
  1893  00039C  CFDA F013          	movff	fsr2h,??_IRQ_Timer0+4
  1894  0003A0  CFF3 F014          	movff	prodl,??_IRQ_Timer0+5
  1895  0003A4  CFF4 F015          	movff	prodh,??_IRQ_Timer0+6
  1896  0003A8                     
  1897                           ;timer.c: 46:    uint8_t i;;timer.c: 48:    INTCONbits.GIE = 0;
  1898  0003A8  9EF2               	bcf	242,7,c	;volatile
  1899                           
  1900                           ;timer.c: 50:    if (INTCONbits.TMR0IF) {
  1901  0003AA  A4F2               	btfss	242,2,c	;volatile
  1902  0003AC  EFDA  F001         	goto	i2u58_41
  1903  0003B0  EFDC  F001         	goto	i2u58_40
  1904  0003B4                     i2u58_41:
  1905  0003B4  EF7C  F003         	goto	i2l247
  1906  0003B8                     i2u58_40:
  1907  0003B8                     
  1908                           ;timer.c: 51:       INTCONbits.TMR0IF = 0;
  1909  0003B8  94F2               	bcf	242,2,c	;volatile
  1910  0003BA                     
  1911                           ;timer.c: 52:       TMR0L = 0;
  1912  0003BA  0E00               	movlw	0
  1913  0003BC  6ED6               	movwf	214,c	;volatile
  1914  0003BE                     
  1915                           ;timer.c: 55:          quantum--;
  1916  0003BE  061C               	decf	_quantum^0,f,c
  1917  0003C0  A0D8               	btfss	status,0,c
  1918  0003C2  061D               	decf	(_quantum+1)^0,f,c
  1919  0003C4                     
  1920                           ;timer.c: 56:          if (quantum == 0) {
  1921  0003C4  501C               	movf	_quantum^0,w,c
  1922  0003C6  101D               	iorwf	(_quantum+1)^0,w,c
  1923  0003C8  A4D8               	btfss	status,2,c
  1924  0003CA  EFE9  F001         	goto	i2u59_41
  1925  0003CE  EFEB  F001         	goto	i2u59_40
  1926  0003D2                     i2u59_41:
  1927  0003D2  EF7A  F003         	goto	i2l1503
  1928  0003D6                     i2u59_40:
  1929  0003D6  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  1930  0003DA  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  1931  0003DE  0E00               	movlw	0
  1932  0003E0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  1933  0003E2  0E2E               	movlw	46
  1934  0003E4  6E03               	movwf	i2___wmul@multiplicand^0,c
  1935  0003E6  ECF1  F005         	call	i2___wmul	;wreg free
  1936  0003EA  0E27               	movlw	low (_f_aptos+39)
  1937  0003EC  2401               	addwf	?i2___wmul^0,w,c
  1938  0003EE  6ED9               	movwf	fsr2l,c
  1939  0003F0  0E02               	movlw	high (_f_aptos+39)
  1940  0003F2  2002               	addwfc	(?i2___wmul+1)^0,w,c
  1941  0003F4  6EDA               	movwf	fsr2h,c
  1942  0003F6  50DE               	movf	postinc2,w,c
  1943  0003F8  10DE               	iorwf	postinc2,w,c
  1944  0003FA  B4D8               	btfsc	status,2,c
  1945  0003FC  EF02  F002         	goto	i2u60_41
  1946  000400  EF04  F002         	goto	i2u60_40
  1947  000404                     i2u60_41:
  1948  000404  EF91  F002         	goto	i2l1487
  1949  000408                     i2u60_40:
  1950  000408  0E00               	movlw	0
  1951  00040A  0100               	movlb	0	; () banked
  1952  00040C  6F81               	movwf	(_index+1)& (0+255),b
  1953  00040E  0E00               	movlw	0
  1954  000410  6F80               	movwf	_index& (0+255),b
  1955  000412                     
  1956                           ; BSR set to: 0
  1957  000412  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  1958  000416  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  1959  00041A  0E00               	movlw	0
  1960  00041C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  1961  00041E  0E2E               	movlw	46
  1962  000420  6E03               	movwf	i2___wmul@multiplicand^0,c
  1963  000422  ECF1  F005         	call	i2___wmul	;wreg free
  1964  000426  0E02               	movlw	low (_f_aptos+2)
  1965  000428  2401               	addwf	?i2___wmul^0,w,c
  1966  00042A  6ED9               	movwf	fsr2l,c
  1967  00042C  0E02               	movlw	high (_f_aptos+2)
  1968  00042E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  1969  000430  6EDA               	movwf	fsr2h,c
  1970  000432  0E00               	movlw	0
  1971  000434  6EDF               	movwf	indf2,c
  1972  000436  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  1973  00043A  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  1974  00043E  0E00               	movlw	0
  1975  000440  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  1976  000442  0E2E               	movlw	46
  1977  000444  6E03               	movwf	i2___wmul@multiplicand^0,c
  1978  000446  ECF1  F005         	call	i2___wmul	;wreg free
  1979  00044A  0E2A               	movlw	low (_f_aptos+42)
  1980  00044C  2401               	addwf	?i2___wmul^0,w,c
  1981  00044E  6ED9               	movwf	fsr2l,c
  1982  000450  0E02               	movlw	high (_f_aptos+42)
  1983  000452  2002               	addwfc	(?i2___wmul+1)^0,w,c
  1984  000454  6EDA               	movwf	fsr2h,c
  1985  000456  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1986  00045A  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  1987  00045E  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  1988  000462  0E00               	movlw	0
  1989  000464  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  1990  000466  0E2E               	movlw	46
  1991  000468  6E03               	movwf	i2___wmul@multiplicand^0,c
  1992  00046A  ECF1  F005         	call	i2___wmul	;wreg free
  1993  00046E  0E29               	movlw	low (_f_aptos+41)
  1994  000470  2401               	addwf	?i2___wmul^0,w,c
  1995  000472  6ED9               	movwf	fsr2l,c
  1996  000474  0E02               	movlw	high (_f_aptos+41)
  1997  000476  2002               	addwfc	(?i2___wmul+1)^0,w,c
  1998  000478  6EDA               	movwf	fsr2h,c
  1999  00047A  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2000  00047E  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2001  000482  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2002  000486  0E00               	movlw	0
  2003  000488  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2004  00048A  0E2E               	movlw	46
  2005  00048C  6E03               	movwf	i2___wmul@multiplicand^0,c
  2006  00048E  ECF1  F005         	call	i2___wmul	;wreg free
  2007  000492  0E2B               	movlw	low (_f_aptos+43)
  2008  000494  2401               	addwf	?i2___wmul^0,w,c
  2009  000496  6ED9               	movwf	fsr2l,c
  2010  000498  0E02               	movlw	high (_f_aptos+43)
  2011  00049A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2012  00049C  6EDA               	movwf	fsr2h,c
  2013  00049E  CFD8 FFDF          	movff	status,indf2	;volatile
  2014  0004A2  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2015  0004A6  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2016  0004AA  0E00               	movlw	0
  2017  0004AC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2018  0004AE  0E2E               	movlw	46
  2019  0004B0  6E03               	movwf	i2___wmul@multiplicand^0,c
  2020  0004B2  ECF1  F005         	call	i2___wmul	;wreg free
  2021  0004B6  0E27               	movlw	low (_f_aptos+39)
  2022  0004B8  2401               	addwf	?i2___wmul^0,w,c
  2023  0004BA  6ED9               	movwf	fsr2l,c
  2024  0004BC  0E02               	movlw	high (_f_aptos+39)
  2025  0004BE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2026  0004C0  6EDA               	movwf	fsr2h,c
  2027  0004C2  0E00               	movlw	0
  2028  0004C4  6EDE               	movwf	postinc2,c
  2029  0004C6  0E00               	movlw	0
  2030  0004C8  6EDD               	movwf	postdec2,c
  2031  0004CA                     i2l1481:
  2032  0004CA  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2033  0004CE  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2034  0004D2  0E00               	movlw	0
  2035  0004D4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2036  0004D6  0E2E               	movlw	46
  2037  0004D8  6E03               	movwf	i2___wmul@multiplicand^0,c
  2038  0004DA  ECF1  F005         	call	i2___wmul	;wreg free
  2039  0004DE  0E00               	movlw	low _f_aptos
  2040  0004E0  6E0F               	movwf	??_IRQ_Timer0^0,c
  2041  0004E2  0E02               	movlw	high _f_aptos
  2042  0004E4  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  2043  0004E6  0E07               	movlw	7
  2044  0004E8  260F               	addwf	??_IRQ_Timer0^0,f,c
  2045  0004EA  0E00               	movlw	0
  2046  0004EC  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  2047  0004EE  5001               	movf	?i2___wmul^0,w,c
  2048  0004F0  260F               	addwf	??_IRQ_Timer0^0,f,c
  2049  0004F2  5002               	movf	(?i2___wmul+1)^0,w,c
  2050  0004F4  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  2051  0004F6  0100               	movlb	0	; () banked
  2052  0004F8  5180               	movf	_index& (0+255),w,b
  2053  0004FA  240F               	addwf	??_IRQ_Timer0^0,w,c
  2054  0004FC  6ED9               	movwf	fsr2l,c
  2055  0004FE  5181               	movf	(_index+1)& (0+255),w,b
  2056  000500  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  2057  000502  6EDA               	movwf	fsr2h,c
  2058  000504  CFFD FFDF          	movff	tosl,indf2	;volatile
  2059  000508                     
  2060                           ; BSR set to: 0
  2061  000508  4B80               	infsnz	_index& (0+255),f,b
  2062  00050A  2B81               	incf	(_index+1)& (0+255),f,b
  2063  00050C  0006               	pop		;# 
  2064  00050E  50FC               	movf	252,w,c	;volatile
  2065  000510  A4D8               	btfss	status,2,c
  2066  000512  EF8D  F002         	goto	i2u61_41
  2067  000516  EF8F  F002         	goto	i2u61_40
  2068  00051A                     i2u61_41:
  2069  00051A  EF65  F002         	goto	i2l1481
  2070  00051E                     i2u61_40:
  2071  00051E  EFA3  F002         	goto	i2l226
  2072  000522                     i2l1487:
  2073  000522  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2074  000526  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2075  00052A  0E00               	movlw	0
  2076  00052C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2077  00052E  0E2E               	movlw	46
  2078  000530  6E03               	movwf	i2___wmul@multiplicand^0,c
  2079  000532  ECF1  F005         	call	i2___wmul	;wreg free
  2080  000536  0E02               	movlw	low (_f_aptos+2)
  2081  000538  2401               	addwf	?i2___wmul^0,w,c
  2082  00053A  6ED9               	movwf	fsr2l,c
  2083  00053C  0E02               	movlw	high (_f_aptos+2)
  2084  00053E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2085  000540  6EDA               	movwf	fsr2h,c
  2086  000542  0E00               	movlw	0
  2087  000544  6EDF               	movwf	indf2,c
  2088  000546                     i2l226:
  2089  000546  EC14  F006         	call	i2_scheduler	;wreg free
  2090  00054A  C00B  F2E8         	movff	?i2_scheduler,_f_aptos+232
  2091  00054E  C00C  F2E9         	movff	?i2_scheduler+1,_f_aptos+233
  2092  000552  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2093  000556  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2094  00055A  0E00               	movlw	0
  2095  00055C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2096  00055E  0E2E               	movlw	46
  2097  000560  6E03               	movwf	i2___wmul@multiplicand^0,c
  2098  000562  ECF1  F005         	call	i2___wmul	;wreg free
  2099  000566  0E27               	movlw	low (_f_aptos+39)
  2100  000568  2401               	addwf	?i2___wmul^0,w,c
  2101  00056A  6ED9               	movwf	fsr2l,c
  2102  00056C  0E02               	movlw	high (_f_aptos+39)
  2103  00056E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2104  000570  6EDA               	movwf	fsr2h,c
  2105  000572  50DE               	movf	postinc2,w,c
  2106  000574  10DE               	iorwf	postinc2,w,c
  2107  000576  A4D8               	btfss	status,2,c
  2108  000578  EFC0  F002         	goto	i2u62_41
  2109  00057C  EFC2  F002         	goto	i2u62_40
  2110  000580                     i2u62_41:
  2111  000580  EFDD  F002         	goto	i2l1491
  2112  000584                     i2u62_40:
  2113  000584  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2114  000588  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2115  00058C  0E00               	movlw	0
  2116  00058E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2117  000590  0E2E               	movlw	46
  2118  000592  6E03               	movwf	i2___wmul@multiplicand^0,c
  2119  000594  ECF1  F005         	call	i2___wmul	;wreg free
  2120  000598  0E05               	movlw	low (_f_aptos+5)
  2121  00059A  2401               	addwf	?i2___wmul^0,w,c
  2122  00059C  6ED9               	movwf	fsr2l,c
  2123  00059E  0E02               	movlw	high (_f_aptos+5)
  2124  0005A0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2125  0005A2  6EDA               	movwf	fsr2h,c
  2126  0005A4  CFDE F00F          	movff	postinc2,??_IRQ_Timer0
  2127  0005A8  CFDD F010          	movff	postdec2,??_IRQ_Timer0+1
  2128  0005AC  C00F  FFFD         	movff	??_IRQ_Timer0,tosl	;volatile
  2129  0005B0  C010  FFFE         	movff	??_IRQ_Timer0+1,tosh	;volatile
  2130  0005B4  6AFF               	clrf	255,c	;volatile
  2131  0005B6  EF75  F003         	goto	i2l228
  2132  0005BA                     i2l1491:
  2133  0005BA  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2134  0005BE  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2135  0005C2  0E00               	movlw	0
  2136  0005C4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2137  0005C6  0E2E               	movlw	46
  2138  0005C8  6E03               	movwf	i2___wmul@multiplicand^0,c
  2139  0005CA  ECF1  F005         	call	i2___wmul	;wreg free
  2140  0005CE  0E02               	movlw	low (_f_aptos+2)
  2141  0005D0  2401               	addwf	?i2___wmul^0,w,c
  2142  0005D2  6ED9               	movwf	fsr2l,c
  2143  0005D4  0E02               	movlw	high (_f_aptos+2)
  2144  0005D6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2145  0005D8  6EDA               	movwf	fsr2h,c
  2146  0005DA  0E01               	movlw	1
  2147  0005DC  6EDF               	movwf	indf2,c
  2148  0005DE  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2149  0005E2  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2150  0005E6  0E00               	movlw	0
  2151  0005E8  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2152  0005EA  0E2E               	movlw	46
  2153  0005EC  6E03               	movwf	i2___wmul@multiplicand^0,c
  2154  0005EE  ECF1  F005         	call	i2___wmul	;wreg free
  2155  0005F2  0E2A               	movlw	low (_f_aptos+42)
  2156  0005F4  2401               	addwf	?i2___wmul^0,w,c
  2157  0005F6  6ED9               	movwf	fsr2l,c
  2158  0005F8  0E02               	movlw	high (_f_aptos+42)
  2159  0005FA  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2160  0005FC  6EDA               	movwf	fsr2h,c
  2161  0005FE  50DF               	movf	indf2,w,c
  2162  000600  6E0F               	movwf	??_IRQ_Timer0^0,c
  2163  000602  500F               	movf	??_IRQ_Timer0^0,w,c
  2164  000604  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2165  000608  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2166  00060C  0E00               	movlw	0
  2167  00060E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2168  000610  0E2E               	movlw	46
  2169  000612  6E03               	movwf	i2___wmul@multiplicand^0,c
  2170  000614  ECF1  F005         	call	i2___wmul	;wreg free
  2171  000618  0E29               	movlw	low (_f_aptos+41)
  2172  00061A  2401               	addwf	?i2___wmul^0,w,c
  2173  00061C  6ED9               	movwf	fsr2l,c
  2174  00061E  0E02               	movlw	high (_f_aptos+41)
  2175  000620  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2176  000622  6EDA               	movwf	fsr2h,c
  2177  000624  50DF               	movf	indf2,w,c
  2178  000626  6EE0               	movwf	224,c	;volatile
  2179  000628  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2180  00062C  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2181  000630  0E00               	movlw	0
  2182  000632  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2183  000634  0E2E               	movlw	46
  2184  000636  6E03               	movwf	i2___wmul@multiplicand^0,c
  2185  000638  ECF1  F005         	call	i2___wmul	;wreg free
  2186  00063C  0E2B               	movlw	low (_f_aptos+43)
  2187  00063E  2401               	addwf	?i2___wmul^0,w,c
  2188  000640  6ED9               	movwf	fsr2l,c
  2189  000642  0E02               	movlw	high (_f_aptos+43)
  2190  000644  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2191  000646  6EDA               	movwf	fsr2h,c
  2192  000648  50DF               	movf	indf2,w,c
  2193  00064A  6ED8               	movwf	216,c	;volatile
  2194  00064C  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2195  000650  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2196  000654  0E00               	movlw	0
  2197  000656  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2198  000658  0E2E               	movlw	46
  2199  00065A  6E03               	movwf	i2___wmul@multiplicand^0,c
  2200  00065C  ECF1  F005         	call	i2___wmul	;wreg free
  2201  000660  0E27               	movlw	low (_f_aptos+39)
  2202  000662  2401               	addwf	?i2___wmul^0,w,c
  2203  000664  6ED9               	movwf	fsr2l,c
  2204  000666  0E02               	movlw	high (_f_aptos+39)
  2205  000668  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2206  00066A  6EDA               	movwf	fsr2h,c
  2207  00066C  CFDE F00F          	movff	postinc2,??_IRQ_Timer0
  2208  000670  CFDD F010          	movff	postdec2,??_IRQ_Timer0+1
  2209  000674  0EFF               	movlw	255
  2210  000676  240F               	addwf	??_IRQ_Timer0^0,w,c
  2211  000678  0100               	movlb	0	; () banked
  2212  00067A  6F80               	movwf	_index& (0+255),b
  2213  00067C  0EFF               	movlw	255
  2214  00067E  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  2215  000680  6F81               	movwf	(_index+1)& (0+255),b
  2216  000682                     
  2217                           ; BSR set to: 0
  2218  000682  0E00               	movlw	0
  2219  000684  6EFC               	movwf	252,c	;volatile
  2220  000686  EF6C  F003         	goto	i2l1499
  2221  00068A                     i2l230:
  2222                           
  2223                           ; BSR set to: 0
  2224  00068A  0005               	push		;# 
  2225  00068C  C2E8  F001         	movff	_f_aptos+232,i2___wmul@multiplier
  2226  000690  C2E9  F002         	movff	_f_aptos+233,i2___wmul@multiplier+1
  2227  000694  0E00               	movlw	0
  2228  000696  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2229  000698  0E2E               	movlw	46
  2230  00069A  6E03               	movwf	i2___wmul@multiplicand^0,c
  2231  00069C  ECF1  F005         	call	i2___wmul	;wreg free
  2232  0006A0  0E00               	movlw	low _f_aptos
  2233  0006A2  6E0F               	movwf	??_IRQ_Timer0^0,c
  2234  0006A4  0E02               	movlw	high _f_aptos
  2235  0006A6  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  2236  0006A8  0E07               	movlw	7
  2237  0006AA  260F               	addwf	??_IRQ_Timer0^0,f,c
  2238  0006AC  0E00               	movlw	0
  2239  0006AE  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  2240  0006B0  5001               	movf	?i2___wmul^0,w,c
  2241  0006B2  260F               	addwf	??_IRQ_Timer0^0,f,c
  2242  0006B4  5002               	movf	(?i2___wmul+1)^0,w,c
  2243  0006B6  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  2244  0006B8  0100               	movlb	0	; () banked
  2245  0006BA  5180               	movf	_index& (0+255),w,b
  2246  0006BC  240F               	addwf	??_IRQ_Timer0^0,w,c
  2247  0006BE  6ED9               	movwf	fsr2l,c
  2248  0006C0  5181               	movf	(_index+1)& (0+255),w,b
  2249  0006C2  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  2250  0006C4  6EDA               	movwf	fsr2h,c
  2251  0006C6  50DF               	movf	indf2,w,c
  2252  0006C8  6E11               	movwf	(??_IRQ_Timer0+2)^0,c
  2253  0006CA  5011               	movf	(??_IRQ_Timer0+2)^0,w,c
  2254  0006CC  6EFD               	movwf	253,c	;volatile
  2255  0006CE  6AFE               	clrf	254,c	;volatile
  2256  0006D0  6AFF               	clrf	255,c	;volatile
  2257  0006D2                     
  2258                           ; BSR set to: 0
  2259  0006D2  0780               	decf	_index& (0+255),f,b
  2260  0006D4  A0D8               	btfss	status,0,c
  2261  0006D6  0781               	decf	(_index+1)& (0+255),f,b
  2262  0006D8                     i2l1499:
  2263                           
  2264                           ; BSR set to: 0
  2265  0006D8  5180               	movf	_index& (0+255),w,b
  2266  0006DA  1181               	iorwf	(_index+1)& (0+255),w,b
  2267  0006DC  A4D8               	btfss	status,2,c
  2268  0006DE  EF73  F003         	goto	i2u63_41
  2269  0006E2  EF75  F003         	goto	i2u63_40
  2270  0006E6                     i2u63_41:
  2271  0006E6  EF45  F003         	goto	i2l230
  2272  0006EA                     i2u63_40:
  2273  0006EA                     i2l228:
  2274  0006EA  8EF2               	bsf	242,7,c	;volatile
  2275  0006EC                     
  2276                           ;timer.c: 61:             quantum = 12;
  2277  0006EC  0E00               	movlw	0
  2278  0006EE  6E1D               	movwf	(_quantum+1)^0,c
  2279  0006F0  0E0C               	movlw	12
  2280  0006F2  6E1C               	movwf	_quantum^0,c
  2281  0006F4                     i2l1503:
  2282                           
  2283                           ;timer.c: 64:       if (controle_delay() && 0 == 1) {
  2284  0006F4  EC86  F003         	call	_controle_delay	;wreg free
  2285  0006F8                     i2l247:
  2286  0006F8  C015  FFF4         	movff	??_IRQ_Timer0+6,prodh
  2287  0006FC  C014  FFF3         	movff	??_IRQ_Timer0+5,prodl
  2288  000700  C013  FFDA         	movff	??_IRQ_Timer0+4,fsr2h
  2289  000704  C012  FFD9         	movff	??_IRQ_Timer0+3,fsr2l
  2290  000708  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2291  00070A  0011               	retfie		f
  2292  00070C                     __end_of_IRQ_Timer0:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function i2_scheduler *****************
  2296 ;; Defined at:
  2297 ;;		line 12 in file "scheduler.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2   10[COMRAM] unsigned int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         2       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:         2       0       0       0       0       0       0
  2315 ;;Total ram usage:        2 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    2
  2318 ;; This function calls:
  2319 ;;		i2_rr_scheduler
  2320 ;; This function is called by:
  2321 ;;		_IRQ_Timer0
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text17
  2326  000C28                     __ptext17:
  2327                           	callstack 0
  2328  000C28                     i2_scheduler:
  2329                           	callstack 19
  2330  000C28                     
  2331                           ;scheduler.c: 15:    return rr_scheduler();
  2332  000C28  EC6D  F004         	call	i2_rr_scheduler	;wreg free
  2333  000C2C  C007  F00B         	movff	?i2_rr_scheduler,?i2_scheduler
  2334  000C30  C008  F00C         	movff	?i2_rr_scheduler+1,?i2_scheduler+1
  2335  000C34  0012               	return		;funcret
  2336  000C36                     __end_ofi2_scheduler:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function i2_rr_scheduler *****************
  2340 ;; Defined at:
  2341 ;;		line 22 in file "scheduler.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  next_task       2    8[COMRAM] unsigned int 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  2    6[COMRAM] unsigned int 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2355 ;;      Params:         2       0       0       0       0       0       0
  2356 ;;      Locals:         2       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0
  2358 ;;      Totals:         4       0       0       0       0       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    1
  2362 ;; This function calls:
  2363 ;;		i2___lwmod
  2364 ;;		i2___wmul
  2365 ;; This function is called by:
  2366 ;;		i2_scheduler
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text18
  2371  0008DA                     __ptext18:
  2372                           	callstack 0
  2373  0008DA                     i2_rr_scheduler:
  2374                           	callstack 19
  2375  0008DA                     
  2376                           ;scheduler.c: 24:    u_int next_task = f_aptos.task_running;
  2377  0008DA  C2E8  F009         	movff	_f_aptos+232,i2rr_scheduler@next_task
  2378  0008DE  C2E9  F00A         	movff	_f_aptos+233,i2rr_scheduler@next_task+1
  2379  0008E2                     i2l1317:
  2380                           
  2381                           ;scheduler.c: 28:       next_task = (next_task + 1) % (f_aptos.ready_queue_size + 1);
  2382  0008E2  0E01               	movlw	1
  2383  0008E4  2409               	addwf	i2rr_scheduler@next_task^0,w,c
  2384  0008E6  6E01               	movwf	i2___lwmod@dividend^0,c
  2385  0008E8  0E00               	movlw	0
  2386  0008EA  200A               	addwfc	(i2rr_scheduler@next_task+1)^0,w,c
  2387  0008EC  6E02               	movwf	(i2___lwmod@dividend+1)^0,c
  2388  0008EE  0E01               	movlw	1
  2389  0008F0  0102               	movlb	2	; () banked
  2390  0008F2  25E6               	addwf	(_f_aptos+230)& (0+255),w,b
  2391  0008F4  6E03               	movwf	i2___lwmod@divisor^0,c
  2392  0008F6  0E00               	movlw	0
  2393  0008F8  21E7               	addwfc	(_f_aptos+231)& (0+255),w,b
  2394  0008FA  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  2395  0008FC  ECD4  F004         	call	i2___lwmod	;wreg free
  2396  000900  C001  F009         	movff	?i2___lwmod,i2rr_scheduler@next_task
  2397  000904  C002  F00A         	movff	?i2___lwmod+1,i2rr_scheduler@next_task+1
  2398  000908                     
  2399                           ;scheduler.c: 29:    } while (f_aptos.ready_queue[next_task].task_state != READY);
  2400  000908  C009  F001         	movff	i2rr_scheduler@next_task,i2___wmul@multiplier
  2401  00090C  C00A  F002         	movff	i2rr_scheduler@next_task+1,i2___wmul@multiplier+1
  2402  000910  0E00               	movlw	0
  2403  000912  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2404  000914  0E2E               	movlw	46
  2405  000916  6E03               	movwf	i2___wmul@multiplicand^0,c
  2406  000918  ECF1  F005         	call	i2___wmul	;wreg free
  2407  00091C  0E02               	movlw	low (_f_aptos+2)
  2408  00091E  2401               	addwf	?i2___wmul^0,w,c
  2409  000920  6ED9               	movwf	fsr2l,c
  2410  000922  0E02               	movlw	high (_f_aptos+2)
  2411  000924  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2412  000926  6EDA               	movwf	fsr2h,c
  2413  000928  50DF               	movf	indf2,w,c
  2414  00092A  A4D8               	btfss	status,2,c
  2415  00092C  EF9A  F004         	goto	i2u41_41
  2416  000930  EF9C  F004         	goto	i2u41_40
  2417  000934                     i2u41_41:
  2418  000934  EF71  F004         	goto	i2l1317
  2419  000938                     i2u41_40:
  2420  000938                     
  2421                           ;scheduler.c: 32:    return next_task;
  2422  000938  C009  F007         	movff	i2rr_scheduler@next_task,?i2_rr_scheduler
  2423  00093C  C00A  F008         	movff	i2rr_scheduler@next_task+1,?i2_rr_scheduler+1
  2424  000940  0012               	return		;funcret
  2425  000942                     __end_ofi2_rr_scheduler:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function i2___lwmod *****************
  2429 ;; Defined at:
  2430 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  dividend        2    0[COMRAM] unsigned int 
  2433 ;;  divisor         2    2[COMRAM] unsigned int 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  counter         1    4[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2    0[COMRAM] unsigned int 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2445 ;;      Params:         4       0       0       0       0       0       0
  2446 ;;      Locals:         1       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0
  2448 ;;      Totals:         5       0       0       0       0       0       0
  2449 ;;Total ram usage:        5 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		i2_rr_scheduler
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text19
  2459  0009A8                     __ptext19:
  2460                           	callstack 0
  2461  0009A8                     i2___lwmod:
  2462                           	callstack 19
  2463  0009A8  5003               	movf	i2___lwmod@divisor^0,w,c
  2464  0009AA  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  2465  0009AC  B4D8               	btfsc	status,2,c
  2466  0009AE  EFDB  F004         	goto	i2u37_41
  2467  0009B2  EFDD  F004         	goto	i2u37_40
  2468  0009B6                     i2u37_41:
  2469  0009B6  EF01  F005         	goto	i2l751
  2470  0009BA                     i2u37_40:
  2471  0009BA  0E01               	movlw	1
  2472  0009BC  6E05               	movwf	i2___lwmod@counter^0,c
  2473  0009BE  EFE5  F004         	goto	i2l1283
  2474  0009C2                     i2l1281:
  2475  0009C2  90D8               	bcf	status,0,c
  2476  0009C4  3603               	rlcf	i2___lwmod@divisor^0,f,c
  2477  0009C6  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  2478  0009C8  2A05               	incf	i2___lwmod@counter^0,f,c
  2479  0009CA                     i2l1283:
  2480  0009CA  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
  2481  0009CC  EFEA  F004         	goto	i2u38_41
  2482  0009D0  EFEC  F004         	goto	i2u38_40
  2483  0009D4                     i2u38_41:
  2484  0009D4  EFE1  F004         	goto	i2l1281
  2485  0009D8                     i2u38_40:
  2486  0009D8                     i2l1285:
  2487  0009D8  5003               	movf	i2___lwmod@divisor^0,w,c
  2488  0009DA  5C01               	subwf	i2___lwmod@dividend^0,w,c
  2489  0009DC  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  2490  0009DE  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  2491  0009E0  A0D8               	btfss	status,0,c
  2492  0009E2  EFF5  F004         	goto	i2u39_41
  2493  0009E6  EFF7  F004         	goto	i2u39_40
  2494  0009EA                     i2u39_41:
  2495  0009EA  EFFB  F004         	goto	i2l1289
  2496  0009EE                     i2u39_40:
  2497  0009EE  5003               	movf	i2___lwmod@divisor^0,w,c
  2498  0009F0  5E01               	subwf	i2___lwmod@dividend^0,f,c
  2499  0009F2  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  2500  0009F4  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  2501  0009F6                     i2l1289:
  2502  0009F6  90D8               	bcf	status,0,c
  2503  0009F8  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  2504  0009FA  3203               	rrcf	i2___lwmod@divisor^0,f,c
  2505  0009FC  2E05               	decfsz	i2___lwmod@counter^0,f,c
  2506  0009FE  EFEC  F004         	goto	i2l1285
  2507  000A02                     i2l751:
  2508  000A02  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  2509  000A06  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2510  000A0A  0012               	return		;funcret
  2511  000A0C                     __end_ofi2___lwmod:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _controle_delay *****************
  2515 ;; Defined at:
  2516 ;;		line 26 in file "timer.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  i               2   12[COMRAM] int 
  2521 ;;  flag            2   10[COMRAM] int 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  2    6[COMRAM] unsigned int 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2531 ;;      Params:         2       0       0       0       0       0       0
  2532 ;;      Locals:         4       0       0       0       0       0       0
  2533 ;;      Temps:          2       0       0       0       0       0       0
  2534 ;;      Totals:         8       0       0       0       0       0       0
  2535 ;;Total ram usage:        8 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    1
  2538 ;; This function calls:
  2539 ;;		i2___wmul
  2540 ;; This function is called by:
  2541 ;;		_IRQ_Timer0
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text20
  2546  00070C                     __ptext20:
  2547                           	callstack 0
  2548  00070C                     _controle_delay:
  2549                           	callstack 20
  2550  00070C                     
  2551                           ;timer.c: 28:    int i, flag = 0;
  2552  00070C  0E00               	movlw	0
  2553  00070E  6E0C               	movwf	(controle_delay@flag+1)^0,c
  2554  000710  0E00               	movlw	0
  2555  000712  6E0B               	movwf	controle_delay@flag^0,c
  2556                           
  2557                           ;timer.c: 31:    for (i = 0; i < f_aptos.ready_queue_size; i++) {
  2558  000714  0E00               	movlw	0
  2559  000716  6E0E               	movwf	(controle_delay@i+1)^0,c
  2560  000718  0E00               	movlw	0
  2561  00071A  6E0D               	movwf	controle_delay@i^0,c
  2562  00071C  EFED  F003         	goto	i2l1383
  2563  000720                     i2l1373:
  2564                           
  2565                           ; BSR set to: 2
  2566                           ;timer.c: 32:       if (f_aptos.ready_queue[i].task_state == WAITING_DELAY) {
  2567  000720  C00D  F001         	movff	controle_delay@i,i2___wmul@multiplier
  2568  000724  C00E  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  2569  000728  0E00               	movlw	0
  2570  00072A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2571  00072C  0E2E               	movlw	46
  2572  00072E  6E03               	movwf	i2___wmul@multiplicand^0,c
  2573  000730  ECF1  F005         	call	i2___wmul	;wreg free
  2574  000734  0E02               	movlw	low (_f_aptos+2)
  2575  000736  2401               	addwf	?i2___wmul^0,w,c
  2576  000738  6ED9               	movwf	fsr2l,c
  2577  00073A  0E02               	movlw	high (_f_aptos+2)
  2578  00073C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2579  00073E  6EDA               	movwf	fsr2h,c
  2580  000740  0E03               	movlw	3
  2581  000742  18DE               	xorwf	postinc2,w,c
  2582  000744  A4D8               	btfss	status,2,c
  2583  000746  EFA7  F003         	goto	i2u46_41
  2584  00074A  EFA9  F003         	goto	i2u46_40
  2585  00074E                     i2u46_41:
  2586  00074E  EFEB  F003         	goto	i2l1381
  2587  000752                     i2u46_40:
  2588  000752                     
  2589                           ;timer.c: 33:          f_aptos.ready_queue[i].delay--;
  2590  000752  C00D  F001         	movff	controle_delay@i,i2___wmul@multiplier
  2591  000756  C00E  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  2592  00075A  0E00               	movlw	0
  2593  00075C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2594  00075E  0E2E               	movlw	46
  2595  000760  6E03               	movwf	i2___wmul@multiplicand^0,c
  2596  000762  ECF1  F005         	call	i2___wmul	;wreg free
  2597  000766  0E2C               	movlw	low (_f_aptos+44)
  2598  000768  2401               	addwf	?i2___wmul^0,w,c
  2599  00076A  6ED9               	movwf	fsr2l,c
  2600  00076C  0E02               	movlw	high (_f_aptos+44)
  2601  00076E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2602  000770  6EDA               	movwf	fsr2h,c
  2603  000772  06DE               	decf	postinc2,f,c
  2604  000774  0E00               	movlw	0
  2605  000776  5ADD               	subwfb	postdec2,f,c
  2606                           
  2607                           ;timer.c: 34:          if (f_aptos.ready_queue[i].delay == 0) {
  2608  000778  C00D  F001         	movff	controle_delay@i,i2___wmul@multiplier
  2609  00077C  C00E  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  2610  000780  0E00               	movlw	0
  2611  000782  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2612  000784  0E2E               	movlw	46
  2613  000786  6E03               	movwf	i2___wmul@multiplicand^0,c
  2614  000788  ECF1  F005         	call	i2___wmul	;wreg free
  2615  00078C  0E2C               	movlw	low (_f_aptos+44)
  2616  00078E  2401               	addwf	?i2___wmul^0,w,c
  2617  000790  6ED9               	movwf	fsr2l,c
  2618  000792  0E02               	movlw	high (_f_aptos+44)
  2619  000794  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2620  000796  6EDA               	movwf	fsr2h,c
  2621  000798  50DE               	movf	postinc2,w,c
  2622  00079A  10DE               	iorwf	postinc2,w,c
  2623  00079C  A4D8               	btfss	status,2,c
  2624  00079E  EFD3  F003         	goto	i2u47_41
  2625  0007A2  EFD5  F003         	goto	i2u47_40
  2626  0007A6                     i2u47_41:
  2627  0007A6  EFEB  F003         	goto	i2l1381
  2628  0007AA                     i2u47_40:
  2629  0007AA                     
  2630                           ;timer.c: 35:             f_aptos.ready_queue[i].task_state = READY;
  2631  0007AA  C00D  F001         	movff	controle_delay@i,i2___wmul@multiplier
  2632  0007AE  C00E  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  2633  0007B2  0E00               	movlw	0
  2634  0007B4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2635  0007B6  0E2E               	movlw	46
  2636  0007B8  6E03               	movwf	i2___wmul@multiplicand^0,c
  2637  0007BA  ECF1  F005         	call	i2___wmul	;wreg free
  2638  0007BE  0E02               	movlw	low (_f_aptos+2)
  2639  0007C0  2401               	addwf	?i2___wmul^0,w,c
  2640  0007C2  6ED9               	movwf	fsr2l,c
  2641  0007C4  0E02               	movlw	high (_f_aptos+2)
  2642  0007C6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  2643  0007C8  6EDA               	movwf	fsr2h,c
  2644  0007CA  0E00               	movlw	0
  2645  0007CC  6EDF               	movwf	indf2,c
  2646  0007CE                     
  2647                           ;timer.c: 36:             flag = 1;
  2648  0007CE  0E00               	movlw	0
  2649  0007D0  6E0C               	movwf	(controle_delay@flag+1)^0,c
  2650  0007D2  0E01               	movlw	1
  2651  0007D4  6E0B               	movwf	controle_delay@flag^0,c
  2652  0007D6                     i2l1381:
  2653                           
  2654                           ;timer.c: 39:    }
  2655  0007D6  4A0D               	infsnz	controle_delay@i^0,f,c
  2656  0007D8  2A0E               	incf	(controle_delay@i+1)^0,f,c
  2657  0007DA                     i2l1383:
  2658  0007DA  0102               	movlb	2	; () banked
  2659  0007DC  51E6               	movf	(_f_aptos+230)& (0+255),w,b
  2660  0007DE  5C0D               	subwf	controle_delay@i^0,w,c
  2661  0007E0  51E7               	movf	(_f_aptos+231)& (0+255),w,b
  2662  0007E2  580E               	subwfb	(controle_delay@i+1)^0,w,c
  2663  0007E4  A0D8               	btfss	status,0,c
  2664  0007E6  EFF7  F003         	goto	i2u48_41
  2665  0007EA  EFF9  F003         	goto	i2u48_40
  2666  0007EE                     i2u48_41:
  2667  0007EE  EF90  F003         	goto	i2l1373
  2668  0007F2                     i2u48_40:
  2669  0007F2                     
  2670                           ; BSR set to: 2
  2671                           ;timer.c: 41:    return flag;
  2672  0007F2  C00B  F007         	movff	controle_delay@flag,?_controle_delay
  2673  0007F6  C00C  F008         	movff	controle_delay@flag+1,?_controle_delay+1
  2674  0007FA                     
  2675                           ; BSR set to: 2
  2676  0007FA  0012               	return		;funcret
  2677  0007FC                     __end_of_controle_delay:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function i2___wmul *****************
  2681 ;; Defined at:
  2682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  multiplier      2    0[COMRAM] unsigned int 
  2685 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  product         2    4[COMRAM] unsigned int 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2    0[COMRAM] unsigned int 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, prodl, prodh
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2697 ;;      Params:         4       0       0       0       0       0       0
  2698 ;;      Locals:         2       0       0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0
  2700 ;;      Totals:         6       0       0       0       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_controle_delay
  2707 ;;		_IRQ_Timer0
  2708 ;;		i2_rr_scheduler
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text21
  2713  000BE2                     __ptext21:
  2714                           	callstack 0
  2715  000BE2                     i2___wmul:
  2716                           	callstack 19
  2717  000BE2  5001               	movf	i2___wmul@multiplier^0,w,c
  2718  000BE4  0203               	mulwf	i2___wmul@multiplicand^0,c
  2719  000BE6  CFF3 F005          	movff	prodl,i2___wmul@product
  2720  000BEA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  2721  000BEE  5001               	movf	i2___wmul@multiplier^0,w,c
  2722  000BF0  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  2723  000BF2  50F3               	movf	243,w,c
  2724  000BF4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  2725  000BF6  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  2726  000BF8  0203               	mulwf	i2___wmul@multiplicand^0,c
  2727  000BFA  50F3               	movf	243,w,c
  2728  000BFC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  2729  000BFE  C005  F001         	movff	i2___wmul@product,?i2___wmul
  2730  000C02  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  2731  000C06  0012               	return		;funcret
  2732  000C08                     __end_ofi2___wmul:
  2733                           	callstack 0
  2734  0000                     
  2735                           	psect	text22
  2736  000000                     __ptext22:
  2737                           	callstack 0
  2738  000000                     
  2739                           	psect	rparam
  2740  0000                     
  2741                           	psect	temp
  2742  00001E                     btemp:
  2743                           	callstack 0
  2744  00001E                     	ds	1
  2745  0000                     int$flags	set	btemp
  2746  0000                     wtemp8	set	btemp+1
  2747  0000                     ttemp5	set	btemp+1
  2748  0000                     ttemp6	set	btemp+4
  2749  0000                     ttemp7	set	btemp+8
  2750                           
  2751                           	psect	idloc
  2752                           
  2753                           ;Config register IDLOC0 @ 0x200000
  2754                           ;	unspecified, using default values
  2755  200000                     	org	2097152
  2756  200000  FF                 	db	255
  2757                           
  2758                           ;Config register IDLOC1 @ 0x200001
  2759                           ;	unspecified, using default values
  2760  200001                     	org	2097153
  2761  200001  FF                 	db	255
  2762                           
  2763                           ;Config register IDLOC2 @ 0x200002
  2764                           ;	unspecified, using default values
  2765  200002                     	org	2097154
  2766  200002  FF                 	db	255
  2767                           
  2768                           ;Config register IDLOC3 @ 0x200003
  2769                           ;	unspecified, using default values
  2770  200003                     	org	2097155
  2771  200003  FF                 	db	255
  2772                           
  2773                           ;Config register IDLOC4 @ 0x200004
  2774                           ;	unspecified, using default values
  2775  200004                     	org	2097156
  2776  200004  FF                 	db	255
  2777                           
  2778                           ;Config register IDLOC5 @ 0x200005
  2779                           ;	unspecified, using default values
  2780  200005                     	org	2097157
  2781  200005  FF                 	db	255
  2782                           
  2783                           ;Config register IDLOC6 @ 0x200006
  2784                           ;	unspecified, using default values
  2785  200006                     	org	2097158
  2786  200006  FF                 	db	255
  2787                           
  2788                           ;Config register IDLOC7 @ 0x200007
  2789                           ;	unspecified, using default values
  2790  200007                     	org	2097159
  2791  200007  FF                 	db	255
  2792                           
  2793                           	psect	config
  2794                           
  2795                           ; Padding undefined space
  2796  300000                     	org	3145728
  2797  300000  FF                 	db	255
  2798                           
  2799                           ;Config register CONFIG1H @ 0x300001
  2800                           ;	Oscillator Selection bits
  2801                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  2802                           ;	Fail-Safe Clock Monitor Enable bit
  2803                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2804                           ;	Internal/External Oscillator Switchover bit
  2805                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2806  300001                     	org	3145729
  2807  300001  07                 	db	7
  2808                           
  2809                           ;Config register CONFIG2L @ 0x300002
  2810                           ;	Power-up Timer Enable bit
  2811                           ;	PWRT = OFF, PWRT disabled
  2812                           ;	Brown-out Reset Enable bits
  2813                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2814                           ;	Brown Out Reset Voltage bits
  2815                           ;	BORV = 3, Minimum setting
  2816  300002                     	org	3145730
  2817  300002  1F                 	db	31
  2818                           
  2819                           ;Config register CONFIG2H @ 0x300003
  2820                           ;	Watchdog Timer Enable bit
  2821                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2822                           ;	Watchdog Timer Postscale Select bits
  2823                           ;	WDTPS = 32768, 1:32768
  2824  300003                     	org	3145731
  2825  300003  1E                 	db	30
  2826                           
  2827                           ; Padding undefined space
  2828  300004                     	org	3145732
  2829  300004  FF                 	db	255
  2830                           
  2831                           ;Config register CONFIG3H @ 0x300005
  2832                           ;	CCP2 MUX bit
  2833                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2834                           ;	PORTB A/D Enable bit
  2835                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2836                           ;	Low-Power Timer1 Oscillator Enable bit
  2837                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2838                           ;	MCLR Pin Enable bit
  2839                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2840  300005                     	org	3145733
  2841  300005  83                 	db	131
  2842                           
  2843                           ;Config register CONFIG4L @ 0x300006
  2844                           ;	Stack Full/Underflow Reset Enable bit
  2845                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2846                           ;	Single-Supply ICSP Enable bit
  2847                           ;	LVP = ON, Single-Supply ICSP enabled
  2848                           ;	Extended Instruction Set Enable bit
  2849                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2850                           ;	Background Debugger Enable bit
  2851                           ;	DEBUG = 0x1, unprogrammed default
  2852  300006                     	org	3145734
  2853  300006  85                 	db	133
  2854                           
  2855                           ; Padding undefined space
  2856  300007                     	org	3145735
  2857  300007  FF                 	db	255
  2858                           
  2859                           ;Config register CONFIG5L @ 0x300008
  2860                           ;	Code Protection bit
  2861                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2862                           ;	Code Protection bit
  2863                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2864                           ;	Code Protection bit
  2865                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2866                           ;	Code Protection bit
  2867                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2868  300008                     	org	3145736
  2869  300008  0F                 	db	15
  2870                           
  2871                           ;Config register CONFIG5H @ 0x300009
  2872                           ;	Boot Block Code Protection bit
  2873                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2874                           ;	Data EEPROM Code Protection bit
  2875                           ;	CPD = OFF, Data EEPROM not code-protected
  2876  300009                     	org	3145737
  2877  300009  C0                 	db	192
  2878                           
  2879                           ;Config register CONFIG6L @ 0x30000A
  2880                           ;	Write Protection bit
  2881                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2882                           ;	Write Protection bit
  2883                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2884                           ;	Write Protection bit
  2885                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2886                           ;	Write Protection bit
  2887                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2888  30000A                     	org	3145738
  2889  30000A  0F                 	db	15
  2890                           
  2891                           ;Config register CONFIG6H @ 0x30000B
  2892                           ;	Configuration Register Write Protection bit
  2893                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2894                           ;	Boot Block Write Protection bit
  2895                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2896                           ;	Data EEPROM Write Protection bit
  2897                           ;	WRTD = OFF, Data EEPROM not write-protected
  2898  30000B                     	org	3145739
  2899  30000B  E0                 	db	224
  2900                           
  2901                           ;Config register CONFIG7L @ 0x30000C
  2902                           ;	Table Read Protection bit
  2903                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2904                           ;	Table Read Protection bit
  2905                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2906                           ;	Table Read Protection bit
  2907                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2908                           ;	Table Read Protection bit
  2909                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2910  30000C                     	org	3145740
  2911  30000C  0F                 	db	15
  2912                           
  2913                           ;Config register CONFIG7H @ 0x30000D
  2914                           ;	Boot Block Table Read Protection bit
  2915                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2916  30000D                     	org	3145741
  2917  30000D  40                 	db	64
  2918                           tosu	equ	0xFFF
  2919                           tosh	equ	0xFFE
  2920                           tosl	equ	0xFFD
  2921                           stkptr	equ	0xFFC
  2922                           pclatu	equ	0xFFB
  2923                           pclath	equ	0xFFA
  2924                           pcl	equ	0xFF9
  2925                           tblptru	equ	0xFF8
  2926                           tblptrh	equ	0xFF7
  2927                           tblptrl	equ	0xFF6
  2928                           tablat	equ	0xFF5
  2929                           prodh	equ	0xFF4
  2930                           prodl	equ	0xFF3
  2931                           indf0	equ	0xFEF
  2932                           postinc0	equ	0xFEE
  2933                           postdec0	equ	0xFED
  2934                           preinc0	equ	0xFEC
  2935                           plusw0	equ	0xFEB
  2936                           fsr0h	equ	0xFEA
  2937                           fsr0l	equ	0xFE9
  2938                           wreg	equ	0xFE8
  2939                           indf1	equ	0xFE7
  2940                           postinc1	equ	0xFE6
  2941                           postdec1	equ	0xFE5
  2942                           preinc1	equ	0xFE4
  2943                           plusw1	equ	0xFE3
  2944                           fsr1h	equ	0xFE2
  2945                           fsr1l	equ	0xFE1
  2946                           bsr	equ	0xFE0
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           preinc2	equ	0xFDC
  2951                           plusw2	equ	0xFDB
  2952                           fsr2h	equ	0xFDA
  2953                           fsr2l	equ	0xFD9
  2954                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     27      29
    BANK0           128      0       2
    BANK1           256    114     114
    BANK2           256      0     234
    BANK3           256     46      46
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    task_create@func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 

    S34tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 

    f_aptos.ready_queue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    None.

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    None.

Critical Paths under _IRQ_Timer0 in COMRAM

    _IRQ_Timer0->_controle_delay
    i2_scheduler->i2_rr_scheduler
    i2_rr_scheduler->i2___wmul
    _controle_delay->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_3 in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_1 in BANK0

    None.

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_3 in BANK0

    None.

Critical Paths under _IRQ_Timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_task_create
    _os_config->_task_create
    _task_create->___wmul

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_1 in BANK1

    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_2 in BANK1

    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_3 in BANK1

    _task_3->_task_delay
    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_1 in BANK1

    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_2 in BANK1

    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_3 in BANK1

    _task_3->_task_delay
    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _IRQ_Timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _IRQ_Timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_task_create
    _os_config->_task_create

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _IRQ_Timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _IRQ_Timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _IRQ_Timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24664
                          _os_config
                           _os_start
                        _task_create
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0   12332
                       _config_tasks
                      _setup_timer_0
                        _task_create
 ---------------------------------------------------------------------------------
 (1) _task_create                                         50    46      4   12332
                                            110 BANK1      4     0      4
                                              0 BANK3     46    46      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   11088
                                            104 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _setup_timer_0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_tasks                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_idle                                            1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_1                                               1     1      0    9914
                                             25 COMRAM     1     1      0
                         _task_delay
 ---------------------------------------------------------------------------------
 (5) _task_delay                                           5     3      2    9914
                                             98 BANK1      5     3      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            2     0      2    5339
                                             96 BANK1      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         4     2      2    5339
                                             92 BANK1      4     2      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4    3990
                                             86 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1046
                                             86 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_2                                               1     1      0    9914
                                             26 COMRAM     1     1      0
                         _task_delay
 ---------------------------------------------------------------------------------
 (5) _task_delay                                           5     3      2    9914
                                             98 BANK1      5     3      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            2     0      2    5339
                                             96 BANK1      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         4     2      2    5339
                                             92 BANK1      4     2      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4    3990
                                             86 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1046
                                             86 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_3                                               1     1      0    9914
                                            103 BANK1      1     1      0
                         _task_delay
 ---------------------------------------------------------------------------------
 (5) _task_delay                                           5     3      2    9914
                                             98 BANK1      5     3      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            2     0      2    5339
                                             96 BANK1      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         4     2      2    5339
                                             92 BANK1      4     2      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4    3990
                                             86 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1046
                                             86 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_idle                                            1     1      0       0
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_1                                               1     1      0    9914
                                             25 COMRAM     1     1      0
                         _task_delay
 ---------------------------------------------------------------------------------
 (5) _task_delay                                           5     3      2    9914
                                             98 BANK1      5     3      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            2     0      2    5339
                                             96 BANK1      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         4     2      2    5339
                                             92 BANK1      4     2      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4    3990
                                             86 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1046
                                             86 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_2                                               1     1      0    9914
                                             26 COMRAM     1     1      0
                         _task_delay
 ---------------------------------------------------------------------------------
 (5) _task_delay                                           5     3      2    9914
                                             98 BANK1      5     3      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            2     0      2    5339
                                             96 BANK1      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         4     2      2    5339
                                             92 BANK1      4     2      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4    3990
                                             86 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1046
                                             86 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_3                                               1     1      0    9914
                                            103 BANK1      1     1      0
                         _task_delay
 ---------------------------------------------------------------------------------
 (5) _task_delay                                           5     3      2    9914
                                             98 BANK1      5     3      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            2     0      2    5339
                                             96 BANK1      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         4     2      2    5339
                                             92 BANK1      4     2      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4    3990
                                             86 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1046
                                             86 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IRQ_Timer0                                           8     8      0    6664
                                             14 COMRAM     7     7      0
                     _controle_delay
                           i2___wmul
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (10) i2_scheduler                                         2     0      2    2362
                                             10 COMRAM     2     0      2
                     i2_rr_scheduler
 ---------------------------------------------------------------------------------
 (11) i2_rr_scheduler                                      4     2      2    2362
                                              6 COMRAM     4     2      2
                          i2___lwmod
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (10) _controle_delay                                      8     6      2    2219
                                              6 COMRAM     8     6      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) i2___wmul                                            6     2      4    2083
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _config_tasks
     _setup_timer_0
     _task_create
       ___wmul
   _os_start
   _task_create
     ___wmul

 _task_idle (ROOT)

 _task_1 (ROOT)
   _task_delay
     _scheduler
       _rr_scheduler
         ___lwmod
         i1___wmul
     i1___wmul

 _task_2 (ROOT)
   _task_delay
     _scheduler
       _rr_scheduler
         ___lwmod
         i1___wmul
     i1___wmul

 _task_3 (ROOT)
   _task_delay
     _scheduler
       _rr_scheduler
         ___lwmod
         i1___wmul
     i1___wmul

 _task_idle (ROOT)

 _task_1 (ROOT)
   _task_delay
     _scheduler
       _rr_scheduler
         ___lwmod
         i1___wmul
     i1___wmul

 _task_2 (ROOT)
   _task_delay
     _scheduler
       _rr_scheduler
         ___lwmod
         i1___wmul
     i1___wmul

 _task_3 (ROOT)
   _task_delay
     _scheduler
       _rr_scheduler
         ___lwmod
         i1___wmul
     i1___wmul

 _IRQ_Timer0 (ROOT)
   _controle_delay
     i2___wmul
   i2___wmul
   i2_scheduler
     i2_rr_scheduler
       i2___lwmod
       i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     2E      2E      11       18.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EA       9       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     72      72       7       44.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       2       5        1.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1B      1D       1       23.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A9      15        0.0%
DATA                 0      0     1A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 05 00:53:07 2020

    __end_ofi2_scheduler 0C36                       l20 0A56                       l19 0A56  
                     l72 08D8                       l81 0B66                       l75 0C44  
                     l78 0B64                       l96 0C3E                       l99 0B00  
i2rr_scheduler@next_task 0009      ___wmul@multiplicand 016A         i1___wmul@product 015A  
__size_of_controle_delay 00F0                      l111 0A5E                      l105 0A96  
                    l205 0C18                      l250 0BB8                      _BSR 000FE0  
                    _TOS 000FFD                      wreg 000FE8             fp__task_idle 0000  
                   l1083 0B66                     l2211 0BB0                     l2221 0890  
                   l2223 08A0                     l2215 0870                     l2231 0B46  
                   l2161 0A96                     l2209 0B92                     l2225 08D2  
                   l2217 0884                     l2233 0B4A                     l2163 0AB8  
                   l2219 088C                     l2235 0B60                     l2227 0B34  
                   l2165 0A5E                     l2157 0B00                     l2229 0B34  
                   l2237 0A0C                     l2167 0A84                     l2159 0B20  
                   l1607 0C40                     l2239 0A52                     l1591 0C08  
                   l1593 0C10                     l1595 0C36                     u1461 08CA  
                   i1l61 01A2                     i1l62 01CE                     i1l64 0392  
                   i1l66 0326                     i1l69 0394                     _WREG 000FE8  
                   _main 0A0C                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 001E  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
         ??_config_tasks 0168             ___param_bank 000000              ?_IRQ_Timer0 0001  
                  ?_main 0001                    i1l123 0C26                    i1l127 0866  
                  i1l128 086E                    i1l250 0BE0          __end_of___lwmod 09A8  
                  i2l123 0C34                    i2l212 07F2                    i2l213 07FA  
                  i2l230 068A                    i2l127 0938                    i2l128 0940  
                  i2l250 0C06                    i2l226 0546                    i2l228 06EA  
                  i2l247 06F8                    i1l751 099E                    i1l758 09A6  
                  i2l751 0A02                    i2l758 0A0A                    u17_20 0B76  
                  u17_21 0B70                    _TMR0L 000FD6                    u17_26 0B78  
                  _index 0080                    tablat 000FF5         __end_ofi1___wmul 0BE2  
       __end_ofi2___wmul 0C08                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 001F                    ttemp6 0022                    ttemp7 0026  
                  status 000FD8      i1___wmul@multiplier 0156                    wtemp8 001F  
            i2_scheduler 0C28          ??_setup_timer_0 0168       __size_ofi2___lwmod 0064  
        __initialization 0ACC             __end_of_main 0A5E           i2_rr_scheduler 08DA  
                 ??_main 0172            __activetblptr 000000                   i1l2101 0BBA  
                 i1l2103 0BD8                   i1l2111 0832                   i1l2113 0C1A  
                 i1l2121 004A                   i1l2107 07FC                   i1l2131 00EE  
                 i1l2123 0054                   i1l2109 0804                   i1l2141 0210  
                 i1l2133 0118                   i1l2125 007C                   i1l2117 0012  
                 i1l2151 0380                   i1l2143 0248                   i1l2135 0160  
                 i1l2127 00A2                   i1l2119 0014                   i1l2145 031E  
                 i1l2137 0168                   i1l2129 00C8                   i1l2091 0966  
                 i1l2147 0328                   i1l2139 017C                   i1l2093 0974  
                 i1l2085 0942                   i1l2149 0378                   i1l2095 098A  
                 i1l2087 0956                   i1l2097 0992                   i1l2089 095E  
                 i1l2099 0998                   i2l1315 08DA                   i2l1317 08E2  
                 i2l1501 06EC                   i2l1271 0BE2                   i2l1319 0908  
                 i2l1503 06F4                   u140_20 0A6E                   i2l1273 0BFE  
                 i2l1281 09C2                   u140_21 0A68                   i2l1371 070C  
                 i2l1291 09FC                   i2l1283 09CA                   i2l1381 07D6  
                 i2l1373 0720                   i2l1285 09D8                   i2l1277 09A8  
                 i2l1461 03BA                   u140_26 0A70                   i2l1375 0752  
                 i2l1383 07DA                   i2l1287 09EE                   i2l1279 09BA  
                 i2l1471 0412                   i2l1463 03BE                   i2l1377 07AA  
                 i2l1289 09F6                   i2l1385 0C28                   i2l1481 04CA  
                 i2l1473 0436                   i2l1465 03C4                   i2l1457 03A8  
                 i2l1379 07CE                   i2l1491 05BA                   i2l1483 0508  
                 i2l1475 045A                   i2l1467 03D6                   i2l1459 03B8  
                 i2l1493 0682                   i2l1485 050E                   i2l1477 047E  
                 i2l1469 0408                   i2l1495 068C                   i2l1479 04A2  
                 i2l1487 0522                   i2l1497 06D2                   i2l1489 0584  
                 i2l1499 06D8                   u138_20 0B10                   u138_21 0B0A  
                 u138_26 0B12                   u139_20 0AA6                   u139_21 0AA0  
                 u139_26 0AA8      __size_of_IRQ_Timer0 0704      task_create@new_task 0300  
                 _STATUS 000FD8                   _STKPTR 000FFC             ?_task_create 016E  
                 ___wmul 0B92   __end_ofi2_rr_scheduler 0942                ??___lwmod 015A  
         _controle_delay 070C                   clear_0 0AEA                   _task_1 0B00  
                 _task_2 0A96                   _task_3 0A5E             __pdataCOMRAM 001C  
       __end_of_os_start 0C46     __end_of_config_tasks 0C40        __end_ofi2___lwmod 0A0C  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0AF6            ___rparam_used 000001  
     i2___lwmod@dividend 0001           __pcstackCOMRAM 0001   __end_of_controle_delay 07FC  
       task_create@prior 016E          ?i2_rr_scheduler 0007                ?i1___wmul 0156  
              ?i2___wmul 0001               __pbssBANK0 0080               __pbssBANK2 0200  
     __size_of_scheduler 000E                  ?___wmul 0168          ?_controle_delay 0007  
           ??_IRQ_Timer0 000F       __size_of_os_config 0032                  ?_task_1 0001  
                ?_task_2 0001                  ?_task_3 0001       __size_of_task_idle 002C  
             ??i1___wmul 015A               ??i2___wmul 0005                  i2u41_40 0938  
                i2u41_41 0934                  i2u60_40 0408                  i2u60_41 0404  
                i2u37_40 09BA                  i2u61_40 051E                  i2u37_41 09B6  
                i2u61_41 051A                  i2u46_40 0752                  i2u38_40 09D8  
                i2u62_40 0584                  i2u46_41 074E                  i2u38_41 09D4  
                i2u62_41 0580                  i2u47_40 07AA                  i2u39_40 09EE  
                i2u63_40 06EA                  i2u47_41 07A6                  i2u39_41 09EA  
                i2u63_41 06E6                  i2u48_40 07F2                  i2u48_41 07EE  
                i2u58_40 03B8                  i2u58_41 03B4                  i2u59_40 03D6  
                i2u59_41 03D2       __end_of_IRQ_Timer0 070C             ?i2_scheduler 000B  
                __Hparam 0000                  __Lparam 0000     __size_of_task_create 006A  
              ?_os_start 0001          __size_of___wmul 0028                  ___lwmod 0942  
                _f_aptos 0200                  __pcinit 0ACC    __size_of_config_tasks 000A  
                __ramtop 0600          __size_of_task_1 0034          __size_of_task_2 0036  
        __size_of_task_3 0038                  __ptext0 0A0C                  __ptext1 0C40  
                __ptext2 0B34                  __ptext3 0870                  __ptext4 0B92  
                __ptext5 0C08                  __ptext6 0C36                  __ptext7 0B66  
                __ptext8 0B00                  __ptext9 0012                _T0CONbits 000FD5  
                _quantum 001C        __end_of_scheduler 0C28           __pintcode_body 0396  
   end_of_initialization 0AF6        __end_of_os_config 0B66        __end_of_task_idle 0B92  
                int_func 0396      i2___wmul@multiplier 0001               _task_delay 0012  
  __end_of_setup_timer_0 0C1A             _config_tasks 0C36               ??_os_start 0168  
                postdec2 000FDD            ?_rr_scheduler 015C                  postinc0 000FEE  
                postinc2 000FDE    i1___wmul@multiplicand 0158       controle_delay@flag 000B  
              _PORTDbits 000F83                _TRISDbits 000F95                i2___lwmod 09A8  
       ??i2_rr_scheduler 0009           ??_rr_scheduler 015E           __end_of___wmul 0BBA  
          __pidataCOMRAM 0C46           __end_of_task_1 0B34           __end_of_task_2 0ACC  
         __end_of_task_3 0A96         i2___wmul@product 0005      start_initialization 0ACC  
      __size_ofi1___wmul 0028        __size_ofi2___wmul 0026               ?i2___lwmod 0001  
       ??_controle_delay 0009              ?_task_delay 0162     __size_ofi2_scheduler 000E  
               ??___wmul 016C                 ??_task_1 001A                 ??_task_2 001B  
               ??_task_3 0167            __pcstackBANK1 0100            __pcstackBANK3 0300  
      i2___lwmod@divisor 0003          task_create@func 0170        i2___lwmod@counter 0005  
              __pintcode 0008                 ?___lwmod 0156        __size_of_os_start 0006  
    __size_of_task_delay 0384     __end_of_rr_scheduler 0870              ??i2___lwmod 0005  
              _scheduler 0C1A           ___wmul@product 016C            ??_task_create 0172  
              _os_config 0B34                 i1u130_20 0956                 i1u130_21 0952  
               i1u131_20 0974                 i1u131_21 0970                 i1u132_20 098A  
               i1u132_21 0986                 i1u133_20 0866                 i1u133_21 0862  
               i1u134_20 004A                 i1u134_21 0046                 i1u135_20 0178  
               i1u135_21 0174                 i1u136_20 0210                 i1u136_21 020C  
               i1u137_20 0392                 i1u137_21 038E                _task_idle 0B66  
              fp__task_1 0000                fp__task_2 0000                fp__task_3 0000  
      ___wmul@multiplier 0168                 i1___wmul 0BBA                 i2___wmul 0BE2  
             ?_scheduler 0160               ?_os_config 0001                 __Hrparam 0000  
             ?_task_idle 0001                 __Lrparam 0000      __end_of_task_create 08DA  
  i2___wmul@multiplicand 0003         __size_of___lwmod 0066    rr_scheduler@next_task 015E  
           task_delay@ms 0162   __size_of_setup_timer_0 0012                 __ptext10 0C1A  
               __ptext11 07FC                 __ptext20 070C                 __ptext12 0BBA  
               __ptext21 0BE2                 __ptext13 0942                 __ptext22 0000  
               __ptext14 0A96                 __ptext15 0A5E                 __ptext17 0C28  
               __ptext18 08DA                 __ptext19 09A8            __size_of_main 0052  
           ??_task_delay 0164                 _os_start 0C40                 int$flags 001E  
  __size_of_rr_scheduler 0074               _INTCONbits 000FF2       __end_of_task_delay 0396  
               intlevel1 0000                 intlevel2 0000            ??i2_scheduler 000D  
       ___lwmod@dividend 0156              ??_scheduler 0162              _task_create 0870  
            ??_os_config 0172              ??_task_idle 0019            _setup_timer_0 0C08  
        controle_delay@i 000D             _rr_scheduler 07FC               _IRQ_Timer0 0008  
__size_ofi2_rr_scheduler 0068          ___lwmod@divisor 0158          ___lwmod@counter 015A  
         ?_setup_timer_0 0001            ?_config_tasks 0001  
