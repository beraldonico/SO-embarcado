

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Dec 14 20:21:17 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4520 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataCOMRAM
    90  001658                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _quantum
    94  001658  0005               	dw	5
    95  0000                     _TOS	set	4093
    96  0000                     _PORTBbits	set	3969
    97  0000                     _PORTDbits	set	3971
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TRISDbits	set	3989
   100  0000                     _T0CONbits	set	4053
   101  0000                     _TMR0L	set	4054
   102  0000                     _STKPTR	set	4092
   103  0000                     _TOSH	set	4094
   104  0000                     _TOSL	set	4093
   105  0000                     _TOSU	set	4095
   106  0000                     _STATUS	set	4056
   107  0000                     _BSR	set	4064
   108  0000                     _WREG	set	4072
   109  0000                     _INTCONbits	set	4082
   110                           
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  00141A                     __pcinit:
   115                           	callstack 0
   116  00141A                     start_initialization:
   117                           	callstack 0
   118  00141A                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (2 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  00141A  0E58               	movlw	low __pidataCOMRAM
   124  00141C  6EF6               	movwf	tblptrl,c
   125  00141E  0E16               	movlw	high __pidataCOMRAM
   126  001420  6EF7               	movwf	tblptrh,c
   127  001422  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  001424  6EF8               	movwf	tblptru,c
   129  001426  0009               	tblrd		*+	;fetch initializer
   130  001428  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   131  00142C  0009               	tblrd		*+	;fetch initializer
   132  00142E  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   133                           
   134                           ; Clear objects allocated to BIGRAM (1034 bytes)
   135  001432  EE01  F079         	lfsr	0,__pbssBIGRAM
   136  001436  EE14 F00A          	lfsr	1,1034
   137  00143A                     clear_0:
   138  00143A  6AEE               	clrf	postinc0,c
   139  00143C  50E5               	movf	postdec1,w,c
   140  00143E  50E1               	movf	fsr1l,w,c
   141  001440  E1FC               	bnz	clear_0
   142  001442  50E2               	movf	fsr1h,w,c
   143  001444  E1FA               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to BANK0 (24 bytes)
   146  001446  EE00  F09D         	lfsr	0,__pbssBANK0
   147  00144A  0E18               	movlw	24
   148  00144C                     clear_1:
   149  00144C  6AEE               	clrf	postinc0,c
   150  00144E  06E8               	decf	wreg,f,c
   151  001450  E1FD               	bnz	clear_1
   152                           
   153                           ; Clear objects allocated to COMRAM (38 bytes)
   154  001452  EE00  F001         	lfsr	0,__pbssCOMRAM
   155  001456  0E26               	movlw	38
   156  001458                     clear_2:
   157  001458  6AEE               	clrf	postinc0,c
   158  00145A  06E8               	decf	wreg,f,c
   159  00145C  E1FD               	bnz	clear_2
   160  00145E                     end_of_initialization:
   161                           	callstack 0
   162  00145E                     __end_of__initialization:
   163                           	callstack 0
   164  00145E  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   165  001460  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   166  001462  0100               	movlb	0
   167  001464  EF42  F007         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170  000001                     __pbssCOMRAM:
   171                           	callstack 0
   172  000001                     _index:
   173                           	callstack 0
   174  000001                     	ds	2
   175  000003                     _sem_motor:
   176                           	callstack 0
   177  000003                     	ds	18
   178  000015                     _sem_igni:
   179                           	callstack 0
   180  000015                     	ds	18
   181                           
   182                           	psect	dataCOMRAM
   183  00004A                     __pdataCOMRAM:
   184                           	callstack 0
   185  00004A                     _quantum:
   186                           	callstack 0
   187  00004A                     	ds	2
   188                           
   189                           	psect	bssBANK0
   190  00009D                     __pbssBANK0:
   191                           	callstack 0
   192  00009D                     _pipe_motor_error:
   193                           	callstack 0
   194  00009D                     	ds	8
   195  0000A5                     _pipe_error:
   196                           	callstack 0
   197  0000A5                     	ds	8
   198  0000AD                     _pipe_igni:
   199                           	callstack 0
   200  0000AD                     	ds	8
   201                           
   202                           	psect	bssBIGRAM
   203  000179                     __pbssBIGRAM:
   204                           	callstack 0
   205  000179                     _f_aptos:
   206                           	callstack 0
   207  000179                     	ds	522
   208  000383                     __uDynamicHeap:
   209                           	callstack 0
   210  000383                     	ds	512
   211                           
   212                           	psect	cstackBANK1
   213  000100                     __pcstackBANK1:
   214                           	callstack 0
   215  000100                     	ds	28
   216  00011C                     sem_post@sem:
   217                           	callstack 0
   218  00011C                     pipe_write@p:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x1C
   222  00011C                     	ds	2
   223  00011E                     ??_sem_post:
   224  00011E                     pipe_write@data:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x1E
   228  00011E                     	ds	1
   229  00011F                     ??_pipe_write:
   230                           
   231                           ; 1 bytes @ 0x1F
   232  00011F                     	ds	4
   233  000123                     ?___wmul:
   234                           	callstack 0
   235  000123                     SRAMInitHeap@pHeap:
   236                           	callstack 0
   237  000123                     __SRAMmerge@pSegA:
   238                           	callstack 0
   239  000123                     sem_init@sem:
   240                           	callstack 0
   241  000123                     ___wmul@multiplier:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x23
   245  000123                     	ds	2
   246  000125                     ??__SRAMmerge:
   247  000125                     SRAMInitHeap@count:
   248                           	callstack 0
   249  000125                     sem_init@valor:
   250                           	callstack 0
   251  000125                     ___wmul@multiplicand:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x25
   255  000125                     	ds	1
   256  000126                     __SRAMmerge@uSum:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x26
   260  000126                     	ds	1
   261  000127                     __SRAMmerge@pSegB:
   262                           	callstack 0
   263  000127                     ___wmul@product:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x27
   267  000127                     	ds	2
   268  000129                     __SRAMmerge@uSegA:
   269                           	callstack 0
   270  000129                     task_create@prior:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x29
   274  000129                     	ds	1
   275  00012A                     __SRAMmerge@uSegB:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x2A
   279  00012A                     	ds	1
   280  00012B                     ?_SRAMalloc:
   281                           	callstack 0
   282  00012B                     task_create@func:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x2B
   286  00012B                     	ds	2
   287  00012D                     ??_SRAMalloc:
   288  00012D                     ??_task_create:
   289                           
   290                           ; 1 bytes @ 0x2D
   291  00012D                     	ds	2
   292  00012F                     SRAMalloc@temp:
   293                           	callstack 0
   294  00012F                     task_create@new_task:
   295                           	callstack 0
   296                           
   297                           ; 74 bytes @ 0x2F
   298  00012F                     	ds	2
   299  000131                     SRAMalloc@segLen:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x31
   303  000131                     	ds	1
   304  000132                     SRAMalloc@segHeader:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x32
   308  000132                     	ds	1
   309  000133                     SRAMalloc@nBytes:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x33
   313  000133                     	ds	1
   314  000134                     SRAMalloc@pHeap:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x34
   318  000134                     	ds	2
   319  000136                     pipe_create@p:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x36
   323  000136                     	ds	2
   324  000138                     pipe_create@size:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x38
   328  000138                     	ds	2
   329  00013A                     
   330                           ; 1 bytes @ 0x3A
   331  00013A                     	ds	63
   332  000179                     
   333                           ; 1 bytes @ 0x79
   334                           
   335                           	psect	cstackBANK0
   336  000080                     __pcstackBANK0:
   337                           	callstack 0
   338  000080                     	ds	23
   339  000097                     ?___lwmod:
   340                           	callstack 0
   341  000097                     ?i1___wmul:
   342                           	callstack 0
   343  000097                     ___lwmod@dividend:
   344                           	callstack 0
   345  000097                     i1___wmul@multiplier:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x17
   349  000097                     	ds	2
   350  000099                     ___lwmod@divisor:
   351                           	callstack 0
   352  000099                     i1___wmul@multiplicand:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x19
   356  000099                     	ds	2
   357  00009B                     ___lwmod@counter:
   358                           	callstack 0
   359  00009B                     i1___wmul@product:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x1B
   363  00009B                     	ds	2
   364  00009D                     
   365                           ; 1 bytes @ 0x1D
   366                           
   367                           	psect	cstackCOMRAM
   368  000027                     __pcstackCOMRAM:
   369                           	callstack 0
   370  000027                     ?i2___wmul:
   371                           	callstack 0
   372  000027                     i2___wmul@multiplier:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x0
   376  000027                     	ds	2
   377  000029                     i2___wmul@multiplicand:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x2
   381  000029                     	ds	2
   382  00002B                     i2___wmul@product:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x4
   386  00002B                     	ds	2
   387  00002D                     ?i2_rr_scheduler:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x6
   391  00002D                     	ds	2
   392  00002F                     controle_delay@i:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x8
   396  00002F                     	ds	2
   397  000031                     i2rr_scheduler@next_task:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0xA
   401  000031                     	ds	2
   402  000033                     ?i2_scheduler:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xC
   406  000033                     	ds	2
   407  000035                     ??_IRQ_Timer0:
   408  000035                     
   409                           ; 1 bytes @ 0xE
   410  000035                     	ds	7
   411  00003C                     ?_rr_scheduler:
   412                           	callstack 0
   413  00003C                     pipe_read@p:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x15
   417  00003C                     	ds	2
   418  00003E                     ??_pipe_read:
   419                           
   420                           ; 1 bytes @ 0x17
   421  00003E                     	ds	2
   422  000040                     rr_scheduler@next_task:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x19
   426  000040                     	ds	2
   427  000042                     ?_scheduler:
   428                           	callstack 0
   429  000042                     pipe_read@data:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1B
   433  000042                     	ds	2
   434  000044                     sem_wait@sem:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x1D
   438  000044                     	ds	2
   439  000046                     ??_sem_wait:
   440                           
   441                           ; 1 bytes @ 0x1F
   442  000046                     	ds	4
   443  00004A                     
   444                           ; 1 bytes @ 0x23
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 12 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   464 ;;      Params:         0       0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels required when called:   14
   470 ;; This function calls:
   471 ;;		_SRAMInitHeap
   472 ;;		_os_config
   473 ;;		_os_start
   474 ;;		_task_create
   475 ;;		_task_idle
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text0
   482  000E84                     __ptext0:
   483                           	callstack 0
   484  000E84                     _main:
   485                           	callstack 17
   486  000E84                     
   487                           ;main.c: 14:  SRAMInitHeap();
   488  000E84  EC50  F009         	call	_SRAMInitHeap	;wreg free
   489  000E88                     
   490                           ;main.c: 16:  os_config();
   491  000E88  EC7A  F00A         	call	_os_config	;wreg free
   492  000E8C                     
   493                           ;main.c: 19:  task_create(2, &task_1);
   494  000E8C  0E00               	movlw	0
   495  000E8E  0101               	movlb	1	; () banked
   496  000E90  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   497  000E92  0E02               	movlw	2
   498  000E94  6F29               	movwf	task_create@prior& (0+255),b
   499  000E96  0E68               	movlw	low _task_1
   500  000E98  6F2B               	movwf	task_create@func& (0+255),b
   501  000E9A  0E15               	movlw	high _task_1
   502  000E9C  6F2C               	movwf	(task_create@func+1)& (0+255),b
   503  000E9E  ECA9  F008         	call	_task_create	;wreg free
   504  000EA2                     
   505                           ;main.c: 20:  task_create(2, &task_2);
   506  000EA2  0E00               	movlw	0
   507  000EA4  0101               	movlb	1	; () banked
   508  000EA6  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   509  000EA8  0E02               	movlw	2
   510  000EAA  6F29               	movwf	task_create@prior& (0+255),b
   511  000EAC  0E2E               	movlw	low _task_2
   512  000EAE  6F2B               	movwf	task_create@func& (0+255),b
   513  000EB0  0E15               	movlw	high _task_2
   514  000EB2  6F2C               	movwf	(task_create@func+1)& (0+255),b
   515  000EB4  ECA9  F008         	call	_task_create	;wreg free
   516  000EB8                     
   517                           ;main.c: 21:  task_create(3, &task_3);
   518  000EB8  0E00               	movlw	0
   519  000EBA  0101               	movlb	1	; () banked
   520  000EBC  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   521  000EBE  0E03               	movlw	3
   522  000EC0  6F29               	movwf	task_create@prior& (0+255),b
   523  000EC2  0EBA               	movlw	low _task_3
   524  000EC4  6F2B               	movwf	task_create@func& (0+255),b
   525  000EC6  0E0D               	movlw	high _task_3
   526  000EC8  6F2C               	movwf	(task_create@func+1)& (0+255),b
   527  000ECA  ECA9  F008         	call	_task_create	;wreg free
   528  000ECE                     
   529                           ;main.c: 22:  task_create(3, &task_4);
   530  000ECE  0E00               	movlw	0
   531  000ED0  0101               	movlb	1	; () banked
   532  000ED2  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   533  000ED4  0E03               	movlw	3
   534  000ED6  6F29               	movwf	task_create@prior& (0+255),b
   535  000ED8  0E68               	movlw	low _task_4
   536  000EDA  6F2B               	movwf	task_create@func& (0+255),b
   537  000EDC  0E14               	movlw	high _task_4
   538  000EDE  6F2C               	movwf	(task_create@func+1)& (0+255),b
   539  000EE0  ECA9  F008         	call	_task_create	;wreg free
   540  000EE4                     
   541                           ;main.c: 23:  task_create(3, &task_5);
   542  000EE4  0E00               	movlw	0
   543  000EE6  0101               	movlb	1	; () banked
   544  000EE8  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   545  000EEA  0E03               	movlw	3
   546  000EEC  6F29               	movwf	task_create@prior& (0+255),b
   547  000EEE  0EB0               	movlw	low _task_5
   548  000EF0  6F2B               	movwf	task_create@func& (0+255),b
   549  000EF2  0E0F               	movlw	high _task_5
   550  000EF4  6F2C               	movwf	(task_create@func+1)& (0+255),b
   551  000EF6  ECA9  F008         	call	_task_create	;wreg free
   552  000EFA                     
   553                           ;main.c: 24:  task_create(3, &task_6);
   554  000EFA  0E00               	movlw	0
   555  000EFC  0101               	movlb	1	; () banked
   556  000EFE  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   557  000F00  0E03               	movlw	3
   558  000F02  6F29               	movwf	task_create@prior& (0+255),b
   559  000F04  0EAE               	movlw	low _task_6
   560  000F06  6F2B               	movwf	task_create@func& (0+255),b
   561  000F08  0E14               	movlw	high _task_6
   562  000F0A  6F2C               	movwf	(task_create@func+1)& (0+255),b
   563  000F0C  ECA9  F008         	call	_task_create	;wreg free
   564  000F10                     
   565                           ;main.c: 27:  os_start();
   566  000F10  EC22  F00B         	call	_os_start	;wreg free
   567  000F14                     
   568                           ;main.c: 31:  task_idle();
   569  000F14  EC28  F00B         	call	_task_idle	;wreg free
   570  000F18  EF07  F000         	goto	start
   571  000F1C                     __end_of_main:
   572                           	callstack 0
   573                           
   574 ;; *************** function _os_start *****************
   575 ;; Defined at:
   576 ;;		line 37 in file "kernel.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   590 ;;      Params:         0       0       0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    9
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text1
   605  001644                     __ptext1:
   606                           	callstack 0
   607  001644                     _os_start:
   608                           	callstack 21
   609  001644                     
   610                           ;kernel.c: 38:  INTCONbits.GIE = 1;
   611  001644  8EF2               	bsf	242,7,c	;volatile
   612  001646                     
   613                           ;kernel.c: 39:  TMR0L = 6;
   614  001646  0E06               	movlw	6
   615  001648  6ED6               	movwf	214,c	;volatile
   616  00164A                     
   617                           ;kernel.c: 40:  INTCONbits.TMR0IF = 0;
   618  00164A  94F2               	bcf	242,2,c	;volatile
   619  00164C                     
   620                           ;kernel.c: 41:  T0CONbits.TMR0ON = 1;
   621  00164C  8ED5               	bsf	213,7,c	;volatile
   622  00164E  0012               	return		;funcret
   623  001650                     __end_of_os_start:
   624                           	callstack 0
   625                           
   626 ;; *************** function _os_config *****************
   627 ;; Defined at:
   628 ;;		line 45 in file "kernel.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   642 ;;      Params:         0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:   13
   649 ;; This function calls:
   650 ;;		_config_tasks
   651 ;;		_setup_timer_0
   652 ;;		_task_create
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text2
   659  0014F4                     __ptext2:
   660                           	callstack 0
   661  0014F4                     _os_config:
   662                           	callstack 17
   663  0014F4                     
   664                           ;kernel.c: 49:  T0CONbits.TMR0ON = 0;
   665  0014F4  9ED5               	bcf	213,7,c	;volatile
   666                           
   667                           ;kernel.c: 50:  f_aptos.task_running = 0;
   668  0014F6  0E00               	movlw	0
   669  0014F8  CFE8 F381          	movff	wreg,_f_aptos+520
   670  0014FC  0E00               	movlw	0
   671  0014FE  CFE8 F382          	movff	wreg,_f_aptos+521
   672                           
   673                           ;kernel.c: 51:  f_aptos.ready_queue_size = 0;
   674  001502  0E00               	movlw	0
   675  001504  CFE8 F37F          	movff	wreg,_f_aptos+518
   676  001508  0E00               	movlw	0
   677  00150A  CFE8 F380          	movff	wreg,_f_aptos+519
   678  00150E                     
   679                           ;kernel.c: 52:  setup_timer_0();
   680  00150E  EC09  F00B         	call	_setup_timer_0	;wreg free
   681  001512                     
   682                           ;kernel.c: 53:  task_create(0, &task_idle);
   683  001512  0E00               	movlw	0
   684  001514  0101               	movlb	1	; () banked
   685  001516  6F2A               	movwf	(task_create@prior+1)& (0+255),b
   686  001518  0E00               	movlw	0
   687  00151A  6F29               	movwf	task_create@prior& (0+255),b
   688  00151C  0E50               	movlw	low _task_idle
   689  00151E  6F2B               	movwf	task_create@func& (0+255),b
   690  001520  0E16               	movlw	high _task_idle
   691  001522  6F2C               	movwf	(task_create@func+1)& (0+255),b
   692  001524  ECA9  F008         	call	_task_create	;wreg free
   693  001528                     
   694                           ;kernel.c: 54:  config_tasks();
   695  001528  EC66  F008         	call	_config_tasks	;wreg free
   696  00152C  0012               	return		;funcret
   697  00152E                     __end_of_os_config:
   698                           	callstack 0
   699                           
   700 ;; *************** function _task_create *****************
   701 ;; Defined at:
   702 ;;		line 23 in file "kernel.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  prior           2   41[BANK1 ] unsigned int 
   705 ;;  func            2   43[BANK1 ] PTR FTN()void 
   706 ;;		 -> task_6(1), task_5(1), task_4(1), task_3(1), 
   707 ;;		 -> task_2(1), task_1(1), task_idle(1), 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  new_task       74   47[BANK1 ] struct tcb
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   719 ;;      Params:         0       0       4       0       0       0       0
   720 ;;      Locals:         0       0      74       0       0       0       0
   721 ;;      Temps:          0       0       2       0       0       0       0
   722 ;;      Totals:         0       0      80       0       0       0       0
   723 ;;Total ram usage:       80 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:   10
   726 ;; This function calls:
   727 ;;		___wmul
   728 ;; This function is called by:
   729 ;;		_os_config
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text3
   735  001152                     __ptext3:
   736                           	callstack 0
   737  001152                     _task_create:
   738                           	callstack 20
   739  001152                     
   740                           ;kernel.c: 24:    tcb_t new_task;;kernel.c: 26:    new_task.task_id = f_aptos.ready_queu
      +                          e_size + 1;
   741  001152  EE23  F07F         	lfsr	2,_f_aptos+518
   742  001156  CFDE F12D          	movff	postinc2,??_task_create
   743  00115A  CFDD F12E          	movff	postdec2,??_task_create+1
   744  00115E  0E01               	movlw	1
   745  001160  0101               	movlb	1	; () banked
   746  001162  252D               	addwf	??_task_create& (0+255),w,b
   747  001164  6F2F               	movwf	task_create@new_task& (0+255),b
   748  001166  0E00               	movlw	0
   749  001168  212E               	addwfc	(??_task_create+1)& (0+255),w,b
   750  00116A  6F30               	movwf	(task_create@new_task+1)& (0+255),b
   751  00116C                     
   752                           ; BSR set to: 1
   753                           ;kernel.c: 27:    new_task.task_prior = prior;
   754  00116C  C129  F132         	movff	task_create@prior,task_create@new_task+3
   755  001170  C12A  F133         	movff	task_create@prior+1,task_create@new_task+4
   756  001174                     
   757                           ; BSR set to: 1
   758                           ;kernel.c: 28:    new_task.task_state = READY;
   759  001174  0E00               	movlw	0
   760  001176  6F31               	movwf	(task_create@new_task+2)& (0+255),b
   761  001178                     
   762                           ; BSR set to: 1
   763                           ;kernel.c: 29:    new_task.task_func = func;
   764  001178  C12B  F134         	movff	task_create@func,task_create@new_task+5
   765  00117C  C12C  F135         	movff	task_create@func+1,task_create@new_task+6
   766  001180                     
   767                           ; BSR set to: 1
   768                           ;kernel.c: 30:    new_task.task_stack.size = 0;
   769  001180  0E00               	movlw	0
   770  001182  6F73               	movwf	(task_create@new_task+68)& (0+255),b
   771  001184  0E00               	movlw	0
   772  001186  6F72               	movwf	(task_create@new_task+67)& (0+255),b
   773  001188                     
   774                           ; BSR set to: 1
   775                           ;kernel.c: 32:    f_aptos.ready_queue[f_aptos.ready_queue_size] = new_task;
   776  001188  EE21  F02F         	lfsr	2,task_create@new_task
   777  00118C  C37F  F123         	movff	_f_aptos+518,___wmul@multiplier
   778  001190  C380  F124         	movff	_f_aptos+519,___wmul@multiplier+1
   779  001194  0E00               	movlw	0
   780  001196  6F26               	movwf	(___wmul@multiplicand+1)& (0+255),b
   781  001198  0E4A               	movlw	74
   782  00119A  6F25               	movwf	___wmul@multiplicand& (0+255),b
   783  00119C  ECCE  F00A         	call	___wmul	;wreg free
   784  0011A0  0E79               	movlw	low _f_aptos
   785  0011A2  0101               	movlb	1	; () banked
   786  0011A4  2523               	addwf	?___wmul& (0+255),w,b
   787  0011A6  6EE1               	movwf	fsr1l,c
   788  0011A8  0E01               	movlw	high _f_aptos
   789  0011AA  2124               	addwfc	(?___wmul+1)& (0+255),w,b
   790  0011AC  6EE2               	movwf	fsr1h,c
   791  0011AE  0E49               	movlw	73
   792  0011B0                     u2761:
   793  0011B0  CFDB FFE3          	movff	plusw2,plusw1
   794  0011B4  06E8               	decf	wreg,f,c
   795  0011B6  E2FC               	bc	u2761
   796  0011B8                     
   797                           ; BSR set to: 1
   798                           ;kernel.c: 33:    f_aptos.ready_queue_size++;
   799  0011B8  EE23  F07F         	lfsr	2,_f_aptos+518
   800  0011BC  2ADE               	incf	postinc2,f,c
   801  0011BE  0E00               	movlw	0
   802  0011C0  22DD               	addwfc	postdec2,f,c
   803  0011C2                     
   804                           ; BSR set to: 1
   805  0011C2  0012               	return		;funcret
   806  0011C4                     __end_of_task_create:
   807                           	callstack 0
   808                           
   809 ;; *************** function ___wmul *****************
   810 ;; Defined at:
   811 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  multiplier      2   35[BANK1 ] unsigned int 
   814 ;;  multiplicand    2   37[BANK1 ] unsigned int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  product         2   39[BANK1 ] unsigned int 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  2   35[BANK1 ] unsigned int 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, prodl, prodh
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   826 ;;      Params:         0       0       4       0       0       0       0
   827 ;;      Locals:         0       0       2       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0
   829 ;;      Totals:         0       0       6       0       0       0       0
   830 ;;Total ram usage:        6 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    9
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_task_create
   837 ;;		_task_delay
   838 ;;		_task_yield
   839 ;;		_prior_scheduler
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text4
   844  00159C                     __ptext4:
   845                           	callstack 0
   846  00159C                     ___wmul:
   847                           	callstack 20
   848  00159C  0101               	movlb	1	; () banked
   849  00159E  5123               	movf	___wmul@multiplier& (0+255),w,b
   850  0015A0  0325               	mulwf	___wmul@multiplicand& (0+255),b
   851  0015A2  CFF3 F127          	movff	prodl,___wmul@product
   852  0015A6  CFF4 F128          	movff	prodh,___wmul@product+1
   853  0015AA  5123               	movf	___wmul@multiplier& (0+255),w,b
   854  0015AC  0326               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   855  0015AE  50F3               	movf	243,w,c
   856  0015B0  2728               	addwf	(___wmul@product+1)& (0+255),f,b
   857  0015B2  5124               	movf	(___wmul@multiplier+1)& (0+255),w,b
   858  0015B4  0325               	mulwf	___wmul@multiplicand& (0+255),b
   859  0015B6  50F3               	movf	243,w,c
   860  0015B8  2728               	addwf	(___wmul@product+1)& (0+255),f,b
   861  0015BA                     
   862                           ; BSR set to: 1
   863  0015BA  C127  F123         	movff	___wmul@product,?___wmul
   864  0015BE  C128  F124         	movff	___wmul@product+1,?___wmul+1
   865  0015C2                     
   866                           ; BSR set to: 1
   867  0015C2  0012               	return		;funcret
   868  0015C4                     __end_of___wmul:
   869                           	callstack 0
   870                           
   871 ;; *************** function _setup_timer_0 *****************
   872 ;; Defined at:
   873 ;;		line 9 in file "timer.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   887 ;;      Params:         0       0       0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    9
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_os_config
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text5
   902  001612                     __ptext5:
   903                           	callstack 0
   904  001612                     _setup_timer_0:
   905                           	callstack 20
   906  001612                     
   907                           ;timer.c: 10:  INTCONbits.TMR0IE = 1;
   908  001612  8AF2               	bsf	242,5,c	;volatile
   909                           
   910                           ;timer.c: 11:  INTCONbits.PEIE = 1;
   911  001614  8CF2               	bsf	242,6,c	;volatile
   912                           
   913                           ;timer.c: 12:  T0CONbits.T0CS = 0;
   914  001616  9AD5               	bcf	213,5,c	;volatile
   915                           
   916                           ;timer.c: 13:  T0CONbits.PSA = 0;
   917  001618  96D5               	bcf	213,3,c	;volatile
   918  00161A                     
   919                           ;timer.c: 14:  T0CONbits.T0PS = 0b001;
   920  00161A  50D5               	movf	213,w,c	;volatile
   921  00161C  0BF8               	andlw	-8
   922  00161E  0901               	iorlw	1
   923  001620  6ED5               	movwf	213,c	;volatile
   924                           
   925                           ;timer.c: 15:  TMR0L = 6;
   926  001622  0E06               	movlw	6
   927  001624  6ED6               	movwf	214,c	;volatile
   928  001626  0012               	return		;funcret
   929  001628                     __end_of_setup_timer_0:
   930                           	callstack 0
   931                           
   932 ;; *************** function _config_tasks *****************
   933 ;; Defined at:
   934 ;;		line 25 in file "tasks.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   948 ;;      Params:         0       0       0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:   12
   955 ;; This function calls:
   956 ;;		_pipe_create
   957 ;;		_sem_init
   958 ;; This function is called by:
   959 ;;		_os_config
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text6
   964  0010CC                     __ptext6:
   965                           	callstack 0
   966  0010CC                     _config_tasks:
   967                           	callstack 17
   968  0010CC                     
   969                           ;tasks.c: 26:     TRISDbits.RD1 = 1;
   970  0010CC  8295               	bsf	149,1,c	;volatile
   971                           
   972                           ;tasks.c: 27:     TRISDbits.RD2 = 1;
   973  0010CE  8495               	bsf	149,2,c	;volatile
   974                           
   975                           ;tasks.c: 28:     TRISDbits.RD3 = 1;
   976  0010D0  8695               	bsf	149,3,c	;volatile
   977                           
   978                           ;tasks.c: 29:     TRISDbits.RD4 = 0;
   979  0010D2  9895               	bcf	149,4,c	;volatile
   980                           
   981                           ;tasks.c: 30:     TRISDbits.RD5 = 0;
   982  0010D4  9A95               	bcf	149,5,c	;volatile
   983                           
   984                           ;tasks.c: 31:     TRISDbits.RD6 = 0;
   985  0010D6  9C95               	bcf	149,6,c	;volatile
   986                           
   987                           ;tasks.c: 32:     TRISDbits.RD7 = 0;
   988  0010D8  9E95               	bcf	149,7,c	;volatile
   989                           
   990                           ;tasks.c: 33:     TRISBbits.RB4 = 0;
   991  0010DA  9893               	bcf	147,4,c	;volatile
   992                           
   993                           ;tasks.c: 34:     TRISBbits.RB5 = 0;
   994  0010DC  9A93               	bcf	147,5,c	;volatile
   995                           
   996                           ;tasks.c: 35:     TRISBbits.RB6 = 1;
   997  0010DE  8C93               	bsf	147,6,c	;volatile
   998                           
   999                           ;tasks.c: 36:     TRISBbits.RB7 = 1;
  1000  0010E0  8E93               	bsf	147,7,c	;volatile
  1001  0010E2                     
  1002                           ;tasks.c: 37:     sem_init(&sem_igni, 0);
  1003  0010E2  0E15               	movlw	low _sem_igni
  1004  0010E4  0101               	movlb	1	; () banked
  1005  0010E6  6F23               	movwf	sem_init@sem& (0+255),b
  1006  0010E8  0E00               	movlw	high _sem_igni
  1007  0010EA  6F24               	movwf	(sem_init@sem+1)& (0+255),b
  1008  0010EC  0E00               	movlw	0
  1009  0010EE  6F26               	movwf	(sem_init@valor+1)& (0+255),b
  1010  0010F0  0E00               	movlw	0
  1011  0010F2  6F25               	movwf	sem_init@valor& (0+255),b
  1012  0010F4  ECE3  F009         	call	_sem_init	;wreg free
  1013                           
  1014                           ;tasks.c: 38:     sem_init(&sem_motor, 0);
  1015  0010F8  0E03               	movlw	low _sem_motor
  1016  0010FA  0101               	movlb	1	; () banked
  1017  0010FC  6F23               	movwf	sem_init@sem& (0+255),b
  1018  0010FE  0E00               	movlw	high _sem_motor
  1019  001100  6F24               	movwf	(sem_init@sem+1)& (0+255),b
  1020  001102  0E00               	movlw	0
  1021  001104  6F26               	movwf	(sem_init@valor+1)& (0+255),b
  1022  001106  0E00               	movlw	0
  1023  001108  6F25               	movwf	sem_init@valor& (0+255),b
  1024  00110A  ECE3  F009         	call	_sem_init	;wreg free
  1025  00110E                     
  1026                           ;tasks.c: 39:  pipe_create(&pipe_igni, 1);
  1027  00110E  0EAD               	movlw	low _pipe_igni
  1028  001110  0101               	movlb	1	; () banked
  1029  001112  6F36               	movwf	pipe_create@p& (0+255),b
  1030  001114  0E00               	movlw	high _pipe_igni
  1031  001116  6F37               	movwf	(pipe_create@p+1)& (0+255),b
  1032  001118  0E00               	movlw	0
  1033  00111A  6F39               	movwf	(pipe_create@size+1)& (0+255),b
  1034  00111C  0E01               	movlw	1
  1035  00111E  6F38               	movwf	pipe_create@size& (0+255),b
  1036  001120  ECB7  F009         	call	_pipe_create	;wreg free
  1037  001124                     
  1038                           ;tasks.c: 40:  pipe_create(&pipe_error, 1);
  1039  001124  0EA5               	movlw	low _pipe_error
  1040  001126  0101               	movlb	1	; () banked
  1041  001128  6F36               	movwf	pipe_create@p& (0+255),b
  1042  00112A  0E00               	movlw	high _pipe_error
  1043  00112C  6F37               	movwf	(pipe_create@p+1)& (0+255),b
  1044  00112E  0E00               	movlw	0
  1045  001130  6F39               	movwf	(pipe_create@size+1)& (0+255),b
  1046  001132  0E01               	movlw	1
  1047  001134  6F38               	movwf	pipe_create@size& (0+255),b
  1048  001136  ECB7  F009         	call	_pipe_create	;wreg free
  1049  00113A                     
  1050                           ;tasks.c: 41:  pipe_create(&pipe_motor_error, 1);
  1051  00113A  0E9D               	movlw	low _pipe_motor_error
  1052  00113C  0101               	movlb	1	; () banked
  1053  00113E  6F36               	movwf	pipe_create@p& (0+255),b
  1054  001140  0E00               	movlw	high _pipe_motor_error
  1055  001142  6F37               	movwf	(pipe_create@p+1)& (0+255),b
  1056  001144  0E00               	movlw	0
  1057  001146  6F39               	movwf	(pipe_create@size+1)& (0+255),b
  1058  001148  0E01               	movlw	1
  1059  00114A  6F38               	movwf	pipe_create@size& (0+255),b
  1060  00114C  ECB7  F009         	call	_pipe_create	;wreg free
  1061  001150  0012               	return		;funcret
  1062  001152                     __end_of_config_tasks:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _sem_init *****************
  1066 ;; Defined at:
  1067 ;;		line 9 in file "semaforo.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  sem             2   35[BANK1 ] PTR struct semaforo
  1070 ;;		 -> sem_motor(18), sem_igni(18), 
  1071 ;;  valor           2   37[BANK1 ] int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1083 ;;      Params:         0       0       4       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0
  1086 ;;      Totals:         0       0       4       0       0       0       0
  1087 ;;Total ram usage:        4 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    9
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_config_tasks
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text7
  1098  0013C6                     __ptext7:
  1099                           	callstack 0
  1100  0013C6                     _sem_init:
  1101                           	callstack 19
  1102  0013C6                     
  1103                           ;semaforo.c: 10:  INTCONbits.GIE = 0;
  1104  0013C6  9EF2               	bcf	242,7,c	;volatile
  1105  0013C8                     
  1106                           ;semaforo.c: 11:  sem->contadorSem = valor;
  1107  0013C8  C123  FFD9         	movff	sem_init@sem,fsr2l
  1108  0013CC  C124  FFDA         	movff	sem_init@sem+1,fsr2h
  1109  0013D0  C125  FFDE         	movff	sem_init@valor,postinc2
  1110  0013D4  C126  FFDD         	movff	sem_init@valor+1,postdec2
  1111  0013D8                     
  1112                           ;semaforo.c: 12:  sem->total_tasks = valor;
  1113  0013D8  0101               	movlb	1	; () banked
  1114  0013DA  EE20 F002          	lfsr	2,2
  1115  0013DE  5123               	movf	sem_init@sem& (0+255),w,b
  1116  0013E0  26D9               	addwf	fsr2l,f,c
  1117  0013E2  5124               	movf	(sem_init@sem+1)& (0+255),w,b
  1118  0013E4  22DA               	addwfc	fsr2h,f,c
  1119  0013E6  C125  FFDE         	movff	sem_init@valor,postinc2
  1120  0013EA  C126  FFDD         	movff	sem_init@valor+1,postdec2
  1121  0013EE                     
  1122                           ; BSR set to: 1
  1123                           ;semaforo.c: 13:  sem->fila.queue = 0;
  1124  0013EE  EE20 F00E          	lfsr	2,14
  1125  0013F2  5123               	movf	sem_init@sem& (0+255),w,b
  1126  0013F4  26D9               	addwf	fsr2l,f,c
  1127  0013F6  5124               	movf	(sem_init@sem+1)& (0+255),w,b
  1128  0013F8  22DA               	addwfc	fsr2h,f,c
  1129  0013FA  0E00               	movlw	0
  1130  0013FC  6EDE               	movwf	postinc2,c
  1131  0013FE  0E00               	movlw	0
  1132  001400  6EDD               	movwf	postdec2,c
  1133  001402                     
  1134                           ; BSR set to: 1
  1135                           ;semaforo.c: 14:  sem->fila.next_to_free = 0;
  1136  001402  EE20 F010          	lfsr	2,16
  1137  001406  5123               	movf	sem_init@sem& (0+255),w,b
  1138  001408  26D9               	addwf	fsr2l,f,c
  1139  00140A  5124               	movf	(sem_init@sem+1)& (0+255),w,b
  1140  00140C  22DA               	addwfc	fsr2h,f,c
  1141  00140E  0E00               	movlw	0
  1142  001410  6EDE               	movwf	postinc2,c
  1143  001412  0E00               	movlw	0
  1144  001414  6EDD               	movwf	postdec2,c
  1145  001416                     
  1146                           ; BSR set to: 1
  1147                           ;semaforo.c: 15:  INTCONbits.GIE = 1;
  1148  001416  8EF2               	bsf	242,7,c	;volatile
  1149  001418                     
  1150                           ; BSR set to: 1
  1151  001418  0012               	return		;funcret
  1152  00141A                     __end_of_sem_init:
  1153                           	callstack 0
  1154                           
  1155 ;; *************** function _pipe_create *****************
  1156 ;; Defined at:
  1157 ;;		line 5 in file "pipe.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  p               2   54[BANK1 ] PTR struct pipe
  1160 ;;		 -> pipe_motor_error(8), pipe_error(8), pipe_igni(8), 
  1161 ;;  size            2   56[BANK1 ] unsigned int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1173 ;;      Params:         0       0       4       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0
  1176 ;;      Totals:         0       0       4       0       0       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:   11
  1180 ;; This function calls:
  1181 ;;		_SRAMalloc
  1182 ;; This function is called by:
  1183 ;;		_config_tasks
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text8
  1188  00136E                     __ptext8:
  1189                           	callstack 0
  1190  00136E                     _pipe_create:
  1191                           	callstack 17
  1192  00136E                     
  1193                           ;pipe.c: 6:  p->buffer = SRAMalloc(size);
  1194  00136E  0101               	movlb	1	; () banked
  1195  001370  5138               	movf	pipe_create@size& (0+255),w,b
  1196  001372  ECEA  F004         	call	_SRAMalloc
  1197  001376  C136  FFD9         	movff	pipe_create@p,fsr2l
  1198  00137A  C137  FFDA         	movff	pipe_create@p+1,fsr2h
  1199  00137E  0101               	movlb	1	; () banked
  1200  001380  C12B  FFDE         	movff	?_SRAMalloc,postinc2
  1201  001384  C12C  FFDD         	movff	?_SRAMalloc+1,postdec2
  1202  001388                     
  1203                           ; BSR set to: 1
  1204                           ;pipe.c: 7:  p->buffer_size = size;
  1205  001388  EE20 F002          	lfsr	2,2
  1206  00138C  5136               	movf	pipe_create@p& (0+255),w,b
  1207  00138E  26D9               	addwf	fsr2l,f,c
  1208  001390  5137               	movf	(pipe_create@p+1)& (0+255),w,b
  1209  001392  22DA               	addwfc	fsr2h,f,c
  1210  001394  C138  FFDE         	movff	pipe_create@size,postinc2
  1211  001398  C139  FFDD         	movff	pipe_create@size+1,postdec2
  1212  00139C                     
  1213                           ; BSR set to: 1
  1214                           ;pipe.c: 8:  p->pos_read = 0;
  1215  00139C  EE20 F004          	lfsr	2,4
  1216  0013A0  5136               	movf	pipe_create@p& (0+255),w,b
  1217  0013A2  26D9               	addwf	fsr2l,f,c
  1218  0013A4  5137               	movf	(pipe_create@p+1)& (0+255),w,b
  1219  0013A6  22DA               	addwfc	fsr2h,f,c
  1220  0013A8  0E00               	movlw	0
  1221  0013AA  6EDE               	movwf	postinc2,c
  1222  0013AC  0E00               	movlw	0
  1223  0013AE  6EDD               	movwf	postdec2,c
  1224  0013B0                     
  1225                           ; BSR set to: 1
  1226                           ;pipe.c: 9:  p->pos_write = 0;
  1227  0013B0  EE20 F006          	lfsr	2,6
  1228  0013B4  5136               	movf	pipe_create@p& (0+255),w,b
  1229  0013B6  26D9               	addwf	fsr2l,f,c
  1230  0013B8  5137               	movf	(pipe_create@p+1)& (0+255),w,b
  1231  0013BA  22DA               	addwfc	fsr2h,f,c
  1232  0013BC  0E00               	movlw	0
  1233  0013BE  6EDE               	movwf	postinc2,c
  1234  0013C0  0E00               	movlw	0
  1235  0013C2  6EDD               	movwf	postdec2,c
  1236  0013C4                     
  1237                           ; BSR set to: 1
  1238  0013C4  0012               	return		;funcret
  1239  0013C6                     __end_of_pipe_create:
  1240                           	callstack 0
  1241                           
  1242 ;; *************** function _SRAMalloc *****************
  1243 ;; Defined at:
  1244 ;;		line 141 in file "mm.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  nBytes          1    wreg     unsigned char 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  nBytes          1   51[BANK1 ] unsigned char 
  1249 ;;  pHeap           2   52[BANK1 ] PTR struct _SALLOC
  1250 ;;		 -> _uDynamicHeap(512), 
  1251 ;;  temp            2   47[BANK1 ] PTR struct _SALLOC
  1252 ;;		 -> _uDynamicHeap(512), 
  1253 ;;  segHeader       1   50[BANK1 ] struct _SALLOC
  1254 ;;  segLen          1   49[BANK1 ] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2   43[BANK1 ] PTR unsigned char 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1264 ;;      Params:         0       0       2       0       0       0       0
  1265 ;;      Locals:         0       0       7       0       0       0       0
  1266 ;;      Temps:          0       0       2       0       0       0       0
  1267 ;;      Totals:         0       0      11       0       0       0       0
  1268 ;;Total ram usage:       11 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:   10
  1271 ;; This function calls:
  1272 ;;		__SRAMmerge
  1273 ;; This function is called by:
  1274 ;;		_pipe_create
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text9
  1279  0009D4                     __ptext9:
  1280                           	callstack 0
  1281  0009D4                     _SRAMalloc:
  1282                           	callstack 17
  1283                           
  1284                           ; BSR set to: 1
  1285                           ;incstack = 0
  1286                           ;SRAMalloc@nBytes stored from wreg
  1287  0009D4  0101               	movlb	1	; () banked
  1288  0009D6  6F33               	movwf	SRAMalloc@nBytes& (0+255),b
  1289  0009D8                     
  1290                           ;mm.c: 141: u_char* SRAMalloc( u_char nBytes);mm.c: 142: {;mm.c: 143:  SALLOC * pHeap;;m
      +                          m.c: 144:  SALLOC * temp;;mm.c: 145:       SALLOC segHeader;;mm.c: 146:       u_char seg
      +                          Len;;mm.c: 149:  if (nBytes > (0x7F - 1)) return (0);
  1291  0009D8  0E7E               	movlw	126
  1292  0009DA  0101               	movlb	1	; () banked
  1293  0009DC  6533               	cpfsgt	SRAMalloc@nBytes& (0+255),b
  1294  0009DE  EFF3  F004         	goto	u2701
  1295  0009E2  EFF5  F004         	goto	u2700
  1296  0009E6                     u2701:
  1297  0009E6  EFFB  F004         	goto	l3373
  1298  0009EA                     u2700:
  1299  0009EA                     l3369:
  1300                           
  1301                           ; BSR set to: 1
  1302  0009EA  0E00               	movlw	0
  1303  0009EC  6F2B               	movwf	?_SRAMalloc& (0+255),b
  1304  0009EE  0E00               	movlw	0
  1305  0009F0  6F2C               	movwf	(?_SRAMalloc+1)& (0+255),b
  1306  0009F2  EF7C  F005         	goto	l286
  1307  0009F6                     l3373:
  1308                           
  1309                           ; BSR set to: 1
  1310                           ;mm.c: 152:  pHeap = (SALLOC *)_uDynamicHeap;
  1311  0009F6  0E83               	movlw	low __uDynamicHeap
  1312  0009F8  6F34               	movwf	SRAMalloc@pHeap& (0+255),b
  1313  0009FA  0E03               	movlw	high __uDynamicHeap
  1314  0009FC  6F35               	movwf	(SRAMalloc@pHeap+1)& (0+255),b
  1315  0009FE                     l3375:
  1316                           
  1317                           ;mm.c: 155:  {;mm.c: 157:   segHeader = *pHeap;
  1318  0009FE  C134  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1319  000A02  C135  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1320  000A06  50DF               	movf	indf2,w,c
  1321  000A08  0101               	movlb	1	; () banked
  1322  000A0A  6F32               	movwf	SRAMalloc@segHeader& (0+255),b
  1323  000A0C                     
  1324                           ; BSR set to: 1
  1325                           ;mm.c: 160:   segLen = segHeader.bits.count - 1;
  1326  000A0C  5132               	movf	SRAMalloc@segHeader& (0+255),w,b
  1327  000A0E  0B7F               	andlw	127
  1328  000A10  6F2D               	movwf	??_SRAMalloc& (0+255),b
  1329  000A12  052D               	decf	??_SRAMalloc& (0+255),w,b
  1330  000A14  6F31               	movwf	SRAMalloc@segLen& (0+255),b
  1331  000A16                     
  1332                           ; BSR set to: 1
  1333                           ;mm.c: 163:   if (segHeader.byte == 0) return (0);
  1334  000A16  5132               	movf	SRAMalloc@segHeader& (0+255),w,b
  1335  000A18  A4D8               	btfss	status,2,c
  1336  000A1A  EF11  F005         	goto	u2711
  1337  000A1E  EF13  F005         	goto	u2710
  1338  000A22                     u2711:
  1339  000A22  EF15  F005         	goto	l288
  1340  000A26                     u2710:
  1341  000A26  EFF5  F004         	goto	l3369
  1342  000A2A                     l288:
  1343                           
  1344                           ; BSR set to: 1
  1345                           ;mm.c: 166:   if (!(segHeader.bits.alloc))
  1346  000A2A  BF32               	btfsc	SRAMalloc@segHeader& (0+255),7,b
  1347  000A2C  EF1A  F005         	goto	u2721
  1348  000A30  EF1C  F005         	goto	u2720
  1349  000A34                     u2721:
  1350  000A34  EF33  F005         	goto	l3389
  1351  000A38                     u2720:
  1352  000A38                     
  1353                           ; BSR set to: 1
  1354                           ;mm.c: 167:   {;mm.c: 169:    if (nBytes > segLen)
  1355  000A38  5133               	movf	SRAMalloc@nBytes& (0+255),w,b
  1356  000A3A  5D31               	subwf	SRAMalloc@segLen& (0+255),w,b
  1357  000A3C  B0D8               	btfsc	status,0,c
  1358  000A3E  EF23  F005         	goto	u2731
  1359  000A42  EF25  F005         	goto	u2730
  1360  000A46                     u2731:
  1361  000A46  EF3F  F005         	goto	l3391
  1362  000A4A                     u2730:
  1363  000A4A                     
  1364                           ; BSR set to: 1
  1365                           ;mm.c: 170:    {;mm.c: 172:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
  1366  000A4A  C134  F123         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  1367  000A4E  C135  F124         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  1368  000A52  EC03  F006         	call	__SRAMmerge	;wreg free
  1369  000A56  0900               	iorlw	0
  1370  000A58  A4D8               	btfss	status,2,c
  1371  000A5A  EF31  F005         	goto	u2741
  1372  000A5E  EF33  F005         	goto	u2740
  1373  000A62                     u2741:
  1374  000A62  EF7A  F005         	goto	l295
  1375  000A66                     u2740:
  1376  000A66                     l3389:
  1377  000A66  0101               	movlb	1	; () banked
  1378  000A68  5132               	movf	SRAMalloc@segHeader& (0+255),w,b
  1379  000A6A  0B7F               	andlw	127
  1380  000A6C  6F2D               	movwf	??_SRAMalloc& (0+255),b
  1381  000A6E  512D               	movf	??_SRAMalloc& (0+255),w,b
  1382  000A70  0D01               	mullw	1
  1383  000A72  50F3               	movf	243,w,c
  1384  000A74  2734               	addwf	SRAMalloc@pHeap& (0+255),f,b
  1385  000A76  50F4               	movf	244,w,c
  1386  000A78  2335               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  1387  000A7A  EFFF  F004         	goto	l3375
  1388  000A7E                     l3391:
  1389                           
  1390                           ; BSR set to: 1
  1391                           ;mm.c: 178:    if (nBytes == segLen)
  1392  000A7E  5131               	movf	SRAMalloc@segLen& (0+255),w,b
  1393  000A80  1933               	xorwf	SRAMalloc@nBytes& (0+255),w,b
  1394  000A82  A4D8               	btfss	status,2,c
  1395  000A84  EF46  F005         	goto	u2751
  1396  000A88  EF48  F005         	goto	u2750
  1397  000A8C                     u2751:
  1398  000A8C  EF55  F005         	goto	l3401
  1399  000A90                     u2750:
  1400  000A90                     
  1401                           ; BSR set to: 1
  1402                           ;mm.c: 179:    {;mm.c: 181:     (*pHeap).bits.alloc = 1;
  1403  000A90  C134  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1404  000A94  C135  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1405  000A98  8EDF               	bsf	indf2,7,c
  1406  000A9A                     
  1407                           ; BSR set to: 1
  1408                           ;mm.c: 184:     return ((u_char *)(pHeap + 1));
  1409  000A9A  0E01               	movlw	1
  1410  000A9C  2534               	addwf	SRAMalloc@pHeap& (0+255),w,b
  1411  000A9E  6F2B               	movwf	?_SRAMalloc& (0+255),b
  1412  000AA0  0E00               	movlw	0
  1413  000AA2  2135               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  1414  000AA4  6F2C               	movwf	(?_SRAMalloc+1)& (0+255),b
  1415  000AA6  EF7C  F005         	goto	l286
  1416  000AAA                     l3401:
  1417                           
  1418                           ; BSR set to: 1
  1419                           ;mm.c: 189:    {;mm.c: 191:     (*pHeap).byte = nBytes + 0x81;
  1420  000AAA  5133               	movf	SRAMalloc@nBytes& (0+255),w,b
  1421  000AAC  0F81               	addlw	129
  1422  000AAE  C134  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1423  000AB2  C135  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1424  000AB6  6EDF               	movwf	indf2,c
  1425  000AB8                     
  1426                           ; BSR set to: 1
  1427                           ;mm.c: 194:     temp = pHeap + 1;
  1428  000AB8  0E01               	movlw	1
  1429  000ABA  2534               	addwf	SRAMalloc@pHeap& (0+255),w,b
  1430  000ABC  6F2F               	movwf	SRAMalloc@temp& (0+255),b
  1431  000ABE  0E00               	movlw	0
  1432  000AC0  2135               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  1433  000AC2  6F30               	movwf	(SRAMalloc@temp+1)& (0+255),b
  1434  000AC4                     
  1435                           ; BSR set to: 1
  1436                           ;mm.c: 197:     pHeap += (nBytes + 1);
  1437  000AC4  5133               	movf	SRAMalloc@nBytes& (0+255),w,b
  1438  000AC6  6F2D               	movwf	??_SRAMalloc& (0+255),b
  1439  000AC8  6B2E               	clrf	(??_SRAMalloc+1)& (0+255),b
  1440  000ACA  0E01               	movlw	1
  1441  000ACC  272D               	addwf	??_SRAMalloc& (0+255),f,b
  1442  000ACE  0E00               	movlw	0
  1443  000AD0  232E               	addwfc	(??_SRAMalloc+1)& (0+255),f,b
  1444  000AD2  512D               	movf	??_SRAMalloc& (0+255),w,b
  1445  000AD4  2734               	addwf	SRAMalloc@pHeap& (0+255),f,b
  1446  000AD6  512E               	movf	(??_SRAMalloc+1)& (0+255),w,b
  1447  000AD8  2335               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  1448                           
  1449                           ;mm.c: 200:     (*pHeap).byte = segLen - nBytes;
  1450  000ADA  5133               	movf	SRAMalloc@nBytes& (0+255),w,b
  1451  000ADC  5D31               	subwf	SRAMalloc@segLen& (0+255),w,b
  1452  000ADE  C134  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1453  000AE2  C135  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1454  000AE6  6EDF               	movwf	indf2,c
  1455  000AE8                     
  1456                           ; BSR set to: 1
  1457                           ;mm.c: 203:     return ((u_char *) temp);
  1458  000AE8  C12F  F12B         	movff	SRAMalloc@temp,?_SRAMalloc
  1459  000AEC  C130  F12C         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  1460  000AF0  EF7C  F005         	goto	l286
  1461  000AF4                     l295:
  1462  000AF4  EFFF  F004         	goto	l3375
  1463  000AF8                     l286:
  1464                           
  1465                           ; BSR set to: 1
  1466  000AF8  0012               	return		;funcret
  1467  000AFA                     __end_of_SRAMalloc:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function __SRAMmerge *****************
  1471 ;; Defined at:
  1472 ;;		line 309 in file "mm.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  pSegA           2   35[BANK1 ] PTR struct _SALLOC
  1475 ;;		 -> _uDynamicHeap(512), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  pSegB           2   39[BANK1 ] PTR struct _SALLOC
  1478 ;;		 -> _uDynamicHeap(512), 
  1479 ;;  uSegB           1   42[BANK1 ] struct _SALLOC
  1480 ;;  uSegA           1   41[BANK1 ] struct _SALLOC
  1481 ;;  uSum            1   38[BANK1 ] struct _SALLOC
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      unsigned char 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1491 ;;      Params:         0       0       2       0       0       0       0
  1492 ;;      Locals:         0       0       5       0       0       0       0
  1493 ;;      Temps:          0       0       1       0       0       0       0
  1494 ;;      Totals:         0       0       8       0       0       0       0
  1495 ;;Total ram usage:        8 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    9
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_SRAMalloc
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text10
  1506  000C06                     __ptext10:
  1507                           	callstack 0
  1508  000C06                     __SRAMmerge:
  1509                           	callstack 17
  1510  000C06                     
  1511                           ;mm.c: 309:      u_char _SRAMmerge(SALLOC * pSegA);mm.c: 310: {;mm.c: 311:  SALLOC * pSe
      +                          gB;;mm.c: 312:       SALLOC uSegA, uSegB, uSum;;mm.c: 316:  pSegB = pSegA + (*pSegA).byt
      +                          e;
  1512  000C06  C123  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1513  000C0A  C124  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1514  000C0E  50DF               	movf	indf2,w,c
  1515  000C10  0101               	movlb	1	; () banked
  1516  000C12  6F25               	movwf	??__SRAMmerge& (0+255),b
  1517  000C14  5125               	movf	??__SRAMmerge& (0+255),w,b
  1518  000C16  2523               	addwf	__SRAMmerge@pSegA& (0+255),w,b
  1519  000C18  6F27               	movwf	__SRAMmerge@pSegB& (0+255),b
  1520  000C1A  0E00               	movlw	0
  1521  000C1C  2124               	addwfc	(__SRAMmerge@pSegA+1)& (0+255),w,b
  1522  000C1E  6F28               	movwf	(__SRAMmerge@pSegB+1)& (0+255),b
  1523  000C20                     
  1524                           ; BSR set to: 1
  1525                           ;mm.c: 319:  uSegA = *pSegA;
  1526  000C20  C123  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1527  000C24  C124  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1528  000C28  50DF               	movf	indf2,w,c
  1529  000C2A  6F29               	movwf	__SRAMmerge@uSegA& (0+255),b
  1530  000C2C                     
  1531                           ; BSR set to: 1
  1532                           ;mm.c: 320:  uSegB = *pSegB;
  1533  000C2C  C127  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  1534  000C30  C128  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  1535  000C34  50DF               	movf	indf2,w,c
  1536  000C36  6F2A               	movwf	__SRAMmerge@uSegB& (0+255),b
  1537  000C38                     
  1538                           ; BSR set to: 1
  1539                           ;mm.c: 323:  if (uSegB.byte == 0) return (0);
  1540  000C38  512A               	movf	__SRAMmerge@uSegB& (0+255),w,b
  1541  000C3A  A4D8               	btfss	status,2,c
  1542  000C3C  EF22  F006         	goto	u2651
  1543  000C40  EF24  F006         	goto	u2650
  1544  000C44                     u2651:
  1545  000C44  EF27  F006         	goto	l311
  1546  000C48                     u2650:
  1547  000C48                     l3331:
  1548                           
  1549                           ; BSR set to: 1
  1550  000C48  0E00               	movlw	0
  1551  000C4A  EF6F  F006         	goto	l312
  1552  000C4E                     l311:
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;mm.c: 326:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1556  000C4E  BF29               	btfsc	__SRAMmerge@uSegA& (0+255),7,b
  1557  000C50  EF2C  F006         	goto	u2661
  1558  000C54  EF2E  F006         	goto	u2660
  1559  000C58                     u2661:
  1560  000C58  EF24  F006         	goto	l3331
  1561  000C5C                     u2660:
  1562  000C5C                     
  1563                           ; BSR set to: 1
  1564  000C5C  AF2A               	btfss	__SRAMmerge@uSegB& (0+255),7,b
  1565  000C5E  EF33  F006         	goto	u2671
  1566  000C62  EF35  F006         	goto	u2670
  1567  000C66                     u2671:
  1568  000C66  EF37  F006         	goto	l3341
  1569  000C6A                     u2670:
  1570  000C6A  EF24  F006         	goto	l3331
  1571  000C6E                     l3341:
  1572                           
  1573                           ; BSR set to: 1
  1574                           ;mm.c: 329:  if (uSegA.bits.count == 0x7F) return (0);
  1575  000C6E  5129               	movf	__SRAMmerge@uSegA& (0+255),w,b
  1576  000C70  0B7F               	andlw	127
  1577  000C72  0A7F               	xorlw	127
  1578  000C74  A4D8               	btfss	status,2,c
  1579  000C76  EF3F  F006         	goto	u2681
  1580  000C7A  EF41  F006         	goto	u2680
  1581  000C7E                     u2681:
  1582  000C7E  EF43  F006         	goto	l3347
  1583  000C82                     u2680:
  1584  000C82  EF24  F006         	goto	l3331
  1585  000C86                     l3347:
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;mm.c: 332:  uSum.byte = uSegA.byte + uSegB.byte;
  1589  000C86  5129               	movf	__SRAMmerge@uSegA& (0+255),w,b
  1590  000C88  252A               	addwf	__SRAMmerge@uSegB& (0+255),w,b
  1591  000C8A  6F26               	movwf	__SRAMmerge@uSum& (0+255),b
  1592                           
  1593                           ;mm.c: 338:  if ((uSum.byte) > 0x7F)
  1594  000C8C  0E7F               	movlw	127
  1595  000C8E  6526               	cpfsgt	__SRAMmerge@uSum& (0+255),b
  1596  000C90  EF4C  F006         	goto	u2691
  1597  000C94  EF4E  F006         	goto	u2690
  1598  000C98                     u2691:
  1599  000C98  EF68  F006         	goto	l3363
  1600  000C9C                     u2690:
  1601  000C9C                     
  1602                           ; BSR set to: 1
  1603                           ;mm.c: 339:  {;mm.c: 340:   (*pSegA).byte = 0x7F;
  1604  000C9C  C123  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1605  000CA0  C124  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1606  000CA4  0E7F               	movlw	127
  1607  000CA6  6EDF               	movwf	indf2,c
  1608  000CA8                     
  1609                           ; BSR set to: 1
  1610                           ;mm.c: 341:   pSegA += 0x7F;
  1611  000CA8  0E7F               	movlw	127
  1612  000CAA  2723               	addwf	__SRAMmerge@pSegA& (0+255),f,b
  1613  000CAC  0E00               	movlw	0
  1614  000CAE  2324               	addwfc	(__SRAMmerge@pSegA+1)& (0+255),f,b
  1615  000CB0                     
  1616                           ; BSR set to: 1
  1617                           ;mm.c: 342:   pSegB += uSegB.byte;
  1618  000CB0  512A               	movf	__SRAMmerge@uSegB& (0+255),w,b
  1619  000CB2  0D01               	mullw	1
  1620  000CB4  50F3               	movf	243,w,c
  1621  000CB6  2727               	addwf	__SRAMmerge@pSegB& (0+255),f,b
  1622  000CB8  50F4               	movf	244,w,c
  1623  000CBA  2328               	addwfc	(__SRAMmerge@pSegB+1)& (0+255),f,b
  1624  000CBC                     
  1625                           ; BSR set to: 1
  1626                           ;mm.c: 343:   (*pSegA).byte = pSegB - pSegA;
  1627  000CBC  5123               	movf	__SRAMmerge@pSegA& (0+255),w,b
  1628  000CBE  5D27               	subwf	__SRAMmerge@pSegB& (0+255),w,b
  1629  000CC0  C123  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1630  000CC4  C124  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1631  000CC8  6EDF               	movwf	indf2,c
  1632  000CCA                     
  1633                           ; BSR set to: 1
  1634                           ;mm.c: 345:   return (0x7F);
  1635  000CCA  0E7F               	movlw	127
  1636  000CCC  EF6F  F006         	goto	l312
  1637  000CD0                     l3363:
  1638                           
  1639                           ; BSR set to: 1
  1640                           ;mm.c: 350:  {;mm.c: 351:   return ((*pSegA).byte = uSum.byte);
  1641  000CD0  C123  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1642  000CD4  C124  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1643  000CD8  C126  FFDF         	movff	__SRAMmerge@uSum,indf2
  1644  000CDC  50DF               	movf	223,w,c
  1645  000CDE                     l312:
  1646                           
  1647                           ; BSR set to: 1
  1648  000CDE  0012               	return		;funcret
  1649  000CE0                     __end_of__SRAMmerge:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _SRAMInitHeap *****************
  1653 ;; Defined at:
  1654 ;;		line 263 in file "mm.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  count           2   37[BANK1 ] unsigned int 
  1659 ;;  pHeap           2   35[BANK1 ] PTR unsigned char 
  1660 ;;		 -> _uDynamicHeap(512), 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       0       0       0       0       0       0
  1671 ;;      Locals:         0       0       4       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0
  1673 ;;      Totals:         0       0       4       0       0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    9
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text11
  1685  0012A0                     __ptext11:
  1686                           	callstack 0
  1687  0012A0                     _SRAMInitHeap:
  1688                           	callstack 21
  1689  0012A0                     
  1690                           ;mm.c: 265:  u_char* pHeap;;mm.c: 266:       u_int count;;mm.c: 268:  pHeap = _uDynamicH
      +                          eap;
  1691  0012A0  0E83               	movlw	low __uDynamicHeap
  1692  0012A2  0101               	movlb	1	; () banked
  1693  0012A4  6F23               	movwf	SRAMInitHeap@pHeap& (0+255),b
  1694  0012A6  0E03               	movlw	high __uDynamicHeap
  1695  0012A8  6F24               	movwf	(SRAMInitHeap@pHeap+1)& (0+255),b
  1696  0012AA                     
  1697                           ; BSR set to: 1
  1698                           ;mm.c: 269:  count = 0x200 -1;
  1699  0012AA  0E01               	movlw	1
  1700  0012AC  6F26               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  1701  0012AE  6925               	setf	SRAMInitHeap@count& (0+255),b
  1702  0012B0                     l3487:
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;mm.c: 272:  {;mm.c: 273:   if (count > 0x7F)
  1706  0012B0  5126               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  1707  0012B2  E109               	bnz	u2770
  1708  0012B4  0E80               	movlw	128
  1709  0012B6  5D25               	subwf	SRAMInitHeap@count& (0+255),w,b
  1710  0012B8  A0D8               	btfss	status,0,c
  1711  0012BA  EF61  F009         	goto	u2771
  1712  0012BE  EF63  F009         	goto	u2770
  1713  0012C2                     u2771:
  1714  0012C2  EF75  F009         	goto	l3495
  1715  0012C6                     u2770:
  1716  0012C6                     
  1717                           ; BSR set to: 1
  1718                           ;mm.c: 274:   {;mm.c: 275:    *pHeap = 0x7F;
  1719  0012C6  C123  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1720  0012CA  C124  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1721  0012CE  0E7F               	movlw	127
  1722  0012D0  6EDF               	movwf	indf2,c
  1723  0012D2                     
  1724                           ; BSR set to: 1
  1725                           ;mm.c: 276:    pHeap += 0x7F;
  1726  0012D2  0E7F               	movlw	127
  1727  0012D4  2723               	addwf	SRAMInitHeap@pHeap& (0+255),f,b
  1728  0012D6  0E00               	movlw	0
  1729  0012D8  2324               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),f,b
  1730  0012DA                     
  1731                           ; BSR set to: 1
  1732                           ;mm.c: 277:    count = count - 0x7F;
  1733  0012DA  0E81               	movlw	129
  1734  0012DC  2525               	addwf	SRAMInitHeap@count& (0+255),w,b
  1735  0012DE  6F25               	movwf	SRAMInitHeap@count& (0+255),b
  1736  0012E0  0EFF               	movlw	255
  1737  0012E2  2126               	addwfc	(SRAMInitHeap@count+1)& (0+255),w,b
  1738  0012E4  6F26               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  1739                           
  1740                           ;mm.c: 278:   }
  1741  0012E6  EF58  F009         	goto	l3487
  1742  0012EA                     l3495:
  1743                           
  1744                           ; BSR set to: 1
  1745                           ;mm.c: 280:   {;mm.c: 281:    *pHeap = count;
  1746  0012EA  C123  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1747  0012EE  C124  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1748  0012F2  C125  FFDF         	movff	SRAMInitHeap@count,indf2
  1749  0012F6                     
  1750                           ; BSR set to: 1
  1751                           ;mm.c: 282:    *(pHeap + count) = 0;
  1752  0012F6  5125               	movf	SRAMInitHeap@count& (0+255),w,b
  1753  0012F8  2523               	addwf	SRAMInitHeap@pHeap& (0+255),w,b
  1754  0012FA  6ED9               	movwf	fsr2l,c
  1755  0012FC  5126               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  1756  0012FE  2124               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),w,b
  1757  001300  6EDA               	movwf	fsr2h,c
  1758  001302  0E00               	movlw	0
  1759  001304  6EDF               	movwf	indf2,c
  1760  001306                     
  1761                           ; BSR set to: 1
  1762  001306  0012               	return		;funcret
  1763  001308                     __end_of_SRAMInitHeap:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _task_idle *****************
  1767 ;; Defined at:
  1768 ;;		line 58 in file "kernel.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		None
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1782 ;;      Params:         0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    9
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_os_config
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text12
  1798  001650                     __ptext12:
  1799                           	callstack 0
  1800  001650                     _task_idle:
  1801                           	callstack 16
  1802  001650                     l61:
  1803                           
  1804                           ;kernel.c: 60:   __nop();
  1805  001650  F000               	nop	
  1806  001652  EF28  F00B         	goto	l61
  1807  001656  0012               	return		;funcret
  1808  001658                     __end_of_task_idle:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _task_1 *****************
  1812 ;; Defined at:
  1813 ;;		line 45 in file "tasks.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    8
  1834 ;; This function calls:
  1835 ;;		_pipe_write
  1836 ;;		_sem_wait
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text13
  1843  001568                     __ptext13:
  1844                           	callstack 0
  1845  001568                     _task_1:
  1846                           	callstack 17
  1847  001568                     l161:
  1848                           
  1849                           ;tasks.c: 47:         if (PORTDbits.RD1 == 0){
  1850  001568  B283               	btfsc	131,1,c	;volatile
  1851  00156A  EFB9  F00A         	goto	u289_21
  1852  00156E  EFBB  F00A         	goto	u289_20
  1853  001572                     u289_21:
  1854  001572  EFB4  F00A         	goto	l161
  1855  001576                     u289_20:
  1856  001576                     
  1857                           ;tasks.c: 48:    PORTDbits.RD7 = 1;
  1858  001576  8E83               	bsf	131,7,c	;volatile
  1859  001578                     
  1860                           ;tasks.c: 49:    pipe_write(&pipe_igni, 1);
  1861  001578  0EAD               	movlw	low _pipe_igni
  1862  00157A  0101               	movlb	1	; () banked
  1863  00157C  6F1C               	movwf	pipe_write@p& (0+255),b
  1864  00157E  0E00               	movlw	high _pipe_igni
  1865  001580  6F1D               	movwf	(pipe_write@p+1)& (0+255),b
  1866  001582  0E01               	movlw	1
  1867  001584  6F1E               	movwf	pipe_write@data& (0+255),b
  1868  001586  EC8E  F007         	call	_pipe_write	;wreg free
  1869  00158A                     
  1870                           ;tasks.c: 50:    sem_wait(&sem_igni);
  1871  00158A  0E15               	movlw	low _sem_igni
  1872  00158C  6E44               	movwf	sem_wait@sem^0,c
  1873  00158E  0E00               	movlw	high _sem_igni
  1874  001590  6E45               	movwf	(sem_wait@sem+1)^0,c
  1875  001592  EC09  F000         	call	_sem_wait	;wreg free
  1876  001596  EFB4  F00A         	goto	l161
  1877  00159A  0012               	return		;funcret
  1878  00159C                     __end_of_task_1:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _sem_wait *****************
  1882 ;; Defined at:
  1883 ;;		line 19 in file "semaforo.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  sem             2   29[COMRAM] PTR struct semaforo
  1886 ;;		 -> sem_motor(18), sem_igni(18), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1898 ;;      Params:         2       0       0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0
  1900 ;;      Temps:          4       0       0       0       0       0       0
  1901 ;;      Totals:         6       0       0       0       0       0       0
  1902 ;;Total ram usage:        6 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    7
  1905 ;; This function calls:
  1906 ;;		___lwmod
  1907 ;;		_scheduler
  1908 ;;		i1___wmul
  1909 ;; This function is called by:
  1910 ;;		_task_1
  1911 ;;		_task_5
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text14
  1916  000012                     __ptext14:
  1917                           	callstack 0
  1918  000012                     _sem_wait:
  1919                           	callstack 17
  1920  000012                     
  1921                           ;semaforo.c: 20:  INTCONbits.GIE = 0;
  1922  000012  9EF2               	bcf	242,7,c	;volatile
  1923  000014                     
  1924                           ;semaforo.c: 22:  if (sem->contadorSem <= 0) {
  1925  000014  C044  FFD9         	movff	sem_wait@sem,fsr2l
  1926  000018  C045  FFDA         	movff	sem_wait@sem+1,fsr2h
  1927  00001C  0E01               	movlw	1
  1928  00001E  BEDB               	btfsc	plusw2,7,c
  1929  000020  EF1D  F000         	goto	i1u236_20
  1930  000024  0E01               	movlw	1
  1931  000026  50DB               	movf	plusw2,w,c
  1932  000028  E106               	bnz	i1u236_21
  1933  00002A  04DE               	decf	postinc2,w,c
  1934  00002C  B0D8               	btfsc	status,0,c
  1935  00002E  EF1B  F000         	goto	i1u236_21
  1936  000032  EF1D  F000         	goto	i1u236_20
  1937  000036                     i1u236_21:
  1938  000036  EF96  F002         	goto	i1l3139
  1939  00003A                     i1u236_20:
  1940  00003A                     
  1941                           ;semaforo.c: 24:   sem->fila.tasks[sem->fila.queue] = f_aptos.task_running;
  1942  00003A  EE23  F081         	lfsr	2,_f_aptos+520
  1943  00003E  EE10 F00E          	lfsr	1,14
  1944  000042  5044               	movf	sem_wait@sem^0,w,c
  1945  000044  26E1               	addwf	fsr1l,f,c
  1946  000046  5045               	movf	(sem_wait@sem+1)^0,w,c
  1947  000048  22E2               	addwfc	fsr1h,f,c
  1948  00004A  CFE6 F046          	movff	postinc1,??_sem_wait
  1949  00004E  CFE5 F047          	movff	postdec1,??_sem_wait+1
  1950  000052  90D8               	bcf	status,0,c
  1951  000054  3646               	rlcf	??_sem_wait^0,f,c
  1952  000056  3647               	rlcf	(??_sem_wait+1)^0,f,c
  1953  000058  C044  F048         	movff	sem_wait@sem,??_sem_wait+2
  1954  00005C  C045  F049         	movff	sem_wait@sem+1,??_sem_wait+3
  1955  000060  5046               	movf	??_sem_wait^0,w,c
  1956  000062  2648               	addwf	(??_sem_wait+2)^0,f,c
  1957  000064  5047               	movf	(??_sem_wait+1)^0,w,c
  1958  000066  2249               	addwfc	(??_sem_wait+3)^0,f,c
  1959  000068  0E04               	movlw	4
  1960  00006A  2448               	addwf	(??_sem_wait+2)^0,w,c
  1961  00006C  6EE1               	movwf	fsr1l,c
  1962  00006E  0E00               	movlw	0
  1963  000070  2049               	addwfc	(??_sem_wait+3)^0,w,c
  1964  000072  6EE2               	movwf	fsr1h,c
  1965  000074  CFDE FFE6          	movff	postinc2,postinc1
  1966  000078  CFDD FFE5          	movff	postdec2,postdec1
  1967  00007C                     
  1968                           ;semaforo.c: 25:   sem->fila.queue = (sem->fila.queue + 1) % (6 - 1);
  1969  00007C  EE20 F00E          	lfsr	2,14
  1970  000080  5044               	movf	sem_wait@sem^0,w,c
  1971  000082  26D9               	addwf	fsr2l,f,c
  1972  000084  5045               	movf	(sem_wait@sem+1)^0,w,c
  1973  000086  22DA               	addwfc	fsr2h,f,c
  1974  000088  CFDE F046          	movff	postinc2,??_sem_wait
  1975  00008C  CFDD F047          	movff	postdec2,??_sem_wait+1
  1976  000090  0E01               	movlw	1
  1977  000092  2446               	addwf	??_sem_wait^0,w,c
  1978  000094  0100               	movlb	0	; () banked
  1979  000096  6F97               	movwf	___lwmod@dividend& (0+255),b
  1980  000098  0E00               	movlw	0
  1981  00009A  2047               	addwfc	(??_sem_wait+1)^0,w,c
  1982  00009C  6F98               	movwf	(___lwmod@dividend+1)& (0+255),b
  1983  00009E  0E00               	movlw	0
  1984  0000A0  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
  1985  0000A2  0E05               	movlw	5
  1986  0000A4  6F99               	movwf	___lwmod@divisor& (0+255),b
  1987  0000A6  EC84  F009         	call	___lwmod	;wreg free
  1988  0000AA  EE20 F00E          	lfsr	2,14
  1989  0000AE  5044               	movf	sem_wait@sem^0,w,c
  1990  0000B0  26D9               	addwf	fsr2l,f,c
  1991  0000B2  5045               	movf	(sem_wait@sem+1)^0,w,c
  1992  0000B4  22DA               	addwfc	fsr2h,f,c
  1993  0000B6  0100               	movlb	0	; () banked
  1994  0000B8  C097  FFDE         	movff	?___lwmod,postinc2
  1995  0000BC  C098  FFDD         	movff	?___lwmod+1,postdec2
  1996  0000C0                     
  1997                           ; BSR set to: 0
  1998                           ;semaforo.c: 27:   { index = 0; f_aptos.ready_queue[f_aptos.task_running].task_state = W
      +                          AITING_SEM; f_aptos.ready_queue[f_aptos.task_running].w_reg = WREG; f_aptos.ready_queue[
      +                          f_aptos.task_running].bsr_reg = BSR; f_aptos.ready_queue[f_aptos.task_running].status_re
      +                          g = STATUS; while (STKPTR) { f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[
      +                          index].TOSU_reg = TOSU; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index
      +                          ].TOSL_reg = TOSL; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index].TOS
      +                          H_reg = TOSH; index++; __asm("POP"); } f_aptos.ready_queue[f_aptos.task_running].task_st
      +                          ack.size = index; };
  1999  0000C0  0E00               	movlw	0
  2000  0000C2  6E02               	movwf	(_index+1)^0,c
  2001  0000C4  0E00               	movlw	0
  2002  0000C6  6E01               	movwf	_index^0,c
  2003  0000C8                     
  2004                           ; BSR set to: 0
  2005  0000C8  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2006  0000CC  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2007  0000D0  0E00               	movlw	0
  2008  0000D2  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2009  0000D4  0E4A               	movlw	74
  2010  0000D6  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2011  0000D8  ECE2  F00A         	call	i1___wmul	;wreg free
  2012  0000DC  0E7B               	movlw	low (_f_aptos+2)
  2013  0000DE  0100               	movlb	0	; () banked
  2014  0000E0  2597               	addwf	?i1___wmul& (0+255),w,b
  2015  0000E2  6ED9               	movwf	fsr2l,c
  2016  0000E4  0E01               	movlw	high (_f_aptos+2)
  2017  0000E6  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2018  0000E8  6EDA               	movwf	fsr2h,c
  2019  0000EA  0E02               	movlw	2
  2020  0000EC  6EDF               	movwf	indf2,c
  2021  0000EE                     
  2022                           ; BSR set to: 0
  2023  0000EE  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2024  0000F2  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2025  0000F6  0E00               	movlw	0
  2026  0000F8  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2027  0000FA  0E4A               	movlw	74
  2028  0000FC  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2029  0000FE  ECE2  F00A         	call	i1___wmul	;wreg free
  2030  000102  0EBF               	movlw	low (_f_aptos+70)
  2031  000104  0100               	movlb	0	; () banked
  2032  000106  2597               	addwf	?i1___wmul& (0+255),w,b
  2033  000108  6ED9               	movwf	fsr2l,c
  2034  00010A  0E01               	movlw	high (_f_aptos+70)
  2035  00010C  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2036  00010E  6EDA               	movwf	fsr2h,c
  2037  000110  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2038  000114                     
  2039                           ; BSR set to: 0
  2040  000114  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2041  000118  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2042  00011C  0E00               	movlw	0
  2043  00011E  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2044  000120  0E4A               	movlw	74
  2045  000122  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2046  000124  ECE2  F00A         	call	i1___wmul	;wreg free
  2047  000128  0EBE               	movlw	low (_f_aptos+69)
  2048  00012A  0100               	movlb	0	; () banked
  2049  00012C  2597               	addwf	?i1___wmul& (0+255),w,b
  2050  00012E  6ED9               	movwf	fsr2l,c
  2051  000130  0E01               	movlw	high (_f_aptos+69)
  2052  000132  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2053  000134  6EDA               	movwf	fsr2h,c
  2054  000136  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2055  00013A                     
  2056                           ; BSR set to: 0
  2057  00013A  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2058  00013E  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2059  000142  0E00               	movlw	0
  2060  000144  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2061  000146  0E4A               	movlw	74
  2062  000148  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2063  00014A  ECE2  F00A         	call	i1___wmul	;wreg free
  2064  00014E  0EC0               	movlw	low (_f_aptos+71)
  2065  000150  0100               	movlb	0	; () banked
  2066  000152  2597               	addwf	?i1___wmul& (0+255),w,b
  2067  000154  6ED9               	movwf	fsr2l,c
  2068  000156  0E01               	movlw	high (_f_aptos+71)
  2069  000158  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2070  00015A  6EDA               	movwf	fsr2h,c
  2071  00015C  CFD8 FFDF          	movff	status,indf2	;volatile
  2072  000160  EF34  F001         	goto	i1l3119
  2073  000164                     i1l3115:
  2074  000164  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2075  000168  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2076  00016C  0E00               	movlw	0
  2077  00016E  0100               	movlb	0	; () banked
  2078  000170  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2079  000172  0E4A               	movlw	74
  2080  000174  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2081  000176  ECE2  F00A         	call	i1___wmul	;wreg free
  2082  00017A  0E79               	movlw	low _f_aptos
  2083  00017C  6E46               	movwf	??_sem_wait^0,c
  2084  00017E  0E01               	movlw	high _f_aptos
  2085  000180  6E47               	movwf	(??_sem_wait+1)^0,c
  2086  000182  0E07               	movlw	7
  2087  000184  2646               	addwf	??_sem_wait^0,f,c
  2088  000186  0E00               	movlw	0
  2089  000188  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2090  00018A  0100               	movlb	0	; () banked
  2091  00018C  5197               	movf	?i1___wmul& (0+255),w,b
  2092  00018E  2646               	addwf	??_sem_wait^0,f,c
  2093  000190  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2094  000192  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2095  000194  C001  F097         	movff	_index,i1___wmul@multiplier
  2096  000198  C002  F098         	movff	_index+1,i1___wmul@multiplier+1
  2097  00019C  0E00               	movlw	0
  2098  00019E  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2099  0001A0  0E03               	movlw	3
  2100  0001A2  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2101  0001A4  ECE2  F00A         	call	i1___wmul	;wreg free
  2102  0001A8  0100               	movlb	0	; () banked
  2103  0001AA  5197               	movf	?i1___wmul& (0+255),w,b
  2104  0001AC  2446               	addwf	??_sem_wait^0,w,c
  2105  0001AE  6ED9               	movwf	fsr2l,c
  2106  0001B0  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2107  0001B2  2047               	addwfc	(??_sem_wait+1)^0,w,c
  2108  0001B4  6EDA               	movwf	fsr2h,c
  2109  0001B6  CFFF FFDF          	movff	tosu,indf2	;volatile
  2110  0001BA  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2111  0001BE  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2112  0001C2  0E00               	movlw	0
  2113  0001C4  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2114  0001C6  0E4A               	movlw	74
  2115  0001C8  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2116  0001CA  ECE2  F00A         	call	i1___wmul	;wreg free
  2117  0001CE  0E79               	movlw	low _f_aptos
  2118  0001D0  6E46               	movwf	??_sem_wait^0,c
  2119  0001D2  0E01               	movlw	high _f_aptos
  2120  0001D4  6E47               	movwf	(??_sem_wait+1)^0,c
  2121  0001D6  0E08               	movlw	8
  2122  0001D8  2646               	addwf	??_sem_wait^0,f,c
  2123  0001DA  0E00               	movlw	0
  2124  0001DC  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2125  0001DE  0100               	movlb	0	; () banked
  2126  0001E0  5197               	movf	?i1___wmul& (0+255),w,b
  2127  0001E2  2646               	addwf	??_sem_wait^0,f,c
  2128  0001E4  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2129  0001E6  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2130  0001E8  C001  F097         	movff	_index,i1___wmul@multiplier
  2131  0001EC  C002  F098         	movff	_index+1,i1___wmul@multiplier+1
  2132  0001F0  0E00               	movlw	0
  2133  0001F2  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2134  0001F4  0E03               	movlw	3
  2135  0001F6  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2136  0001F8  ECE2  F00A         	call	i1___wmul	;wreg free
  2137  0001FC  0100               	movlb	0	; () banked
  2138  0001FE  5197               	movf	?i1___wmul& (0+255),w,b
  2139  000200  2446               	addwf	??_sem_wait^0,w,c
  2140  000202  6ED9               	movwf	fsr2l,c
  2141  000204  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2142  000206  2047               	addwfc	(??_sem_wait+1)^0,w,c
  2143  000208  6EDA               	movwf	fsr2h,c
  2144  00020A  CFFD FFDF          	movff	tosl,indf2	;volatile
  2145  00020E  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2146  000212  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2147  000216  0E00               	movlw	0
  2148  000218  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2149  00021A  0E4A               	movlw	74
  2150  00021C  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2151  00021E  ECE2  F00A         	call	i1___wmul	;wreg free
  2152  000222  0E79               	movlw	low _f_aptos
  2153  000224  6E46               	movwf	??_sem_wait^0,c
  2154  000226  0E01               	movlw	high _f_aptos
  2155  000228  6E47               	movwf	(??_sem_wait+1)^0,c
  2156  00022A  0E09               	movlw	9
  2157  00022C  2646               	addwf	??_sem_wait^0,f,c
  2158  00022E  0E00               	movlw	0
  2159  000230  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2160  000232  0100               	movlb	0	; () banked
  2161  000234  5197               	movf	?i1___wmul& (0+255),w,b
  2162  000236  2646               	addwf	??_sem_wait^0,f,c
  2163  000238  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2164  00023A  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2165  00023C  C001  F097         	movff	_index,i1___wmul@multiplier
  2166  000240  C002  F098         	movff	_index+1,i1___wmul@multiplier+1
  2167  000244  0E00               	movlw	0
  2168  000246  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2169  000248  0E03               	movlw	3
  2170  00024A  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2171  00024C  ECE2  F00A         	call	i1___wmul	;wreg free
  2172  000250  0100               	movlb	0	; () banked
  2173  000252  5197               	movf	?i1___wmul& (0+255),w,b
  2174  000254  2446               	addwf	??_sem_wait^0,w,c
  2175  000256  6ED9               	movwf	fsr2l,c
  2176  000258  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2177  00025A  2047               	addwfc	(??_sem_wait+1)^0,w,c
  2178  00025C  6EDA               	movwf	fsr2h,c
  2179  00025E  CFFE FFDF          	movff	tosh,indf2	;volatile
  2180  000262                     
  2181                           ; BSR set to: 0
  2182  000262  4A01               	infsnz	_index^0,f,c
  2183  000264  2A02               	incf	(_index+1)^0,f,c
  2184  000266  0006               	pop		;# 
  2185  000268                     i1l3119:
  2186  000268  50FC               	movf	252,w,c	;volatile
  2187  00026A  A4D8               	btfss	status,2,c
  2188  00026C  EF3A  F001         	goto	i1u237_21
  2189  000270  EF3C  F001         	goto	i1u237_20
  2190  000274                     i1u237_21:
  2191  000274  EFB2  F000         	goto	i1l3115
  2192  000278                     i1u237_20:
  2193  000278  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2194  00027C  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2195  000280  0E00               	movlw	0
  2196  000282  0100               	movlb	0	; () banked
  2197  000284  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2198  000286  0E4A               	movlw	74
  2199  000288  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2200  00028A  ECE2  F00A         	call	i1___wmul	;wreg free
  2201  00028E  0EBC               	movlw	low (_f_aptos+67)
  2202  000290  0100               	movlb	0	; () banked
  2203  000292  2597               	addwf	?i1___wmul& (0+255),w,b
  2204  000294  6ED9               	movwf	fsr2l,c
  2205  000296  0E01               	movlw	high (_f_aptos+67)
  2206  000298  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2207  00029A  6EDA               	movwf	fsr2h,c
  2208  00029C  C001  FFDE         	movff	_index,postinc2
  2209  0002A0  C002  FFDD         	movff	_index+1,postdec2
  2210                           
  2211                           ;semaforo.c: 28:   { f_aptos.task_running = scheduler(); STKPTR = 0; if (f_aptos.ready_q
      +                          ueue[f_aptos.task_running].task_stack.size == 0) { __asm("PUSH"); TOS = f_aptos.ready_qu
      +                          eue[f_aptos.task_running].task_func; f_aptos.ready_queue[f_aptos.task_running].task_stat
      +                          e = RUNNING; } else { f_aptos.ready_queue[f_aptos.task_running].task_state = RUNNING; WR
      +                          EG = f_aptos.ready_queue[f_aptos.task_running].w_reg; BSR = f_aptos.ready_queue[f_aptos.
      +                          task_running].bsr_reg; STATUS = f_aptos.ready_queue[f_aptos.task_running].status_reg; in
      +                          dex = f_aptos.ready_queue[f_aptos.task_running].task_stack.size; while(index) { __asm("P
      +                          USH"); TOSU = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSU
      +                          _reg; TOSL = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSL_
      +                          reg; TOSH = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSH_r
      +                          eg; index--; } } };
  2212  0002A4  EC14  F00B         	call	_scheduler	;wreg free
  2213  0002A8  C042  F381         	movff	?_scheduler,_f_aptos+520
  2214  0002AC  C043  F382         	movff	?_scheduler+1,_f_aptos+521
  2215  0002B0  0E00               	movlw	0
  2216  0002B2  6EFC               	movwf	252,c	;volatile
  2217  0002B4  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2218  0002B8  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2219  0002BC  0E00               	movlw	0
  2220  0002BE  0100               	movlb	0	; () banked
  2221  0002C0  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2222  0002C2  0E4A               	movlw	74
  2223  0002C4  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2224  0002C6  ECE2  F00A         	call	i1___wmul	;wreg free
  2225  0002CA  0EBC               	movlw	low (_f_aptos+67)
  2226  0002CC  0100               	movlb	0	; () banked
  2227  0002CE  2597               	addwf	?i1___wmul& (0+255),w,b
  2228  0002D0  6ED9               	movwf	fsr2l,c
  2229  0002D2  0E01               	movlw	high (_f_aptos+67)
  2230  0002D4  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2231  0002D6  6EDA               	movwf	fsr2h,c
  2232  0002D8  50DE               	movf	postinc2,w,c
  2233  0002DA  10DE               	iorwf	postinc2,w,c
  2234  0002DC  A4D8               	btfss	status,2,c
  2235  0002DE  EF73  F001         	goto	i1u238_21
  2236  0002E2  EF75  F001         	goto	i1u238_20
  2237  0002E6                     i1u238_21:
  2238  0002E6  EFA6  F001         	goto	i1l3131
  2239  0002EA                     i1u238_20:
  2240  0002EA                     
  2241                           ; BSR set to: 0
  2242  0002EA  0005               	push		;# 
  2243  0002EC  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2244  0002F0  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2245  0002F4  0E00               	movlw	0
  2246  0002F6  0100               	movlb	0	; () banked
  2247  0002F8  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2248  0002FA  0E4A               	movlw	74
  2249  0002FC  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2250  0002FE  ECE2  F00A         	call	i1___wmul	;wreg free
  2251  000302  0E7E               	movlw	low (_f_aptos+5)
  2252  000304  0100               	movlb	0	; () banked
  2253  000306  2597               	addwf	?i1___wmul& (0+255),w,b
  2254  000308  6ED9               	movwf	fsr2l,c
  2255  00030A  0E01               	movlw	high (_f_aptos+5)
  2256  00030C  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2257  00030E  6EDA               	movwf	fsr2h,c
  2258  000310  CFDE F046          	movff	postinc2,??_sem_wait
  2259  000314  CFDD F047          	movff	postdec2,??_sem_wait+1
  2260  000318  C046  FFFD         	movff	??_sem_wait,tosl	;volatile
  2261  00031C  C047  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  2262  000320  6AFF               	clrf	255,c	;volatile
  2263  000322  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2264  000326  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2265  00032A  0E00               	movlw	0
  2266  00032C  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2267  00032E  0E4A               	movlw	74
  2268  000330  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2269  000332  ECE2  F00A         	call	i1___wmul	;wreg free
  2270  000336  0E7B               	movlw	low (_f_aptos+2)
  2271  000338  0100               	movlb	0	; () banked
  2272  00033A  2597               	addwf	?i1___wmul& (0+255),w,b
  2273  00033C  6ED9               	movwf	fsr2l,c
  2274  00033E  0E01               	movlw	high (_f_aptos+2)
  2275  000340  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2276  000342  6EDA               	movwf	fsr2h,c
  2277  000344  0E01               	movlw	1
  2278  000346  6EDF               	movwf	indf2,c
  2279  000348  EF96  F002         	goto	i1l3139
  2280  00034C                     i1l3131:
  2281                           
  2282                           ; BSR set to: 0
  2283  00034C  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2284  000350  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2285  000354  0E00               	movlw	0
  2286  000356  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2287  000358  0E4A               	movlw	74
  2288  00035A  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2289  00035C  ECE2  F00A         	call	i1___wmul	;wreg free
  2290  000360  0E7B               	movlw	low (_f_aptos+2)
  2291  000362  0100               	movlb	0	; () banked
  2292  000364  2597               	addwf	?i1___wmul& (0+255),w,b
  2293  000366  6ED9               	movwf	fsr2l,c
  2294  000368  0E01               	movlw	high (_f_aptos+2)
  2295  00036A  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2296  00036C  6EDA               	movwf	fsr2h,c
  2297  00036E  0E01               	movlw	1
  2298  000370  6EDF               	movwf	indf2,c
  2299  000372  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2300  000376  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2301  00037A  0E00               	movlw	0
  2302  00037C  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2303  00037E  0E4A               	movlw	74
  2304  000380  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2305  000382  ECE2  F00A         	call	i1___wmul	;wreg free
  2306  000386  0EBF               	movlw	low (_f_aptos+70)
  2307  000388  0100               	movlb	0	; () banked
  2308  00038A  2597               	addwf	?i1___wmul& (0+255),w,b
  2309  00038C  6ED9               	movwf	fsr2l,c
  2310  00038E  0E01               	movlw	high (_f_aptos+70)
  2311  000390  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2312  000392  6EDA               	movwf	fsr2h,c
  2313  000394  50DF               	movf	indf2,w,c
  2314  000396  6E46               	movwf	??_sem_wait^0,c
  2315  000398  5046               	movf	??_sem_wait^0,w,c
  2316  00039A  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2317  00039E  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2318  0003A2  0E00               	movlw	0
  2319  0003A4  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2320  0003A6  0E4A               	movlw	74
  2321  0003A8  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2322  0003AA  ECE2  F00A         	call	i1___wmul	;wreg free
  2323  0003AE  0EBE               	movlw	low (_f_aptos+69)
  2324  0003B0  0100               	movlb	0	; () banked
  2325  0003B2  2597               	addwf	?i1___wmul& (0+255),w,b
  2326  0003B4  6ED9               	movwf	fsr2l,c
  2327  0003B6  0E01               	movlw	high (_f_aptos+69)
  2328  0003B8  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2329  0003BA  6EDA               	movwf	fsr2h,c
  2330  0003BC  50DF               	movf	indf2,w,c
  2331  0003BE  6EE0               	movwf	224,c	;volatile
  2332  0003C0  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2333  0003C4  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2334  0003C8  0E00               	movlw	0
  2335  0003CA  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2336  0003CC  0E4A               	movlw	74
  2337  0003CE  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2338  0003D0  ECE2  F00A         	call	i1___wmul	;wreg free
  2339  0003D4  0EC0               	movlw	low (_f_aptos+71)
  2340  0003D6  0100               	movlb	0	; () banked
  2341  0003D8  2597               	addwf	?i1___wmul& (0+255),w,b
  2342  0003DA  6ED9               	movwf	fsr2l,c
  2343  0003DC  0E01               	movlw	high (_f_aptos+71)
  2344  0003DE  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2345  0003E0  6EDA               	movwf	fsr2h,c
  2346  0003E2  50DF               	movf	indf2,w,c
  2347  0003E4  6ED8               	movwf	216,c	;volatile
  2348  0003E6  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2349  0003EA  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2350  0003EE  0E00               	movlw	0
  2351  0003F0  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2352  0003F2  0E4A               	movlw	74
  2353  0003F4  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2354  0003F6  ECE2  F00A         	call	i1___wmul	;wreg free
  2355  0003FA  0EBC               	movlw	low (_f_aptos+67)
  2356  0003FC  0100               	movlb	0	; () banked
  2357  0003FE  2597               	addwf	?i1___wmul& (0+255),w,b
  2358  000400  6ED9               	movwf	fsr2l,c
  2359  000402  0E01               	movlw	high (_f_aptos+67)
  2360  000404  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2361  000406  6EDA               	movwf	fsr2h,c
  2362  000408  CFDE F001          	movff	postinc2,_index
  2363  00040C  CFDD F002          	movff	postdec2,_index+1
  2364  000410  EF8D  F002         	goto	i1l3137
  2365  000414                     i1l355:
  2366                           
  2367                           ; BSR set to: 0
  2368  000414  0005               	push		;# 
  2369  000416  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2370  00041A  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2371  00041E  0E00               	movlw	0
  2372  000420  0100               	movlb	0	; () banked
  2373  000422  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2374  000424  0E4A               	movlw	74
  2375  000426  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2376  000428  ECE2  F00A         	call	i1___wmul	;wreg free
  2377  00042C  0E79               	movlw	low _f_aptos
  2378  00042E  6E46               	movwf	??_sem_wait^0,c
  2379  000430  0E01               	movlw	high _f_aptos
  2380  000432  6E47               	movwf	(??_sem_wait+1)^0,c
  2381  000434  0E04               	movlw	4
  2382  000436  2646               	addwf	??_sem_wait^0,f,c
  2383  000438  0E00               	movlw	0
  2384  00043A  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2385  00043C  0100               	movlb	0	; () banked
  2386  00043E  5197               	movf	?i1___wmul& (0+255),w,b
  2387  000440  2646               	addwf	??_sem_wait^0,f,c
  2388  000442  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2389  000444  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2390  000446  C001  F097         	movff	_index,i1___wmul@multiplier
  2391  00044A  C002  F098         	movff	_index+1,i1___wmul@multiplier+1
  2392  00044E  0E00               	movlw	0
  2393  000450  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2394  000452  0E03               	movlw	3
  2395  000454  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2396  000456  ECE2  F00A         	call	i1___wmul	;wreg free
  2397  00045A  0100               	movlb	0	; () banked
  2398  00045C  5197               	movf	?i1___wmul& (0+255),w,b
  2399  00045E  2446               	addwf	??_sem_wait^0,w,c
  2400  000460  6ED9               	movwf	fsr2l,c
  2401  000462  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2402  000464  2047               	addwfc	(??_sem_wait+1)^0,w,c
  2403  000466  6EDA               	movwf	fsr2h,c
  2404  000468  50DF               	movf	indf2,w,c
  2405  00046A  6EFF               	movwf	255,c	;volatile
  2406  00046C  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2407  000470  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2408  000474  0E00               	movlw	0
  2409  000476  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2410  000478  0E4A               	movlw	74
  2411  00047A  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2412  00047C  ECE2  F00A         	call	i1___wmul	;wreg free
  2413  000480  0E79               	movlw	low _f_aptos
  2414  000482  6E46               	movwf	??_sem_wait^0,c
  2415  000484  0E01               	movlw	high _f_aptos
  2416  000486  6E47               	movwf	(??_sem_wait+1)^0,c
  2417  000488  0E05               	movlw	5
  2418  00048A  2646               	addwf	??_sem_wait^0,f,c
  2419  00048C  0E00               	movlw	0
  2420  00048E  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2421  000490  0100               	movlb	0	; () banked
  2422  000492  5197               	movf	?i1___wmul& (0+255),w,b
  2423  000494  2646               	addwf	??_sem_wait^0,f,c
  2424  000496  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2425  000498  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2426  00049A  C001  F097         	movff	_index,i1___wmul@multiplier
  2427  00049E  C002  F098         	movff	_index+1,i1___wmul@multiplier+1
  2428  0004A2  0E00               	movlw	0
  2429  0004A4  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2430  0004A6  0E03               	movlw	3
  2431  0004A8  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2432  0004AA  ECE2  F00A         	call	i1___wmul	;wreg free
  2433  0004AE  0100               	movlb	0	; () banked
  2434  0004B0  5197               	movf	?i1___wmul& (0+255),w,b
  2435  0004B2  2446               	addwf	??_sem_wait^0,w,c
  2436  0004B4  6ED9               	movwf	fsr2l,c
  2437  0004B6  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2438  0004B8  2047               	addwfc	(??_sem_wait+1)^0,w,c
  2439  0004BA  6EDA               	movwf	fsr2h,c
  2440  0004BC  50DF               	movf	indf2,w,c
  2441  0004BE  6EFD               	movwf	253,c	;volatile
  2442  0004C0  C381  F097         	movff	_f_aptos+520,i1___wmul@multiplier
  2443  0004C4  C382  F098         	movff	_f_aptos+521,i1___wmul@multiplier+1
  2444  0004C8  0E00               	movlw	0
  2445  0004CA  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2446  0004CC  0E4A               	movlw	74
  2447  0004CE  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2448  0004D0  ECE2  F00A         	call	i1___wmul	;wreg free
  2449  0004D4  0E79               	movlw	low _f_aptos
  2450  0004D6  6E46               	movwf	??_sem_wait^0,c
  2451  0004D8  0E01               	movlw	high _f_aptos
  2452  0004DA  6E47               	movwf	(??_sem_wait+1)^0,c
  2453  0004DC  0E06               	movlw	6
  2454  0004DE  2646               	addwf	??_sem_wait^0,f,c
  2455  0004E0  0E00               	movlw	0
  2456  0004E2  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2457  0004E4  0100               	movlb	0	; () banked
  2458  0004E6  5197               	movf	?i1___wmul& (0+255),w,b
  2459  0004E8  2646               	addwf	??_sem_wait^0,f,c
  2460  0004EA  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2461  0004EC  2247               	addwfc	(??_sem_wait+1)^0,f,c
  2462  0004EE  C001  F097         	movff	_index,i1___wmul@multiplier
  2463  0004F2  C002  F098         	movff	_index+1,i1___wmul@multiplier+1
  2464  0004F6  0E00               	movlw	0
  2465  0004F8  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2466  0004FA  0E03               	movlw	3
  2467  0004FC  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2468  0004FE  ECE2  F00A         	call	i1___wmul	;wreg free
  2469  000502  0100               	movlb	0	; () banked
  2470  000504  5197               	movf	?i1___wmul& (0+255),w,b
  2471  000506  2446               	addwf	??_sem_wait^0,w,c
  2472  000508  6ED9               	movwf	fsr2l,c
  2473  00050A  5198               	movf	(?i1___wmul+1)& (0+255),w,b
  2474  00050C  2047               	addwfc	(??_sem_wait+1)^0,w,c
  2475  00050E  6EDA               	movwf	fsr2h,c
  2476  000510  50DF               	movf	indf2,w,c
  2477  000512  6EFE               	movwf	254,c	;volatile
  2478  000514                     
  2479                           ; BSR set to: 0
  2480  000514  0601               	decf	_index^0,f,c
  2481  000516  A0D8               	btfss	status,0,c
  2482  000518  0602               	decf	(_index+1)^0,f,c
  2483  00051A                     i1l3137:
  2484                           
  2485                           ; BSR set to: 0
  2486  00051A  5001               	movf	_index^0,w,c
  2487  00051C  1002               	iorwf	(_index+1)^0,w,c
  2488  00051E  A4D8               	btfss	status,2,c
  2489  000520  EF94  F002         	goto	i1u239_21
  2490  000524  EF96  F002         	goto	i1u239_20
  2491  000528                     i1u239_21:
  2492  000528  EF0A  F002         	goto	i1l355
  2493  00052C                     i1u239_20:
  2494  00052C                     i1l3139:
  2495                           
  2496                           ;semaforo.c: 30:  sem->contadorSem--;
  2497  00052C  C044  FFD9         	movff	sem_wait@sem,fsr2l
  2498  000530  C045  FFDA         	movff	sem_wait@sem+1,fsr2h
  2499  000534  06DE               	decf	postinc2,f,c
  2500  000536  0E00               	movlw	0
  2501  000538  5ADD               	subwfb	postdec2,f,c
  2502  00053A                     
  2503                           ;semaforo.c: 31:  INTCONbits.GIE = 1;
  2504  00053A  8EF2               	bsf	242,7,c	;volatile
  2505  00053C  0012               	return		;funcret
  2506  00053E                     __end_of_sem_wait:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _scheduler *****************
  2510 ;; Defined at:
  2511 ;;		line 8 in file "scheduler.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2   27[COMRAM] unsigned int 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2525 ;;      Params:         2       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0
  2528 ;;      Totals:         2       0       0       0       0       0       0
  2529 ;;Total ram usage:        2 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    6
  2532 ;; This function calls:
  2533 ;;		_rr_scheduler
  2534 ;; This function is called by:
  2535 ;;		_sem_wait
  2536 ;;		_task_delay
  2537 ;;		_task_yield
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text15
  2542  001628                     __ptext15:
  2543                           	callstack 0
  2544  001628                     _scheduler:
  2545                           	callstack 17
  2546  001628                     
  2547                           ;scheduler.c: 10:    return rr_scheduler();
  2548  001628  ECE2  F008         	call	_rr_scheduler	;wreg free
  2549  00162C  C03C  F042         	movff	?_rr_scheduler,?_scheduler
  2550  001630  C03D  F043         	movff	?_rr_scheduler+1,?_scheduler+1
  2551  001634  0012               	return		;funcret
  2552  001636                     __end_of_scheduler:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _rr_scheduler *****************
  2556 ;; Defined at:
  2557 ;;		line 16 in file "scheduler.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  next_task       2   25[COMRAM] unsigned int 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2   21[COMRAM] unsigned int 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2571 ;;      Params:         2       0       0       0       0       0       0
  2572 ;;      Locals:         2       0       0       0       0       0       0
  2573 ;;      Temps:          2       0       0       0       0       0       0
  2574 ;;      Totals:         6       0       0       0       0       0       0
  2575 ;;Total ram usage:        6 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    5
  2578 ;; This function calls:
  2579 ;;		i1___wmul
  2580 ;; This function is called by:
  2581 ;;		_scheduler
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text16
  2586  0011C4                     __ptext16:
  2587                           	callstack 0
  2588  0011C4                     _rr_scheduler:
  2589                           	callstack 17
  2590  0011C4                     
  2591                           ;scheduler.c: 17:    u_int next_task = f_aptos.task_running;
  2592  0011C4  C381  F040         	movff	_f_aptos+520,rr_scheduler@next_task
  2593  0011C8  C382  F041         	movff	_f_aptos+521,rr_scheduler@next_task+1
  2594  0011CC                     i1l3047:
  2595                           
  2596                           ;scheduler.c: 19:   next_task += 1;
  2597  0011CC  4A40               	infsnz	rr_scheduler@next_task^0,f,c
  2598  0011CE  2A41               	incf	(rr_scheduler@next_task+1)^0,f,c
  2599  0011D0                     
  2600                           ;scheduler.c: 20:   if(next_task >= f_aptos.ready_queue_size){
  2601  0011D0  EE23  F07F         	lfsr	2,_f_aptos+518
  2602  0011D4  50DE               	movf	postinc2,w,c
  2603  0011D6  5C40               	subwf	rr_scheduler@next_task^0,w,c
  2604  0011D8  50DE               	movf	postinc2,w,c
  2605  0011DA  5841               	subwfb	(rr_scheduler@next_task+1)^0,w,c
  2606  0011DC  A0D8               	btfss	status,0,c
  2607  0011DE  EFF3  F008         	goto	i1u231_21
  2608  0011E2  EFF5  F008         	goto	i1u231_20
  2609  0011E6                     i1u231_21:
  2610  0011E6  EFFB  F008         	goto	i1l3053
  2611  0011EA                     i1u231_20:
  2612  0011EA                     
  2613                           ;scheduler.c: 21:    next_task = 0;
  2614  0011EA  0E00               	movlw	0
  2615  0011EC  6E41               	movwf	(rr_scheduler@next_task+1)^0,c
  2616  0011EE  0E00               	movlw	0
  2617  0011F0  6E40               	movwf	rr_scheduler@next_task^0,c
  2618                           
  2619                           ;scheduler.c: 22:    break;
  2620  0011F2  EF15  F009         	goto	i1l118
  2621  0011F6                     i1l3053:
  2622                           
  2623                           ;scheduler.c: 24:  } while (f_aptos.ready_queue[next_task].task_state != READY);
  2624  0011F6  C040  F097         	movff	rr_scheduler@next_task,i1___wmul@multiplier
  2625  0011FA  C041  F098         	movff	rr_scheduler@next_task+1,i1___wmul@multiplier+1
  2626  0011FE  0E00               	movlw	0
  2627  001200  0100               	movlb	0	; () banked
  2628  001202  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2629  001204  0E4A               	movlw	74
  2630  001206  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  2631  001208  ECE2  F00A         	call	i1___wmul	;wreg free
  2632  00120C  0E7B               	movlw	low (_f_aptos+2)
  2633  00120E  0100               	movlb	0	; () banked
  2634  001210  2597               	addwf	?i1___wmul& (0+255),w,b
  2635  001212  6ED9               	movwf	fsr2l,c
  2636  001214  0E01               	movlw	high (_f_aptos+2)
  2637  001216  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2638  001218  6EDA               	movwf	fsr2h,c
  2639  00121A  50DF               	movf	indf2,w,c
  2640  00121C  A4D8               	btfss	status,2,c
  2641  00121E  EF13  F009         	goto	i1u232_21
  2642  001222  EF15  F009         	goto	i1u232_20
  2643  001226                     i1u232_21:
  2644  001226  EFE6  F008         	goto	i1l3047
  2645  00122A                     i1u232_20:
  2646  00122A                     i1l118:
  2647                           
  2648                           ;scheduler.c: 25:  return next_task;
  2649  00122A  C040  F03C         	movff	rr_scheduler@next_task,?_rr_scheduler
  2650  00122E  C041  F03D         	movff	rr_scheduler@next_task+1,?_rr_scheduler+1
  2651  001232  0012               	return		;funcret
  2652  001234                     __end_of_rr_scheduler:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function i1___wmul *****************
  2656 ;; Defined at:
  2657 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  multiplier      2   23[BANK0 ] unsigned int 
  2660 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  product         2   27[BANK0 ] unsigned int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2   23[BANK0 ] unsigned int 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, prodl, prodh
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         0       4       0       0       0       0       0
  2673 ;;      Locals:         0       2       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0
  2675 ;;      Totals:         0       6       0       0       0       0       0
  2676 ;;Total ram usage:        6 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    4
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_rr_scheduler
  2683 ;;		_sem_wait
  2684 ;;		_sem_post
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text17
  2689  0015C4                     __ptext17:
  2690                           	callstack 0
  2691  0015C4                     i1___wmul:
  2692                           	callstack 19
  2693  0015C4  0100               	movlb	0	; () banked
  2694  0015C6  5197               	movf	i1___wmul@multiplier& (0+255),w,b
  2695  0015C8  0399               	mulwf	i1___wmul@multiplicand& (0+255),b
  2696  0015CA  CFF3 F09B          	movff	prodl,i1___wmul@product
  2697  0015CE  CFF4 F09C          	movff	prodh,i1___wmul@product+1
  2698  0015D2  5197               	movf	i1___wmul@multiplier& (0+255),w,b
  2699  0015D4  039A               	mulwf	(i1___wmul@multiplicand+1)& (0+255),b
  2700  0015D6  50F3               	movf	243,w,c
  2701  0015D8  279C               	addwf	(i1___wmul@product+1)& (0+255),f,b
  2702  0015DA  5198               	movf	(i1___wmul@multiplier+1)& (0+255),w,b
  2703  0015DC  0399               	mulwf	i1___wmul@multiplicand& (0+255),b
  2704  0015DE  50F3               	movf	243,w,c
  2705  0015E0  279C               	addwf	(i1___wmul@product+1)& (0+255),f,b
  2706  0015E2                     
  2707                           ; BSR set to: 0
  2708  0015E2  C09B  F097         	movff	i1___wmul@product,?i1___wmul
  2709  0015E6  C09C  F098         	movff	i1___wmul@product+1,?i1___wmul+1
  2710  0015EA                     
  2711                           ; BSR set to: 0
  2712  0015EA  0012               	return		;funcret
  2713  0015EC                     __end_ofi1___wmul:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _pipe_write *****************
  2717 ;; Defined at:
  2718 ;;		line 23 in file "pipe.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  p               2   28[BANK1 ] PTR struct pipe
  2721 ;;		 -> pipe_motor_error(8), pipe_error(8), pipe_igni(8), 
  2722 ;;  data            1   30[BANK1 ] unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2734 ;;      Params:         0       0       3       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       4       0       0       0       0
  2737 ;;      Totals:         0       0       7       0       0       0       0
  2738 ;;Total ram usage:        7 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    5
  2741 ;; This function calls:
  2742 ;;		___lwmod
  2743 ;; This function is called by:
  2744 ;;		_task_1
  2745 ;;		_task_2
  2746 ;;		_task_3
  2747 ;;		_task_5
  2748 ;;		_task_6
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text18
  2753  000F1C                     __ptext18:
  2754                           	callstack 0
  2755  000F1C                     _pipe_write:
  2756                           	callstack 19
  2757  000F1C                     
  2758                           ;pipe.c: 24:  INTCONbits.GIE = 0;
  2759  000F1C  9EF2               	bcf	242,7,c	;volatile
  2760  000F1E                     
  2761                           ;pipe.c: 25:  p->buffer[p->pos_write] = data;
  2762  000F1E  0101               	movlb	1	; () banked
  2763  000F20  EE20 F006          	lfsr	2,6
  2764  000F24  511C               	movf	pipe_write@p& (0+255),w,b
  2765  000F26  26D9               	addwf	fsr2l,f,c
  2766  000F28  511D               	movf	(pipe_write@p+1)& (0+255),w,b
  2767  000F2A  22DA               	addwfc	fsr2h,f,c
  2768  000F2C  CFDE F11F          	movff	postinc2,??_pipe_write
  2769  000F30  CFDD F120          	movff	postdec2,??_pipe_write+1
  2770  000F34  C11C  FFD9         	movff	pipe_write@p,fsr2l
  2771  000F38  C11D  FFDA         	movff	pipe_write@p+1,fsr2h
  2772  000F3C  CFDE F121          	movff	postinc2,??_pipe_write+2
  2773  000F40  CFDD F122          	movff	postdec2,??_pipe_write+3
  2774  000F44  511F               	movf	??_pipe_write& (0+255),w,b
  2775  000F46  2521               	addwf	(??_pipe_write+2)& (0+255),w,b
  2776  000F48  6ED9               	movwf	fsr2l,c
  2777  000F4A  5120               	movf	(??_pipe_write+1)& (0+255),w,b
  2778  000F4C  2122               	addwfc	(??_pipe_write+3)& (0+255),w,b
  2779  000F4E  6EDA               	movwf	fsr2h,c
  2780  000F50  C11E  FFDF         	movff	pipe_write@data,indf2
  2781  000F54                     
  2782                           ; BSR set to: 1
  2783                           ;pipe.c: 26:  p->pos_write = (p->pos_write + 1) % p->buffer_size;
  2784  000F54  EE20 F006          	lfsr	2,6
  2785  000F58  511C               	movf	pipe_write@p& (0+255),w,b
  2786  000F5A  26D9               	addwf	fsr2l,f,c
  2787  000F5C  511D               	movf	(pipe_write@p+1)& (0+255),w,b
  2788  000F5E  22DA               	addwfc	fsr2h,f,c
  2789  000F60  CFDE F11F          	movff	postinc2,??_pipe_write
  2790  000F64  CFDD F120          	movff	postdec2,??_pipe_write+1
  2791  000F68  0E01               	movlw	1
  2792  000F6A  251F               	addwf	??_pipe_write& (0+255),w,b
  2793  000F6C  0100               	movlb	0	; () banked
  2794  000F6E  6F97               	movwf	___lwmod@dividend& (0+255),b
  2795  000F70  0E00               	movlw	0
  2796  000F72  0101               	movlb	1	; () banked
  2797  000F74  2120               	addwfc	(??_pipe_write+1)& (0+255),w,b
  2798  000F76  0100               	movlb	0	; () banked
  2799  000F78  6F98               	movwf	(___lwmod@dividend+1)& (0+255),b
  2800  000F7A  0101               	movlb	1	; () banked
  2801  000F7C  EE20 F002          	lfsr	2,2
  2802  000F80  511C               	movf	pipe_write@p& (0+255),w,b
  2803  000F82  26D9               	addwf	fsr2l,f,c
  2804  000F84  511D               	movf	(pipe_write@p+1)& (0+255),w,b
  2805  000F86  22DA               	addwfc	fsr2h,f,c
  2806  000F88  CFDE F099          	movff	postinc2,___lwmod@divisor
  2807  000F8C  CFDD F09A          	movff	postdec2,___lwmod@divisor+1
  2808  000F90  EC84  F009         	call	___lwmod	;wreg free
  2809  000F94  0101               	movlb	1	; () banked
  2810  000F96  EE20 F006          	lfsr	2,6
  2811  000F9A  511C               	movf	pipe_write@p& (0+255),w,b
  2812  000F9C  26D9               	addwf	fsr2l,f,c
  2813  000F9E  511D               	movf	(pipe_write@p+1)& (0+255),w,b
  2814  000FA0  22DA               	addwfc	fsr2h,f,c
  2815  000FA2  0100               	movlb	0	; () banked
  2816  000FA4  C097  FFDE         	movff	?___lwmod,postinc2
  2817  000FA8  C098  FFDD         	movff	?___lwmod+1,postdec2
  2818  000FAC                     
  2819                           ; BSR set to: 0
  2820                           ;pipe.c: 27:  INTCONbits.GIE = 1;
  2821  000FAC  8EF2               	bsf	242,7,c	;volatile
  2822  000FAE                     
  2823                           ; BSR set to: 0
  2824  000FAE  0012               	return		;funcret
  2825  000FB0                     __end_of_pipe_write:
  2826                           	callstack 0
  2827                           
  2828 ;; *************** function ___lwmod *****************
  2829 ;; Defined at:
  2830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  dividend        2   23[BANK0 ] unsigned int 
  2833 ;;  divisor         2   25[BANK0 ] unsigned int 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  counter         1   27[BANK0 ] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2   23[BANK0 ] unsigned int 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2845 ;;      Params:         0       4       0       0       0       0       0
  2846 ;;      Locals:         0       1       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0
  2848 ;;      Totals:         0       5       0       0       0       0       0
  2849 ;;Total ram usage:        5 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    4
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_sem_wait
  2856 ;;		_sem_post
  2857 ;;		_pipe_read
  2858 ;;		_pipe_write
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text19
  2863  001308                     __ptext19:
  2864                           	callstack 0
  2865  001308                     ___lwmod:
  2866                           	callstack 19
  2867  001308  0100               	movlb	0	; () banked
  2868  00130A  5199               	movf	___lwmod@divisor& (0+255),w,b
  2869  00130C  119A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  2870  00130E  B4D8               	btfsc	status,2,c
  2871  001310  EF8C  F009         	goto	i1u233_21
  2872  001314  EF8E  F009         	goto	i1u233_20
  2873  001318                     i1u233_21:
  2874  001318  EFB2  F009         	goto	i1l879
  2875  00131C                     i1u233_20:
  2876  00131C                     
  2877                           ; BSR set to: 0
  2878  00131C  0E01               	movlw	1
  2879  00131E  6F9B               	movwf	___lwmod@counter& (0+255),b
  2880  001320  EF96  F009         	goto	i1l3065
  2881  001324                     i1l3063:
  2882                           
  2883                           ; BSR set to: 0
  2884  001324  90D8               	bcf	status,0,c
  2885  001326  3799               	rlcf	___lwmod@divisor& (0+255),f,b
  2886  001328  379A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2887  00132A  2B9B               	incf	___lwmod@counter& (0+255),f,b
  2888  00132C                     i1l3065:
  2889                           
  2890                           ; BSR set to: 0
  2891  00132C  AF9A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2892  00132E  EF9B  F009         	goto	i1u234_21
  2893  001332  EF9D  F009         	goto	i1u234_20
  2894  001336                     i1u234_21:
  2895  001336  EF92  F009         	goto	i1l3063
  2896  00133A                     i1u234_20:
  2897  00133A                     i1l3067:
  2898                           
  2899                           ; BSR set to: 0
  2900  00133A  5199               	movf	___lwmod@divisor& (0+255),w,b
  2901  00133C  5D97               	subwf	___lwmod@dividend& (0+255),w,b
  2902  00133E  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2903  001340  5998               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2904  001342  A0D8               	btfss	status,0,c
  2905  001344  EFA6  F009         	goto	i1u235_21
  2906  001348  EFA8  F009         	goto	i1u235_20
  2907  00134C                     i1u235_21:
  2908  00134C  EFAC  F009         	goto	i1l3071
  2909  001350                     i1u235_20:
  2910  001350                     
  2911                           ; BSR set to: 0
  2912  001350  5199               	movf	___lwmod@divisor& (0+255),w,b
  2913  001352  5F97               	subwf	___lwmod@dividend& (0+255),f,b
  2914  001354  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2915  001356  5B98               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2916  001358                     i1l3071:
  2917                           
  2918                           ; BSR set to: 0
  2919  001358  90D8               	bcf	status,0,c
  2920  00135A  339A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2921  00135C  3399               	rrcf	___lwmod@divisor& (0+255),f,b
  2922  00135E                     
  2923                           ; BSR set to: 0
  2924  00135E  2F9B               	decfsz	___lwmod@counter& (0+255),f,b
  2925  001360  EF9D  F009         	goto	i1l3067
  2926  001364                     i1l879:
  2927                           
  2928                           ; BSR set to: 0
  2929  001364  C097  F097         	movff	___lwmod@dividend,?___lwmod
  2930  001368  C098  F098         	movff	___lwmod@dividend+1,?___lwmod+1
  2931  00136C                     
  2932                           ; BSR set to: 0
  2933  00136C  0012               	return		;funcret
  2934  00136E                     __end_of___lwmod:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _task_2 *****************
  2938 ;; Defined at:
  2939 ;;		line 56 in file "tasks.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2953 ;;      Params:         0       0       0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    6
  2960 ;; This function calls:
  2961 ;;		_pipe_write
  2962 ;;		_sem_post
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text20
  2969  00152E                     __ptext20:
  2970                           	callstack 0
  2971  00152E                     _task_2:
  2972                           	callstack 19
  2973  00152E                     l168:
  2974                           
  2975                           ;tasks.c: 58:         if (PORTDbits.RD1 == 1) {
  2976  00152E  A283               	btfss	131,1,c	;volatile
  2977  001530  EF9C  F00A         	goto	u290_21
  2978  001534  EF9E  F00A         	goto	u290_20
  2979  001538                     u290_21:
  2980  001538  EF97  F00A         	goto	l168
  2981  00153C                     u290_20:
  2982  00153C                     
  2983                           ;tasks.c: 59:    PORTDbits.RD7 = 0;
  2984  00153C  9E83               	bcf	131,7,c	;volatile
  2985                           
  2986                           ;tasks.c: 60:    PORTBbits.RB5 = 0;
  2987  00153E  9A81               	bcf	129,5,c	;volatile
  2988                           
  2989                           ;tasks.c: 61:    PORTBbits.RB4 = 0;
  2990  001540  9881               	bcf	129,4,c	;volatile
  2991  001542                     
  2992                           ;tasks.c: 62:    pipe_write(&pipe_igni, 0);
  2993  001542  0EAD               	movlw	low _pipe_igni
  2994  001544  0101               	movlb	1	; () banked
  2995  001546  6F1C               	movwf	pipe_write@p& (0+255),b
  2996  001548  0E00               	movlw	high _pipe_igni
  2997  00154A  6F1D               	movwf	(pipe_write@p+1)& (0+255),b
  2998  00154C  0E00               	movlw	0
  2999  00154E  6F1E               	movwf	pipe_write@data& (0+255),b
  3000  001550  EC8E  F007         	call	_pipe_write	;wreg free
  3001  001554                     
  3002                           ;tasks.c: 63:    sem_post(&sem_igni);
  3003  001554  0E15               	movlw	low _sem_igni
  3004  001556  0101               	movlb	1	; () banked
  3005  001558  6F1C               	movwf	sem_post@sem& (0+255),b
  3006  00155A  0E00               	movlw	high _sem_igni
  3007  00155C  6F1D               	movwf	(sem_post@sem+1)& (0+255),b
  3008  00155E  EC7D  F005         	call	_sem_post	;wreg free
  3009  001562  EF97  F00A         	goto	l168
  3010  001566  0012               	return		;funcret
  3011  001568                     __end_of_task_2:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _sem_post *****************
  3015 ;; Defined at:
  3016 ;;		line 35 in file "semaforo.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  sem             2   28[BANK1 ] PTR struct semaforo
  3019 ;;		 -> sem_motor(18), sem_igni(18), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3031 ;;      Params:         0       0       2       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       5       0       0       0       0
  3034 ;;      Totals:         0       0       7       0       0       0       0
  3035 ;;Total ram usage:        7 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    5
  3038 ;; This function calls:
  3039 ;;		___lwmod
  3040 ;;		i1___wmul
  3041 ;; This function is called by:
  3042 ;;		_task_2
  3043 ;;		_task_6
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text21
  3048  000AFA                     __ptext21:
  3049                           	callstack 0
  3050  000AFA                     _sem_post:
  3051                           	callstack 19
  3052  000AFA                     
  3053                           ;semaforo.c: 36:  INTCONbits.GIE = 0;
  3054  000AFA  9EF2               	bcf	242,7,c	;volatile
  3055  000AFC                     
  3056                           ;semaforo.c: 37:  if (sem->contadorSem < 0) {
  3057  000AFC  C11C  FFD9         	movff	sem_post@sem,fsr2l
  3058  000B00  C11D  FFDA         	movff	sem_post@sem+1,fsr2h
  3059  000B04  0E01               	movlw	1
  3060  000B06  BEDB               	btfsc	plusw2,7,c
  3061  000B08  EF8A  F005         	goto	i1u278_20
  3062  000B0C  EF88  F005         	goto	i1u278_21
  3063  000B10                     i1u278_21:
  3064  000B10  EFE0  F005         	goto	i1l3517
  3065  000B14                     i1u278_20:
  3066  000B14                     
  3067                           ;semaforo.c: 38:   f_aptos.ready_queue[sem->fila.tasks[sem->fila.next_to_free]].task_sta
      +                          te = READY;
  3068  000B14  0101               	movlb	1	; () banked
  3069  000B16  EE20 F010          	lfsr	2,16
  3070  000B1A  511C               	movf	sem_post@sem& (0+255),w,b
  3071  000B1C  26D9               	addwf	fsr2l,f,c
  3072  000B1E  511D               	movf	(sem_post@sem+1)& (0+255),w,b
  3073  000B20  22DA               	addwfc	fsr2h,f,c
  3074  000B22  CFDE F11E          	movff	postinc2,??_sem_post
  3075  000B26  CFDD F11F          	movff	postdec2,??_sem_post+1
  3076  000B2A  90D8               	bcf	status,0,c
  3077  000B2C  371E               	rlcf	??_sem_post& (0+255),f,b
  3078  000B2E  371F               	rlcf	(??_sem_post+1)& (0+255),f,b
  3079  000B30  C11C  F120         	movff	sem_post@sem,??_sem_post+2
  3080  000B34  C11D  F121         	movff	sem_post@sem+1,??_sem_post+3
  3081  000B38  511E               	movf	??_sem_post& (0+255),w,b
  3082  000B3A  2720               	addwf	(??_sem_post+2)& (0+255),f,b
  3083  000B3C  511F               	movf	(??_sem_post+1)& (0+255),w,b
  3084  000B3E  2321               	addwfc	(??_sem_post+3)& (0+255),f,b
  3085  000B40  0E04               	movlw	4
  3086  000B42  2520               	addwf	(??_sem_post+2)& (0+255),w,b
  3087  000B44  6ED9               	movwf	fsr2l,c
  3088  000B46  0E00               	movlw	0
  3089  000B48  2121               	addwfc	(??_sem_post+3)& (0+255),w,b
  3090  000B4A  6EDA               	movwf	fsr2h,c
  3091  000B4C  CFDE F097          	movff	postinc2,i1___wmul@multiplier
  3092  000B50  CFDD F098          	movff	postdec2,i1___wmul@multiplier+1
  3093  000B54  0E00               	movlw	0
  3094  000B56  0100               	movlb	0	; () banked
  3095  000B58  6F9A               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  3096  000B5A  0E4A               	movlw	74
  3097  000B5C  6F99               	movwf	i1___wmul@multiplicand& (0+255),b
  3098  000B5E  ECE2  F00A         	call	i1___wmul	;wreg free
  3099  000B62  0E7B               	movlw	low (_f_aptos+2)
  3100  000B64  0100               	movlb	0	; () banked
  3101  000B66  2597               	addwf	?i1___wmul& (0+255),w,b
  3102  000B68  6ED9               	movwf	fsr2l,c
  3103  000B6A  0E01               	movlw	high (_f_aptos+2)
  3104  000B6C  2198               	addwfc	(?i1___wmul+1)& (0+255),w,b
  3105  000B6E  6EDA               	movwf	fsr2h,c
  3106  000B70  0E00               	movlw	0
  3107  000B72  6EDF               	movwf	indf2,c
  3108  000B74                     
  3109                           ; BSR set to: 0
  3110                           ;semaforo.c: 39:   sem->fila.next_to_free = (sem->fila.next_to_free + 1) % (6 - 1);
  3111  000B74  0101               	movlb	1	; () banked
  3112  000B76  EE20 F010          	lfsr	2,16
  3113  000B7A  511C               	movf	sem_post@sem& (0+255),w,b
  3114  000B7C  26D9               	addwf	fsr2l,f,c
  3115  000B7E  511D               	movf	(sem_post@sem+1)& (0+255),w,b
  3116  000B80  22DA               	addwfc	fsr2h,f,c
  3117  000B82  CFDE F11E          	movff	postinc2,??_sem_post
  3118  000B86  CFDD F11F          	movff	postdec2,??_sem_post+1
  3119  000B8A  0E01               	movlw	1
  3120  000B8C  251E               	addwf	??_sem_post& (0+255),w,b
  3121  000B8E  0100               	movlb	0	; () banked
  3122  000B90  6F97               	movwf	___lwmod@dividend& (0+255),b
  3123  000B92  0E00               	movlw	0
  3124  000B94  0101               	movlb	1	; () banked
  3125  000B96  211F               	addwfc	(??_sem_post+1)& (0+255),w,b
  3126  000B98  0100               	movlb	0	; () banked
  3127  000B9A  6F98               	movwf	(___lwmod@dividend+1)& (0+255),b
  3128  000B9C  0E00               	movlw	0
  3129  000B9E  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
  3130  000BA0  0E05               	movlw	5
  3131  000BA2  6F99               	movwf	___lwmod@divisor& (0+255),b
  3132  000BA4  EC84  F009         	call	___lwmod	;wreg free
  3133  000BA8  0101               	movlb	1	; () banked
  3134  000BAA  EE20 F010          	lfsr	2,16
  3135  000BAE  511C               	movf	sem_post@sem& (0+255),w,b
  3136  000BB0  26D9               	addwf	fsr2l,f,c
  3137  000BB2  511D               	movf	(sem_post@sem+1)& (0+255),w,b
  3138  000BB4  22DA               	addwfc	fsr2h,f,c
  3139  000BB6  0100               	movlb	0	; () banked
  3140  000BB8  C097  FFDE         	movff	?___lwmod,postinc2
  3141  000BBC  C098  FFDD         	movff	?___lwmod+1,postdec2
  3142  000BC0                     i1l3517:
  3143                           
  3144                           ;semaforo.c: 41:  if(sem->contadorSem < sem->total_tasks)
  3145  000BC0  0101               	movlb	1	; () banked
  3146  000BC2  EE20 F002          	lfsr	2,2
  3147  000BC6  511C               	movf	sem_post@sem& (0+255),w,b
  3148  000BC8  26D9               	addwf	fsr2l,f,c
  3149  000BCA  511D               	movf	(sem_post@sem+1)& (0+255),w,b
  3150  000BCC  22DA               	addwfc	fsr2h,f,c
  3151  000BCE  C11C  FFE1         	movff	sem_post@sem,fsr1l
  3152  000BD2  C11D  FFE2         	movff	sem_post@sem+1,fsr1h
  3153  000BD6  50DE               	movf	postinc2,w,c
  3154  000BD8  5CE6               	subwf	postinc1,w,c
  3155  000BDA  50E6               	movf	postinc1,w,c
  3156  000BDC  0A80               	xorlw	128
  3157  000BDE  6F22               	movwf	(??_sem_post+4)& (0+255),b
  3158  000BE0  50DE               	movf	postinc2,w,c
  3159  000BE2  0A80               	xorlw	128
  3160  000BE4  5922               	subwfb	(??_sem_post+4)& (0+255),w,b
  3161  000BE6  B0D8               	btfsc	status,0,c
  3162  000BE8  EFF8  F005         	goto	i1u279_21
  3163  000BEC  EFFA  F005         	goto	i1u279_20
  3164  000BF0                     i1u279_21:
  3165  000BF0  EF01  F006         	goto	i1l3521
  3166  000BF4                     i1u279_20:
  3167  000BF4                     
  3168                           ; BSR set to: 1
  3169                           ;semaforo.c: 42:   sem->contadorSem++;
  3170  000BF4  C11C  FFD9         	movff	sem_post@sem,fsr2l
  3171  000BF8  C11D  FFDA         	movff	sem_post@sem+1,fsr2h
  3172  000BFC  2ADE               	incf	postinc2,f,c
  3173  000BFE  0E00               	movlw	0
  3174  000C00  22DD               	addwfc	postdec2,f,c
  3175  000C02                     i1l3521:
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;semaforo.c: 43:  INTCONbits.GIE = 1;
  3179  000C02  8EF2               	bsf	242,7,c	;volatile
  3180  000C04                     
  3181                           ; BSR set to: 1
  3182  000C04  0012               	return		;funcret
  3183  000C06                     __end_of_sem_post:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _task_3 *****************
  3187 ;; Defined at:
  3188 ;;		line 69 in file "tasks.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3202 ;;      Params:         0       0       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    6
  3209 ;; This function calls:
  3210 ;;		_pipe_read
  3211 ;;		_pipe_write
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text22
  3218  000DBA                     __ptext22:
  3219                           	callstack 0
  3220  000DBA                     _task_3:
  3221                           	callstack 19
  3222  000DBA                     l175:
  3223  000DBA                     
  3224                           ;tasks.c: 71:   if(pipe_read(&pipe_igni)){
  3225  000DBA  0EAD               	movlw	low _pipe_igni
  3226  000DBC  6E3C               	movwf	pipe_read@p^0,c
  3227  000DBE  0E00               	movlw	high _pipe_igni
  3228  000DC0  6E3D               	movwf	(pipe_read@p+1)^0,c
  3229  000DC2  EC20  F008         	call	_pipe_read	;wreg free
  3230  000DC6  0900               	iorlw	0
  3231  000DC8  B4D8               	btfsc	status,2,c
  3232  000DCA  EFE9  F006         	goto	u291_21
  3233  000DCE  EFEB  F006         	goto	u291_20
  3234  000DD2                     u291_21:
  3235  000DD2  EF2D  F007         	goto	l176
  3236  000DD6                     u291_20:
  3237  000DD6                     
  3238                           ;tasks.c: 72:    if((PORTBbits.RB7 == 1 && PORTDbits.RD3 == 0) || (PORTBbits.RB6 == 1 &&
      +                           PORTDbits.RD2 == 0) || pipe_read(&pipe_motor_error)){
  3239  000DD6  AE81               	btfss	129,7,c	;volatile
  3240  000DD8  EFF0  F006         	goto	u292_21
  3241  000DDC  EFF2  F006         	goto	u292_20
  3242  000DE0                     u292_21:
  3243  000DE0  EFF9  F006         	goto	l181
  3244  000DE4                     u292_20:
  3245  000DE4  A683               	btfss	131,3,c	;volatile
  3246  000DE6  EFF7  F006         	goto	u293_21
  3247  000DEA  EFF9  F006         	goto	u293_20
  3248  000DEE                     u293_21:
  3249  000DEE  EF15  F007         	goto	l179
  3250  000DF2                     u293_20:
  3251  000DF2                     l181:
  3252  000DF2  AC81               	btfss	129,6,c	;volatile
  3253  000DF4  EFFE  F006         	goto	u294_21
  3254  000DF8  EF00  F007         	goto	u294_20
  3255  000DFC                     u294_21:
  3256  000DFC  EF07  F007         	goto	l3651
  3257  000E00                     u294_20:
  3258  000E00  A483               	btfss	131,2,c	;volatile
  3259  000E02  EF05  F007         	goto	u295_21
  3260  000E06  EF07  F007         	goto	u295_20
  3261  000E0A                     u295_21:
  3262  000E0A  EF15  F007         	goto	l179
  3263  000E0E                     u295_20:
  3264  000E0E                     l3651:
  3265  000E0E  0E9D               	movlw	low _pipe_motor_error
  3266  000E10  6E3C               	movwf	pipe_read@p^0,c
  3267  000E12  0E00               	movlw	high _pipe_motor_error
  3268  000E14  6E3D               	movwf	(pipe_read@p+1)^0,c
  3269  000E16  EC20  F008         	call	_pipe_read	;wreg free
  3270  000E1A  0900               	iorlw	0
  3271  000E1C  B4D8               	btfsc	status,2,c
  3272  000E1E  EF13  F007         	goto	u296_21
  3273  000E22  EF15  F007         	goto	u296_20
  3274  000E26                     u296_21:
  3275  000E26  EF21  F007         	goto	l177
  3276  000E2A                     u296_20:
  3277  000E2A                     l179:
  3278                           
  3279                           ;tasks.c: 73:     PORTDbits.RD4 = 1;
  3280  000E2A  8883               	bsf	131,4,c	;volatile
  3281  000E2C                     l3653:
  3282                           
  3283                           ;tasks.c: 74:     pipe_write(&pipe_error, 1);
  3284  000E2C  0EA5               	movlw	low _pipe_error
  3285  000E2E  0101               	movlb	1	; () banked
  3286  000E30  6F1C               	movwf	pipe_write@p& (0+255),b
  3287  000E32  0E00               	movlw	high _pipe_error
  3288  000E34  6F1D               	movwf	(pipe_write@p+1)& (0+255),b
  3289  000E36  0E01               	movlw	1
  3290  000E38  6F1E               	movwf	pipe_write@data& (0+255),b
  3291  000E3A  EC8E  F007         	call	_pipe_write	;wreg free
  3292                           
  3293                           ;tasks.c: 75:    }
  3294  000E3E  EFDD  F006         	goto	l175
  3295  000E42                     l177:
  3296                           
  3297                           ;tasks.c: 77:     PORTDbits.RD4 = 0;
  3298  000E42  9883               	bcf	131,4,c	;volatile
  3299  000E44                     l3655:
  3300                           
  3301                           ;tasks.c: 78:     pipe_write(&pipe_error, 0);
  3302  000E44  0EA5               	movlw	low _pipe_error
  3303  000E46  0101               	movlb	1	; () banked
  3304  000E48  6F1C               	movwf	pipe_write@p& (0+255),b
  3305  000E4A  0E00               	movlw	high _pipe_error
  3306  000E4C  6F1D               	movwf	(pipe_write@p+1)& (0+255),b
  3307  000E4E  0E00               	movlw	0
  3308  000E50  6F1E               	movwf	pipe_write@data& (0+255),b
  3309  000E52  EC8E  F007         	call	_pipe_write	;wreg free
  3310  000E56  EFDD  F006         	goto	l175
  3311  000E5A                     l176:
  3312                           
  3313                           ;tasks.c: 82:    if(PORTBbits.RB7 == 1 || PORTBbits.RB6 == 1){
  3314  000E5A  BE81               	btfsc	129,7,c	;volatile
  3315  000E5C  EF32  F007         	goto	u297_21
  3316  000E60  EF34  F007         	goto	u297_20
  3317  000E64                     u297_21:
  3318  000E64  EF3B  F007         	goto	l188
  3319  000E68                     u297_20:
  3320  000E68  AC81               	btfss	129,6,c	;volatile
  3321  000E6A  EF39  F007         	goto	u298_21
  3322  000E6E  EF3B  F007         	goto	u298_20
  3323  000E72                     u298_21:
  3324  000E72  EF3E  F007         	goto	l186
  3325  000E76                     u298_20:
  3326  000E76                     l188:
  3327                           
  3328                           ;tasks.c: 83:     PORTDbits.RD4 = 1;
  3329  000E76  8883               	bsf	131,4,c	;volatile
  3330  000E78  EF16  F007         	goto	l3653
  3331  000E7C                     l186:
  3332                           
  3333                           ;tasks.c: 87:     PORTDbits.RD4 = 0;
  3334  000E7C  9883               	bcf	131,4,c	;volatile
  3335  000E7E  EF22  F007         	goto	l3655
  3336  000E82  0012               	return		;funcret
  3337  000E84                     __end_of_task_3:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _pipe_read *****************
  3341 ;; Defined at:
  3342 ;;		line 13 in file "pipe.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  p               2   21[COMRAM] PTR struct pipe
  3345 ;;		 -> pipe_motor_error(8), pipe_igni(8), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  data            1   27[COMRAM] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      unsigned char 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3357 ;;      Params:         2       0       0       0       0       0       0
  3358 ;;      Locals:         1       0       0       0       0       0       0
  3359 ;;      Temps:          4       0       0       0       0       0       0
  3360 ;;      Totals:         7       0       0       0       0       0       0
  3361 ;;Total ram usage:        7 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    5
  3364 ;; This function calls:
  3365 ;;		___lwmod
  3366 ;; This function is called by:
  3367 ;;		_task_3
  3368 ;;		_task_5
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text23
  3373  001040                     __ptext23:
  3374                           	callstack 0
  3375  001040                     _pipe_read:
  3376                           	callstack 19
  3377  001040                     
  3378                           ;pipe.c: 14:  INTCONbits.GIE = 0;
  3379  001040  9EF2               	bcf	242,7,c	;volatile
  3380  001042                     
  3381                           ;pipe.c: 15:  u_char data = p->buffer[p->pos_read];
  3382  001042  EE20 F004          	lfsr	2,4
  3383  001046  503C               	movf	pipe_read@p^0,w,c
  3384  001048  26D9               	addwf	fsr2l,f,c
  3385  00104A  503D               	movf	(pipe_read@p+1)^0,w,c
  3386  00104C  22DA               	addwfc	fsr2h,f,c
  3387  00104E  CFDE F03E          	movff	postinc2,??_pipe_read
  3388  001052  CFDD F03F          	movff	postdec2,??_pipe_read+1
  3389  001056  C03C  FFD9         	movff	pipe_read@p,fsr2l
  3390  00105A  C03D  FFDA         	movff	pipe_read@p+1,fsr2h
  3391  00105E  CFDE F040          	movff	postinc2,??_pipe_read+2
  3392  001062  CFDD F041          	movff	postdec2,??_pipe_read+3
  3393  001066  503E               	movf	??_pipe_read^0,w,c
  3394  001068  2440               	addwf	(??_pipe_read+2)^0,w,c
  3395  00106A  6ED9               	movwf	fsr2l,c
  3396  00106C  503F               	movf	(??_pipe_read+1)^0,w,c
  3397  00106E  2041               	addwfc	(??_pipe_read+3)^0,w,c
  3398  001070  6EDA               	movwf	fsr2h,c
  3399  001072  50DF               	movf	indf2,w,c
  3400  001074  6E42               	movwf	pipe_read@data^0,c
  3401  001076                     
  3402                           ;pipe.c: 16:  p->pos_read = (p->pos_read + 1) % (p->buffer_size);
  3403  001076  EE20 F004          	lfsr	2,4
  3404  00107A  503C               	movf	pipe_read@p^0,w,c
  3405  00107C  26D9               	addwf	fsr2l,f,c
  3406  00107E  503D               	movf	(pipe_read@p+1)^0,w,c
  3407  001080  22DA               	addwfc	fsr2h,f,c
  3408  001082  CFDE F03E          	movff	postinc2,??_pipe_read
  3409  001086  CFDD F03F          	movff	postdec2,??_pipe_read+1
  3410  00108A  0E01               	movlw	1
  3411  00108C  243E               	addwf	??_pipe_read^0,w,c
  3412  00108E  0100               	movlb	0	; () banked
  3413  001090  6F97               	movwf	___lwmod@dividend& (0+255),b
  3414  001092  0E00               	movlw	0
  3415  001094  203F               	addwfc	(??_pipe_read+1)^0,w,c
  3416  001096  6F98               	movwf	(___lwmod@dividend+1)& (0+255),b
  3417  001098  EE20 F002          	lfsr	2,2
  3418  00109C  503C               	movf	pipe_read@p^0,w,c
  3419  00109E  26D9               	addwf	fsr2l,f,c
  3420  0010A0  503D               	movf	(pipe_read@p+1)^0,w,c
  3421  0010A2  22DA               	addwfc	fsr2h,f,c
  3422  0010A4  CFDE F099          	movff	postinc2,___lwmod@divisor
  3423  0010A8  CFDD F09A          	movff	postdec2,___lwmod@divisor+1
  3424  0010AC  EC84  F009         	call	___lwmod	;wreg free
  3425  0010B0  EE20 F004          	lfsr	2,4
  3426  0010B4  503C               	movf	pipe_read@p^0,w,c
  3427  0010B6  26D9               	addwf	fsr2l,f,c
  3428  0010B8  503D               	movf	(pipe_read@p+1)^0,w,c
  3429  0010BA  22DA               	addwfc	fsr2h,f,c
  3430  0010BC  0100               	movlb	0	; () banked
  3431  0010BE  C097  FFDE         	movff	?___lwmod,postinc2
  3432  0010C2  C098  FFDD         	movff	?___lwmod+1,postdec2
  3433  0010C6                     
  3434                           ; BSR set to: 0
  3435                           ;pipe.c: 17:  INTCONbits.GIE = 1;
  3436  0010C6  8EF2               	bsf	242,7,c	;volatile
  3437  0010C8                     
  3438                           ; BSR set to: 0
  3439                           ;pipe.c: 18:  return data;
  3440  0010C8  5042               	movf	pipe_read@data^0,w,c
  3441  0010CA                     
  3442                           ; BSR set to: 0
  3443  0010CA  0012               	return		;funcret
  3444  0010CC                     __end_of_pipe_read:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _task_4 *****************
  3448 ;; Defined at:
  3449 ;;		line 95 in file "tasks.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		None
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3463 ;;      Params:         0       0       0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0
  3466 ;;      Totals:         0       0       0       0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    4
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text24
  3478  001468                     __ptext24:
  3479                           	callstack 0
  3480  001468                     _task_4:
  3481                           	callstack 21
  3482  001468                     l195:
  3483                           
  3484                           ;tasks.c: 97:   if (PORTDbits.RD3 == 0)
  3485  001468  B683               	btfsc	131,3,c	;volatile
  3486  00146A  EF39  F00A         	goto	u49_21
  3487  00146E  EF3B  F00A         	goto	u49_20
  3488  001472                     u49_21:
  3489  001472  EF3C  F00A         	goto	l196
  3490  001476                     u49_20:
  3491  001476                     
  3492                           ;tasks.c: 98:    PORTDbits.RD5 = 1;
  3493  001476  8A83               	bsf	131,5,c	;volatile
  3494  001478                     l196:
  3495                           
  3496                           ;tasks.c: 99:   if (PORTDbits.RD3 == 1)
  3497  001478  A683               	btfss	131,3,c	;volatile
  3498  00147A  EF41  F00A         	goto	u50_21
  3499  00147E  EF43  F00A         	goto	u50_20
  3500  001482                     u50_21:
  3501  001482  EF44  F00A         	goto	l197
  3502  001486                     u50_20:
  3503  001486                     
  3504                           ;tasks.c: 100:    PORTDbits.RD5 = 0;
  3505  001486  9A83               	bcf	131,5,c	;volatile
  3506  001488                     l197:
  3507                           
  3508                           ;tasks.c: 101:   if (PORTDbits.RD2 == 0)
  3509  001488  B483               	btfsc	131,2,c	;volatile
  3510  00148A  EF49  F00A         	goto	u51_21
  3511  00148E  EF4B  F00A         	goto	u51_20
  3512  001492                     u51_21:
  3513  001492  EF4C  F00A         	goto	l198
  3514  001496                     u51_20:
  3515  001496                     
  3516                           ;tasks.c: 102:    PORTDbits.RD6 = 1;
  3517  001496  8C83               	bsf	131,6,c	;volatile
  3518  001498                     l198:
  3519                           
  3520                           ;tasks.c: 103:   if (PORTDbits.RD2 == 1)
  3521  001498  A483               	btfss	131,2,c	;volatile
  3522  00149A  EF51  F00A         	goto	u52_21
  3523  00149E  EF53  F00A         	goto	u52_20
  3524  0014A2                     u52_21:
  3525  0014A2  EF34  F00A         	goto	l195
  3526  0014A6                     u52_20:
  3527  0014A6                     
  3528                           ;tasks.c: 104:    PORTDbits.RD6 = 0;
  3529  0014A6  9C83               	bcf	131,6,c	;volatile
  3530  0014A8  EF34  F00A         	goto	l195
  3531  0014AC  0012               	return		;funcret
  3532  0014AE                     __end_of_task_4:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _task_5 *****************
  3536 ;; Defined at:
  3537 ;;		line 109 in file "tasks.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3551 ;;      Params:         0       0       0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    8
  3558 ;; This function calls:
  3559 ;;		_pipe_read
  3560 ;;		_pipe_write
  3561 ;;		_sem_wait
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text25
  3568  000FB0                     __ptext25:
  3569                           	callstack 0
  3570  000FB0                     _task_5:
  3571                           	callstack 17
  3572  000FB0                     l205:
  3573                           
  3574                           ;tasks.c: 111:   if (PORTBbits.RB7 == 1 || PORTBbits.RB6 == 1){
  3575  000FB0  BE81               	btfsc	129,7,c	;volatile
  3576  000FB2  EFDD  F007         	goto	u299_21
  3577  000FB6  EFDF  F007         	goto	u299_20
  3578  000FBA                     u299_21:
  3579  000FBA  EFE6  F007         	goto	l3665
  3580  000FBE                     u299_20:
  3581  000FBE  AC81               	btfss	129,6,c	;volatile
  3582  000FC0  EFE4  F007         	goto	u300_21
  3583  000FC4  EFE6  F007         	goto	u300_20
  3584  000FC8                     u300_21:
  3585  000FC8  EFD8  F007         	goto	l205
  3586  000FCC                     u300_20:
  3587  000FCC                     l3665:
  3588                           
  3589                           ;tasks.c: 112:    if (pipe_read(&pipe_igni)){
  3590  000FCC  0EAD               	movlw	low _pipe_igni
  3591  000FCE  6E3C               	movwf	pipe_read@p^0,c
  3592  000FD0  0E00               	movlw	high _pipe_igni
  3593  000FD2  6E3D               	movwf	(pipe_read@p+1)^0,c
  3594  000FD4  EC20  F008         	call	_pipe_read	;wreg free
  3595  000FD8  0900               	iorlw	0
  3596  000FDA  B4D8               	btfsc	status,2,c
  3597  000FDC  EFF2  F007         	goto	u301_21
  3598  000FE0  EFF4  F007         	goto	u301_20
  3599  000FE4                     u301_21:
  3600  000FE4  EF12  F008         	goto	l3679
  3601  000FE8                     u301_20:
  3602  000FE8                     
  3603                           ;tasks.c: 113:     if (PORTBbits.RB7 == 1){
  3604  000FE8  AE81               	btfss	129,7,c	;volatile
  3605  000FEA  EFF9  F007         	goto	u302_21
  3606  000FEE  EFFB  F007         	goto	u302_20
  3607  000FF2                     u302_21:
  3608  000FF2  EF02  F008         	goto	l3673
  3609  000FF6                     u302_20:
  3610  000FF6                     
  3611                           ;tasks.c: 114:      PORTBbits.RB5 = 1;
  3612  000FF6  8A81               	bsf	129,5,c	;volatile
  3613  000FF8                     
  3614                           ;tasks.c: 115:      sem_wait(&sem_motor);
  3615  000FF8  0E03               	movlw	low _sem_motor
  3616  000FFA  6E44               	movwf	sem_wait@sem^0,c
  3617  000FFC  0E00               	movlw	high _sem_motor
  3618  000FFE  6E45               	movwf	(sem_wait@sem+1)^0,c
  3619  001000  EC09  F000         	call	_sem_wait	;wreg free
  3620  001004                     l3673:
  3621                           
  3622                           ;tasks.c: 117:     if (PORTBbits.RB6 == 1){
  3623  001004  AC81               	btfss	129,6,c	;volatile
  3624  001006  EF07  F008         	goto	u303_21
  3625  00100A  EF09  F008         	goto	u303_20
  3626  00100E                     u303_21:
  3627  00100E  EF1D  F008         	goto	l206
  3628  001012                     u303_20:
  3629  001012                     
  3630                           ;tasks.c: 118:      PORTBbits.RB4 = 1;
  3631  001012  8881               	bsf	129,4,c	;volatile
  3632  001014                     l3677:
  3633                           
  3634                           ;tasks.c: 119:      sem_wait(&sem_motor);
  3635  001014  0E03               	movlw	low _sem_motor
  3636  001016  6E44               	movwf	sem_wait@sem^0,c
  3637  001018  0E00               	movlw	high _sem_motor
  3638  00101A  6E45               	movwf	(sem_wait@sem+1)^0,c
  3639  00101C  EC09  F000         	call	_sem_wait	;wreg free
  3640  001020  EFD8  F007         	goto	l205
  3641  001024                     l3679:
  3642                           
  3643                           ;tasks.c: 123:     pipe_write(&pipe_motor_error, 1);
  3644  001024  0E9D               	movlw	low _pipe_motor_error
  3645  001026  0101               	movlb	1	; () banked
  3646  001028  6F1C               	movwf	pipe_write@p& (0+255),b
  3647  00102A  0E00               	movlw	high _pipe_motor_error
  3648  00102C  6F1D               	movwf	(pipe_write@p+1)& (0+255),b
  3649  00102E  0E01               	movlw	1
  3650  001030  6F1E               	movwf	pipe_write@data& (0+255),b
  3651  001032  EC8E  F007         	call	_pipe_write	;wreg free
  3652  001036  EF0A  F008         	goto	l3677
  3653  00103A                     l206:
  3654  00103A  EFD8  F007         	goto	l205
  3655  00103E  0012               	return		;funcret
  3656  001040                     __end_of_task_5:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _task_6 *****************
  3660 ;; Defined at:
  3661 ;;		line 131 in file "tasks.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3675 ;;      Params:         0       0       0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0
  3678 ;;      Totals:         0       0       0       0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    6
  3682 ;; This function calls:
  3683 ;;		_pipe_write
  3684 ;;		_sem_post
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text26
  3691  0014AE                     __ptext26:
  3692                           	callstack 0
  3693  0014AE                     _task_6:
  3694                           	callstack 19
  3695  0014AE                     l218:
  3696                           
  3697                           ;tasks.c: 133:   if (PORTBbits.RB7 == 0 && PORTBbits.RB6 == 0){
  3698  0014AE  BE81               	btfsc	129,7,c	;volatile
  3699  0014B0  EF5C  F00A         	goto	u304_21
  3700  0014B4  EF5E  F00A         	goto	u304_20
  3701  0014B8                     u304_21:
  3702  0014B8  EF57  F00A         	goto	l218
  3703  0014BC                     u304_20:
  3704  0014BC  BC81               	btfsc	129,6,c	;volatile
  3705  0014BE  EF63  F00A         	goto	u305_21
  3706  0014C2  EF65  F00A         	goto	u305_20
  3707  0014C6                     u305_21:
  3708  0014C6  EF57  F00A         	goto	l218
  3709  0014CA                     u305_20:
  3710  0014CA                     
  3711                           ;tasks.c: 134:    PORTBbits.RB5 = 0;
  3712  0014CA  9A81               	bcf	129,5,c	;volatile
  3713                           
  3714                           ;tasks.c: 135:    PORTBbits.RB4 = 0;
  3715  0014CC  9881               	bcf	129,4,c	;volatile
  3716  0014CE                     
  3717                           ;tasks.c: 136:    pipe_write(&pipe_motor_error, 0);
  3718  0014CE  0E9D               	movlw	low _pipe_motor_error
  3719  0014D0  0101               	movlb	1	; () banked
  3720  0014D2  6F1C               	movwf	pipe_write@p& (0+255),b
  3721  0014D4  0E00               	movlw	high _pipe_motor_error
  3722  0014D6  6F1D               	movwf	(pipe_write@p+1)& (0+255),b
  3723  0014D8  0E00               	movlw	0
  3724  0014DA  6F1E               	movwf	pipe_write@data& (0+255),b
  3725  0014DC  EC8E  F007         	call	_pipe_write	;wreg free
  3726  0014E0                     
  3727                           ;tasks.c: 137:    sem_post(&sem_motor);
  3728  0014E0  0E03               	movlw	low _sem_motor
  3729  0014E2  0101               	movlb	1	; () banked
  3730  0014E4  6F1C               	movwf	sem_post@sem& (0+255),b
  3731  0014E6  0E00               	movlw	high _sem_motor
  3732  0014E8  6F1D               	movwf	(sem_post@sem+1)& (0+255),b
  3733  0014EA  EC7D  F005         	call	_sem_post	;wreg free
  3734  0014EE  EF57  F00A         	goto	l218
  3735  0014F2  0012               	return		;funcret
  3736  0014F4                     __end_of_task_6:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function _IRQ_Timer0 *****************
  3740 ;; Defined at:
  3741 ;;		line 32 in file "timer.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3755 ;;      Params:         0       0       0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0
  3757 ;;      Temps:          6       0       0       0       0       0       0
  3758 ;;      Totals:         6       0       0       0       0       0       0
  3759 ;;Total ram usage:        6 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    3
  3762 ;; This function calls:
  3763 ;;		_controle_delay
  3764 ;;		i2___wmul
  3765 ;;		i2_scheduler
  3766 ;; This function is called by:
  3767 ;;		Interrupt level 2
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	intcode
  3772  000008                     __pintcode:
  3773                           	callstack 0
  3774  000008                     _IRQ_Timer0:
  3775                           	callstack 17
  3776                           
  3777                           ;incstack = 0
  3778  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3779  00000A  ED9F  F002         	call	int_func,f	;refresh shadow registers
  3780                           
  3781                           	psect	intcode_body
  3782  00053E                     __pintcode_body:
  3783                           	callstack 17
  3784  00053E                     int_func:
  3785                           	callstack 17
  3786  00053E  0006               	pop		; remove dummy address from shadow register refresh
  3787  000540  CFD9 F037          	movff	fsr2l,??_IRQ_Timer0+2
  3788  000544  CFDA F038          	movff	fsr2h,??_IRQ_Timer0+3
  3789  000548  CFF3 F039          	movff	prodl,??_IRQ_Timer0+4
  3790  00054C  CFF4 F03A          	movff	prodh,??_IRQ_Timer0+5
  3791  000550                     
  3792                           ;timer.c: 33:  INTCONbits.GIE = 0;
  3793  000550  9EF2               	bcf	242,7,c	;volatile
  3794                           
  3795                           ;timer.c: 34:  T0CONbits.TMR0ON = 0;
  3796  000552  9ED5               	bcf	213,7,c	;volatile
  3797                           
  3798                           ;timer.c: 35:  if(INTCONbits.TMR0IF){
  3799  000554  A4F2               	btfss	242,2,c	;volatile
  3800  000556  EFAF  F002         	goto	i2u120_41
  3801  00055A  EFB1  F002         	goto	i2u120_40
  3802  00055E                     i2u120_41:
  3803  00055E  EFDF  F004         	goto	i2l2157
  3804  000562                     i2u120_40:
  3805  000562                     
  3806                           ;timer.c: 37:    quantum--;
  3807  000562  064A               	decf	_quantum^0,f,c
  3808  000564  A0D8               	btfss	status,0,c
  3809  000566  064B               	decf	(_quantum+1)^0,f,c
  3810  000568                     
  3811                           ;timer.c: 38:    if(quantum == 0){
  3812  000568  504A               	movf	_quantum^0,w,c
  3813  00056A  104B               	iorwf	(_quantum+1)^0,w,c
  3814  00056C  A4D8               	btfss	status,2,c
  3815  00056E  EFBB  F002         	goto	i2u121_41
  3816  000572  EFBD  F002         	goto	i2u121_40
  3817  000576                     i2u121_41:
  3818  000576  EFD9  F004         	goto	i2l2149
  3819  00057A                     i2u121_40:
  3820  00057A                     
  3821                           ;timer.c: 39:     { index = 0; f_aptos.ready_queue[f_aptos.task_running].task_state = RE
      +                          ADY; f_aptos.ready_queue[f_aptos.task_running].w_reg = WREG; f_aptos.ready_queue[f_aptos
      +                          .task_running].bsr_reg = BSR; f_aptos.ready_queue[f_aptos.task_running].status_reg = STA
      +                          TUS; while (STKPTR) { f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index].
      +                          TOSU_reg = TOSU; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index].TOSL_
      +                          reg = TOSL; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index].TOSH_reg =
      +                           TOSH; index++; __asm("POP"); } f_aptos.ready_queue[f_aptos.task_running].task_stack.siz
      +                          e = index; };
  3822  00057A  0E00               	movlw	0
  3823  00057C  6E02               	movwf	(_index+1)^0,c
  3824  00057E  0E00               	movlw	0
  3825  000580  6E01               	movwf	_index^0,c
  3826  000582  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3827  000586  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3828  00058A  0E00               	movlw	0
  3829  00058C  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3830  00058E  0E4A               	movlw	74
  3831  000590  6E29               	movwf	i2___wmul@multiplicand^0,c
  3832  000592  ECF6  F00A         	call	i2___wmul	;wreg free
  3833  000596  0E7B               	movlw	low (_f_aptos+2)
  3834  000598  2427               	addwf	?i2___wmul^0,w,c
  3835  00059A  6ED9               	movwf	fsr2l,c
  3836  00059C  0E01               	movlw	high (_f_aptos+2)
  3837  00059E  2028               	addwfc	(?i2___wmul+1)^0,w,c
  3838  0005A0  6EDA               	movwf	fsr2h,c
  3839  0005A2  0E00               	movlw	0
  3840  0005A4  6EDF               	movwf	indf2,c
  3841  0005A6  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3842  0005AA  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3843  0005AE  0E00               	movlw	0
  3844  0005B0  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3845  0005B2  0E4A               	movlw	74
  3846  0005B4  6E29               	movwf	i2___wmul@multiplicand^0,c
  3847  0005B6  ECF6  F00A         	call	i2___wmul	;wreg free
  3848  0005BA  0EBF               	movlw	low (_f_aptos+70)
  3849  0005BC  2427               	addwf	?i2___wmul^0,w,c
  3850  0005BE  6ED9               	movwf	fsr2l,c
  3851  0005C0  0E01               	movlw	high (_f_aptos+70)
  3852  0005C2  2028               	addwfc	(?i2___wmul+1)^0,w,c
  3853  0005C4  6EDA               	movwf	fsr2h,c
  3854  0005C6  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3855  0005CA  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3856  0005CE  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3857  0005D2  0E00               	movlw	0
  3858  0005D4  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3859  0005D6  0E4A               	movlw	74
  3860  0005D8  6E29               	movwf	i2___wmul@multiplicand^0,c
  3861  0005DA  ECF6  F00A         	call	i2___wmul	;wreg free
  3862  0005DE  0EBE               	movlw	low (_f_aptos+69)
  3863  0005E0  2427               	addwf	?i2___wmul^0,w,c
  3864  0005E2  6ED9               	movwf	fsr2l,c
  3865  0005E4  0E01               	movlw	high (_f_aptos+69)
  3866  0005E6  2028               	addwfc	(?i2___wmul+1)^0,w,c
  3867  0005E8  6EDA               	movwf	fsr2h,c
  3868  0005EA  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3869  0005EE  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3870  0005F2  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3871  0005F6  0E00               	movlw	0
  3872  0005F8  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3873  0005FA  0E4A               	movlw	74
  3874  0005FC  6E29               	movwf	i2___wmul@multiplicand^0,c
  3875  0005FE  ECF6  F00A         	call	i2___wmul	;wreg free
  3876  000602  0EC0               	movlw	low (_f_aptos+71)
  3877  000604  2427               	addwf	?i2___wmul^0,w,c
  3878  000606  6ED9               	movwf	fsr2l,c
  3879  000608  0E01               	movlw	high (_f_aptos+71)
  3880  00060A  2028               	addwfc	(?i2___wmul+1)^0,w,c
  3881  00060C  6EDA               	movwf	fsr2h,c
  3882  00060E  CFD8 FFDF          	movff	status,indf2	;volatile
  3883  000612  EF86  F003         	goto	i2l2127
  3884  000616                     i2l2123:
  3885  000616  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3886  00061A  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3887  00061E  0E00               	movlw	0
  3888  000620  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3889  000622  0E4A               	movlw	74
  3890  000624  6E29               	movwf	i2___wmul@multiplicand^0,c
  3891  000626  ECF6  F00A         	call	i2___wmul	;wreg free
  3892  00062A  0E79               	movlw	low _f_aptos
  3893  00062C  6E35               	movwf	??_IRQ_Timer0^0,c
  3894  00062E  0E01               	movlw	high _f_aptos
  3895  000630  6E36               	movwf	(??_IRQ_Timer0+1)^0,c
  3896  000632  0E07               	movlw	7
  3897  000634  2635               	addwf	??_IRQ_Timer0^0,f,c
  3898  000636  0E00               	movlw	0
  3899  000638  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3900  00063A  5027               	movf	?i2___wmul^0,w,c
  3901  00063C  2635               	addwf	??_IRQ_Timer0^0,f,c
  3902  00063E  5028               	movf	(?i2___wmul+1)^0,w,c
  3903  000640  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3904  000642  C001  F027         	movff	_index,i2___wmul@multiplier
  3905  000646  C002  F028         	movff	_index+1,i2___wmul@multiplier+1
  3906  00064A  0E00               	movlw	0
  3907  00064C  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3908  00064E  0E03               	movlw	3
  3909  000650  6E29               	movwf	i2___wmul@multiplicand^0,c
  3910  000652  ECF6  F00A         	call	i2___wmul	;wreg free
  3911  000656  5027               	movf	?i2___wmul^0,w,c
  3912  000658  2435               	addwf	??_IRQ_Timer0^0,w,c
  3913  00065A  6ED9               	movwf	fsr2l,c
  3914  00065C  5028               	movf	(?i2___wmul+1)^0,w,c
  3915  00065E  2036               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3916  000660  6EDA               	movwf	fsr2h,c
  3917  000662  CFFF FFDF          	movff	tosu,indf2	;volatile
  3918  000666  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3919  00066A  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3920  00066E  0E00               	movlw	0
  3921  000670  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3922  000672  0E4A               	movlw	74
  3923  000674  6E29               	movwf	i2___wmul@multiplicand^0,c
  3924  000676  ECF6  F00A         	call	i2___wmul	;wreg free
  3925  00067A  0E79               	movlw	low _f_aptos
  3926  00067C  6E35               	movwf	??_IRQ_Timer0^0,c
  3927  00067E  0E01               	movlw	high _f_aptos
  3928  000680  6E36               	movwf	(??_IRQ_Timer0+1)^0,c
  3929  000682  0E08               	movlw	8
  3930  000684  2635               	addwf	??_IRQ_Timer0^0,f,c
  3931  000686  0E00               	movlw	0
  3932  000688  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3933  00068A  5027               	movf	?i2___wmul^0,w,c
  3934  00068C  2635               	addwf	??_IRQ_Timer0^0,f,c
  3935  00068E  5028               	movf	(?i2___wmul+1)^0,w,c
  3936  000690  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3937  000692  C001  F027         	movff	_index,i2___wmul@multiplier
  3938  000696  C002  F028         	movff	_index+1,i2___wmul@multiplier+1
  3939  00069A  0E00               	movlw	0
  3940  00069C  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3941  00069E  0E03               	movlw	3
  3942  0006A0  6E29               	movwf	i2___wmul@multiplicand^0,c
  3943  0006A2  ECF6  F00A         	call	i2___wmul	;wreg free
  3944  0006A6  5027               	movf	?i2___wmul^0,w,c
  3945  0006A8  2435               	addwf	??_IRQ_Timer0^0,w,c
  3946  0006AA  6ED9               	movwf	fsr2l,c
  3947  0006AC  5028               	movf	(?i2___wmul+1)^0,w,c
  3948  0006AE  2036               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3949  0006B0  6EDA               	movwf	fsr2h,c
  3950  0006B2  CFFD FFDF          	movff	tosl,indf2	;volatile
  3951  0006B6  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3952  0006BA  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3953  0006BE  0E00               	movlw	0
  3954  0006C0  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3955  0006C2  0E4A               	movlw	74
  3956  0006C4  6E29               	movwf	i2___wmul@multiplicand^0,c
  3957  0006C6  ECF6  F00A         	call	i2___wmul	;wreg free
  3958  0006CA  0E79               	movlw	low _f_aptos
  3959  0006CC  6E35               	movwf	??_IRQ_Timer0^0,c
  3960  0006CE  0E01               	movlw	high _f_aptos
  3961  0006D0  6E36               	movwf	(??_IRQ_Timer0+1)^0,c
  3962  0006D2  0E09               	movlw	9
  3963  0006D4  2635               	addwf	??_IRQ_Timer0^0,f,c
  3964  0006D6  0E00               	movlw	0
  3965  0006D8  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3966  0006DA  5027               	movf	?i2___wmul^0,w,c
  3967  0006DC  2635               	addwf	??_IRQ_Timer0^0,f,c
  3968  0006DE  5028               	movf	(?i2___wmul+1)^0,w,c
  3969  0006E0  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3970  0006E2  C001  F027         	movff	_index,i2___wmul@multiplier
  3971  0006E6  C002  F028         	movff	_index+1,i2___wmul@multiplier+1
  3972  0006EA  0E00               	movlw	0
  3973  0006EC  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3974  0006EE  0E03               	movlw	3
  3975  0006F0  6E29               	movwf	i2___wmul@multiplicand^0,c
  3976  0006F2  ECF6  F00A         	call	i2___wmul	;wreg free
  3977  0006F6  5027               	movf	?i2___wmul^0,w,c
  3978  0006F8  2435               	addwf	??_IRQ_Timer0^0,w,c
  3979  0006FA  6ED9               	movwf	fsr2l,c
  3980  0006FC  5028               	movf	(?i2___wmul+1)^0,w,c
  3981  0006FE  2036               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3982  000700  6EDA               	movwf	fsr2h,c
  3983  000702  CFFE FFDF          	movff	tosh,indf2	;volatile
  3984  000706  4A01               	infsnz	_index^0,f,c
  3985  000708  2A02               	incf	(_index+1)^0,f,c
  3986  00070A  0006               	pop		;# 
  3987  00070C                     i2l2127:
  3988  00070C  50FC               	movf	252,w,c	;volatile
  3989  00070E  A4D8               	btfss	status,2,c
  3990  000710  EF8C  F003         	goto	i2u122_41
  3991  000714  EF8E  F003         	goto	i2u122_40
  3992  000718                     i2u122_41:
  3993  000718  EF0B  F003         	goto	i2l2123
  3994  00071C                     i2u122_40:
  3995  00071C  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  3996  000720  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  3997  000724  0E00               	movlw	0
  3998  000726  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  3999  000728  0E4A               	movlw	74
  4000  00072A  6E29               	movwf	i2___wmul@multiplicand^0,c
  4001  00072C  ECF6  F00A         	call	i2___wmul	;wreg free
  4002  000730  0EBC               	movlw	low (_f_aptos+67)
  4003  000732  2427               	addwf	?i2___wmul^0,w,c
  4004  000734  6ED9               	movwf	fsr2l,c
  4005  000736  0E01               	movlw	high (_f_aptos+67)
  4006  000738  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4007  00073A  6EDA               	movwf	fsr2h,c
  4008  00073C  C001  FFDE         	movff	_index,postinc2
  4009  000740  C002  FFDD         	movff	_index+1,postdec2
  4010                           
  4011                           ;timer.c: 40:     { f_aptos.task_running = scheduler(); STKPTR = 0; if (f_aptos.ready_qu
      +                          eue[f_aptos.task_running].task_stack.size == 0) { __asm("PUSH"); TOS = f_aptos.ready_que
      +                          ue[f_aptos.task_running].task_func; f_aptos.ready_queue[f_aptos.task_running].task_state
      +                           = RUNNING; } else { f_aptos.ready_queue[f_aptos.task_running].task_state = RUNNING; WRE
      +                          G = f_aptos.ready_queue[f_aptos.task_running].w_reg; BSR = f_aptos.ready_queue[f_aptos.t
      +                          ask_running].bsr_reg; STATUS = f_aptos.ready_queue[f_aptos.task_running].status_reg; ind
      +                          ex = f_aptos.ready_queue[f_aptos.task_running].task_stack.size; while(index) { __asm("PU
      +                          SH"); TOSU = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSU_
      +                          reg; TOSL = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSL_r
      +                          eg; TOSH = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSH_re
      +                          g; index--; } } };
  4012  000744  EC1B  F00B         	call	i2_scheduler	;wreg free
  4013  000748  C033  F381         	movff	?i2_scheduler,_f_aptos+520
  4014  00074C  C034  F382         	movff	?i2_scheduler+1,_f_aptos+521
  4015  000750  0E00               	movlw	0
  4016  000752  6EFC               	movwf	252,c	;volatile
  4017  000754  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4018  000758  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4019  00075C  0E00               	movlw	0
  4020  00075E  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4021  000760  0E4A               	movlw	74
  4022  000762  6E29               	movwf	i2___wmul@multiplicand^0,c
  4023  000764  ECF6  F00A         	call	i2___wmul	;wreg free
  4024  000768  0EBC               	movlw	low (_f_aptos+67)
  4025  00076A  2427               	addwf	?i2___wmul^0,w,c
  4026  00076C  6ED9               	movwf	fsr2l,c
  4027  00076E  0E01               	movlw	high (_f_aptos+67)
  4028  000770  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4029  000772  6EDA               	movwf	fsr2h,c
  4030  000774  50DE               	movf	postinc2,w,c
  4031  000776  10DE               	iorwf	postinc2,w,c
  4032  000778  A4D8               	btfss	status,2,c
  4033  00077A  EFC1  F003         	goto	i2u123_41
  4034  00077E  EFC3  F003         	goto	i2u123_40
  4035  000782                     i2u123_41:
  4036  000782  EFF1  F003         	goto	i2l2139
  4037  000786                     i2u123_40:
  4038  000786  0005               	push		;# 
  4039  000788  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4040  00078C  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4041  000790  0E00               	movlw	0
  4042  000792  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4043  000794  0E4A               	movlw	74
  4044  000796  6E29               	movwf	i2___wmul@multiplicand^0,c
  4045  000798  ECF6  F00A         	call	i2___wmul	;wreg free
  4046  00079C  0E7E               	movlw	low (_f_aptos+5)
  4047  00079E  2427               	addwf	?i2___wmul^0,w,c
  4048  0007A0  6ED9               	movwf	fsr2l,c
  4049  0007A2  0E01               	movlw	high (_f_aptos+5)
  4050  0007A4  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4051  0007A6  6EDA               	movwf	fsr2h,c
  4052  0007A8  CFDE F035          	movff	postinc2,??_IRQ_Timer0
  4053  0007AC  CFDD F036          	movff	postdec2,??_IRQ_Timer0+1
  4054  0007B0  C035  FFFD         	movff	??_IRQ_Timer0,tosl	;volatile
  4055  0007B4  C036  FFFE         	movff	??_IRQ_Timer0+1,tosh	;volatile
  4056  0007B8  6AFF               	clrf	255,c	;volatile
  4057  0007BA  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4058  0007BE  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4059  0007C2  0E00               	movlw	0
  4060  0007C4  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4061  0007C6  0E4A               	movlw	74
  4062  0007C8  6E29               	movwf	i2___wmul@multiplicand^0,c
  4063  0007CA  ECF6  F00A         	call	i2___wmul	;wreg free
  4064  0007CE  0E7B               	movlw	low (_f_aptos+2)
  4065  0007D0  2427               	addwf	?i2___wmul^0,w,c
  4066  0007D2  6ED9               	movwf	fsr2l,c
  4067  0007D4  0E01               	movlw	high (_f_aptos+2)
  4068  0007D6  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4069  0007D8  6EDA               	movwf	fsr2h,c
  4070  0007DA  0E01               	movlw	1
  4071  0007DC  6EDF               	movwf	indf2,c
  4072  0007DE  EFD5  F004         	goto	i2l2147
  4073  0007E2                     i2l2139:
  4074  0007E2  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4075  0007E6  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4076  0007EA  0E00               	movlw	0
  4077  0007EC  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4078  0007EE  0E4A               	movlw	74
  4079  0007F0  6E29               	movwf	i2___wmul@multiplicand^0,c
  4080  0007F2  ECF6  F00A         	call	i2___wmul	;wreg free
  4081  0007F6  0E7B               	movlw	low (_f_aptos+2)
  4082  0007F8  2427               	addwf	?i2___wmul^0,w,c
  4083  0007FA  6ED9               	movwf	fsr2l,c
  4084  0007FC  0E01               	movlw	high (_f_aptos+2)
  4085  0007FE  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4086  000800  6EDA               	movwf	fsr2h,c
  4087  000802  0E01               	movlw	1
  4088  000804  6EDF               	movwf	indf2,c
  4089  000806  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4090  00080A  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4091  00080E  0E00               	movlw	0
  4092  000810  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4093  000812  0E4A               	movlw	74
  4094  000814  6E29               	movwf	i2___wmul@multiplicand^0,c
  4095  000816  ECF6  F00A         	call	i2___wmul	;wreg free
  4096  00081A  0EBF               	movlw	low (_f_aptos+70)
  4097  00081C  2427               	addwf	?i2___wmul^0,w,c
  4098  00081E  6ED9               	movwf	fsr2l,c
  4099  000820  0E01               	movlw	high (_f_aptos+70)
  4100  000822  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4101  000824  6EDA               	movwf	fsr2h,c
  4102  000826  50DF               	movf	indf2,w,c
  4103  000828  6E35               	movwf	??_IRQ_Timer0^0,c
  4104  00082A  5035               	movf	??_IRQ_Timer0^0,w,c
  4105  00082C  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4106  000830  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4107  000834  0E00               	movlw	0
  4108  000836  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4109  000838  0E4A               	movlw	74
  4110  00083A  6E29               	movwf	i2___wmul@multiplicand^0,c
  4111  00083C  ECF6  F00A         	call	i2___wmul	;wreg free
  4112  000840  0EBE               	movlw	low (_f_aptos+69)
  4113  000842  2427               	addwf	?i2___wmul^0,w,c
  4114  000844  6ED9               	movwf	fsr2l,c
  4115  000846  0E01               	movlw	high (_f_aptos+69)
  4116  000848  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4117  00084A  6EDA               	movwf	fsr2h,c
  4118  00084C  50DF               	movf	indf2,w,c
  4119  00084E  6EE0               	movwf	224,c	;volatile
  4120  000850  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4121  000854  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4122  000858  0E00               	movlw	0
  4123  00085A  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4124  00085C  0E4A               	movlw	74
  4125  00085E  6E29               	movwf	i2___wmul@multiplicand^0,c
  4126  000860  ECF6  F00A         	call	i2___wmul	;wreg free
  4127  000864  0EC0               	movlw	low (_f_aptos+71)
  4128  000866  2427               	addwf	?i2___wmul^0,w,c
  4129  000868  6ED9               	movwf	fsr2l,c
  4130  00086A  0E01               	movlw	high (_f_aptos+71)
  4131  00086C  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4132  00086E  6EDA               	movwf	fsr2h,c
  4133  000870  50DF               	movf	indf2,w,c
  4134  000872  6ED8               	movwf	216,c	;volatile
  4135  000874  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4136  000878  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4137  00087C  0E00               	movlw	0
  4138  00087E  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4139  000880  0E4A               	movlw	74
  4140  000882  6E29               	movwf	i2___wmul@multiplicand^0,c
  4141  000884  ECF6  F00A         	call	i2___wmul	;wreg free
  4142  000888  0EBC               	movlw	low (_f_aptos+67)
  4143  00088A  2427               	addwf	?i2___wmul^0,w,c
  4144  00088C  6ED9               	movwf	fsr2l,c
  4145  00088E  0E01               	movlw	high (_f_aptos+67)
  4146  000890  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4147  000892  6EDA               	movwf	fsr2h,c
  4148  000894  CFDE F001          	movff	postinc2,_index
  4149  000898  CFDD F002          	movff	postdec2,_index+1
  4150  00089C  EFCC  F004         	goto	i2l2145
  4151  0008A0                     i2l276:
  4152  0008A0  0005               	push		;# 
  4153  0008A2  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4154  0008A6  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4155  0008AA  0E00               	movlw	0
  4156  0008AC  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4157  0008AE  0E4A               	movlw	74
  4158  0008B0  6E29               	movwf	i2___wmul@multiplicand^0,c
  4159  0008B2  ECF6  F00A         	call	i2___wmul	;wreg free
  4160  0008B6  0E79               	movlw	low _f_aptos
  4161  0008B8  6E35               	movwf	??_IRQ_Timer0^0,c
  4162  0008BA  0E01               	movlw	high _f_aptos
  4163  0008BC  6E36               	movwf	(??_IRQ_Timer0+1)^0,c
  4164  0008BE  0E04               	movlw	4
  4165  0008C0  2635               	addwf	??_IRQ_Timer0^0,f,c
  4166  0008C2  0E00               	movlw	0
  4167  0008C4  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4168  0008C6  5027               	movf	?i2___wmul^0,w,c
  4169  0008C8  2635               	addwf	??_IRQ_Timer0^0,f,c
  4170  0008CA  5028               	movf	(?i2___wmul+1)^0,w,c
  4171  0008CC  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4172  0008CE  C001  F027         	movff	_index,i2___wmul@multiplier
  4173  0008D2  C002  F028         	movff	_index+1,i2___wmul@multiplier+1
  4174  0008D6  0E00               	movlw	0
  4175  0008D8  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4176  0008DA  0E03               	movlw	3
  4177  0008DC  6E29               	movwf	i2___wmul@multiplicand^0,c
  4178  0008DE  ECF6  F00A         	call	i2___wmul	;wreg free
  4179  0008E2  5027               	movf	?i2___wmul^0,w,c
  4180  0008E4  2435               	addwf	??_IRQ_Timer0^0,w,c
  4181  0008E6  6ED9               	movwf	fsr2l,c
  4182  0008E8  5028               	movf	(?i2___wmul+1)^0,w,c
  4183  0008EA  2036               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  4184  0008EC  6EDA               	movwf	fsr2h,c
  4185  0008EE  50DF               	movf	indf2,w,c
  4186  0008F0  6EFF               	movwf	255,c	;volatile
  4187  0008F2  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4188  0008F6  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4189  0008FA  0E00               	movlw	0
  4190  0008FC  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4191  0008FE  0E4A               	movlw	74
  4192  000900  6E29               	movwf	i2___wmul@multiplicand^0,c
  4193  000902  ECF6  F00A         	call	i2___wmul	;wreg free
  4194  000906  0E79               	movlw	low _f_aptos
  4195  000908  6E35               	movwf	??_IRQ_Timer0^0,c
  4196  00090A  0E01               	movlw	high _f_aptos
  4197  00090C  6E36               	movwf	(??_IRQ_Timer0+1)^0,c
  4198  00090E  0E05               	movlw	5
  4199  000910  2635               	addwf	??_IRQ_Timer0^0,f,c
  4200  000912  0E00               	movlw	0
  4201  000914  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4202  000916  5027               	movf	?i2___wmul^0,w,c
  4203  000918  2635               	addwf	??_IRQ_Timer0^0,f,c
  4204  00091A  5028               	movf	(?i2___wmul+1)^0,w,c
  4205  00091C  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4206  00091E  C001  F027         	movff	_index,i2___wmul@multiplier
  4207  000922  C002  F028         	movff	_index+1,i2___wmul@multiplier+1
  4208  000926  0E00               	movlw	0
  4209  000928  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4210  00092A  0E03               	movlw	3
  4211  00092C  6E29               	movwf	i2___wmul@multiplicand^0,c
  4212  00092E  ECF6  F00A         	call	i2___wmul	;wreg free
  4213  000932  5027               	movf	?i2___wmul^0,w,c
  4214  000934  2435               	addwf	??_IRQ_Timer0^0,w,c
  4215  000936  6ED9               	movwf	fsr2l,c
  4216  000938  5028               	movf	(?i2___wmul+1)^0,w,c
  4217  00093A  2036               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  4218  00093C  6EDA               	movwf	fsr2h,c
  4219  00093E  50DF               	movf	indf2,w,c
  4220  000940  6EFD               	movwf	253,c	;volatile
  4221  000942  C381  F027         	movff	_f_aptos+520,i2___wmul@multiplier
  4222  000946  C382  F028         	movff	_f_aptos+521,i2___wmul@multiplier+1
  4223  00094A  0E00               	movlw	0
  4224  00094C  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4225  00094E  0E4A               	movlw	74
  4226  000950  6E29               	movwf	i2___wmul@multiplicand^0,c
  4227  000952  ECF6  F00A         	call	i2___wmul	;wreg free
  4228  000956  0E79               	movlw	low _f_aptos
  4229  000958  6E35               	movwf	??_IRQ_Timer0^0,c
  4230  00095A  0E01               	movlw	high _f_aptos
  4231  00095C  6E36               	movwf	(??_IRQ_Timer0+1)^0,c
  4232  00095E  0E06               	movlw	6
  4233  000960  2635               	addwf	??_IRQ_Timer0^0,f,c
  4234  000962  0E00               	movlw	0
  4235  000964  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4236  000966  5027               	movf	?i2___wmul^0,w,c
  4237  000968  2635               	addwf	??_IRQ_Timer0^0,f,c
  4238  00096A  5028               	movf	(?i2___wmul+1)^0,w,c
  4239  00096C  2236               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4240  00096E  C001  F027         	movff	_index,i2___wmul@multiplier
  4241  000972  C002  F028         	movff	_index+1,i2___wmul@multiplier+1
  4242  000976  0E00               	movlw	0
  4243  000978  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4244  00097A  0E03               	movlw	3
  4245  00097C  6E29               	movwf	i2___wmul@multiplicand^0,c
  4246  00097E  ECF6  F00A         	call	i2___wmul	;wreg free
  4247  000982  5027               	movf	?i2___wmul^0,w,c
  4248  000984  2435               	addwf	??_IRQ_Timer0^0,w,c
  4249  000986  6ED9               	movwf	fsr2l,c
  4250  000988  5028               	movf	(?i2___wmul+1)^0,w,c
  4251  00098A  2036               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  4252  00098C  6EDA               	movwf	fsr2h,c
  4253  00098E  50DF               	movf	indf2,w,c
  4254  000990  6EFE               	movwf	254,c	;volatile
  4255  000992  0601               	decf	_index^0,f,c
  4256  000994  A0D8               	btfss	status,0,c
  4257  000996  0602               	decf	(_index+1)^0,f,c
  4258  000998                     i2l2145:
  4259  000998  5001               	movf	_index^0,w,c
  4260  00099A  1002               	iorwf	(_index+1)^0,w,c
  4261  00099C  A4D8               	btfss	status,2,c
  4262  00099E  EFD3  F004         	goto	i2u124_41
  4263  0009A2  EFD5  F004         	goto	i2u124_40
  4264  0009A6                     i2u124_41:
  4265  0009A6  EF50  F004         	goto	i2l276
  4266  0009AA                     i2u124_40:
  4267  0009AA                     i2l2147:
  4268                           
  4269                           ;timer.c: 41:     quantum = 5;
  4270  0009AA  0E00               	movlw	0
  4271  0009AC  6E4B               	movwf	(_quantum+1)^0,c
  4272  0009AE  0E05               	movlw	5
  4273  0009B0  6E4A               	movwf	_quantum^0,c
  4274  0009B2                     i2l2149:
  4275                           
  4276                           ;timer.c: 47:   controle_delay();
  4277  0009B2  EC70  F006         	call	_controle_delay	;wreg free
  4278  0009B6                     
  4279                           ;timer.c: 48:   INTCONbits.TMR0IF = 0;
  4280  0009B6  94F2               	bcf	242,2,c	;volatile
  4281  0009B8                     
  4282                           ;timer.c: 49:   TMR0L = 6;
  4283  0009B8  0E06               	movlw	6
  4284  0009BA  6ED6               	movwf	214,c	;volatile
  4285  0009BC                     
  4286                           ;timer.c: 50:   T0CONbits.TMR0ON = 1;
  4287  0009BC  8ED5               	bsf	213,7,c	;volatile
  4288  0009BE                     i2l2157:
  4289                           
  4290                           ;timer.c: 52:  INTCONbits.GIE = 1;
  4291  0009BE  8EF2               	bsf	242,7,c	;volatile
  4292  0009C0  C03A  FFF4         	movff	??_IRQ_Timer0+5,prodh
  4293  0009C4  C039  FFF3         	movff	??_IRQ_Timer0+4,prodl
  4294  0009C8  C038  FFDA         	movff	??_IRQ_Timer0+3,fsr2h
  4295  0009CC  C037  FFD9         	movff	??_IRQ_Timer0+2,fsr2l
  4296  0009D0  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4297  0009D2  0011               	retfie		f
  4298  0009D4                     __end_of_IRQ_Timer0:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function i2_scheduler *****************
  4302 ;; Defined at:
  4303 ;;		line 8 in file "scheduler.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  2   12[COMRAM] unsigned int 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4317 ;;      Params:         2       0       0       0       0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0
  4320 ;;      Totals:         2       0       0       0       0       0       0
  4321 ;;Total ram usage:        2 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    2
  4324 ;; This function calls:
  4325 ;;		i2_rr_scheduler
  4326 ;; This function is called by:
  4327 ;;		_IRQ_Timer0
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text28
  4332  001636                     __ptext28:
  4333                           	callstack 0
  4334  001636                     i2_scheduler:
  4335                           	callstack 17
  4336  001636                     
  4337                           ;scheduler.c: 10:    return rr_scheduler();
  4338  001636  EC1A  F009         	call	i2_rr_scheduler	;wreg free
  4339  00163A  C02D  F033         	movff	?i2_rr_scheduler,?i2_scheduler
  4340  00163E  C02E  F034         	movff	?i2_rr_scheduler+1,?i2_scheduler+1
  4341  001642  0012               	return		;funcret
  4342  001644                     __end_ofi2_scheduler:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function i2_rr_scheduler *****************
  4346 ;; Defined at:
  4347 ;;		line 16 in file "scheduler.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  next_task       2   10[COMRAM] unsigned int 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  2    6[COMRAM] unsigned int 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4361 ;;      Params:         2       0       0       0       0       0       0
  4362 ;;      Locals:         2       0       0       0       0       0       0
  4363 ;;      Temps:          2       0       0       0       0       0       0
  4364 ;;      Totals:         6       0       0       0       0       0       0
  4365 ;;Total ram usage:        6 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    1
  4368 ;; This function calls:
  4369 ;;		i2___wmul
  4370 ;; This function is called by:
  4371 ;;		i2_scheduler
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text29
  4376  001234                     __ptext29:
  4377                           	callstack 0
  4378  001234                     i2_rr_scheduler:
  4379                           	callstack 17
  4380  001234                     
  4381                           ;scheduler.c: 17:    u_int next_task = f_aptos.task_running;
  4382  001234  C381  F031         	movff	_f_aptos+520,i2rr_scheduler@next_task
  4383  001238  C382  F032         	movff	_f_aptos+521,i2rr_scheduler@next_task+1
  4384  00123C                     i2l1795:
  4385                           
  4386                           ;scheduler.c: 19:   next_task += 1;
  4387  00123C  4A31               	infsnz	i2rr_scheduler@next_task^0,f,c
  4388  00123E  2A32               	incf	(i2rr_scheduler@next_task+1)^0,f,c
  4389  001240                     
  4390                           ;scheduler.c: 20:   if(next_task >= f_aptos.ready_queue_size){
  4391  001240  EE23  F07F         	lfsr	2,_f_aptos+518
  4392  001244  50DE               	movf	postinc2,w,c
  4393  001246  5C31               	subwf	i2rr_scheduler@next_task^0,w,c
  4394  001248  50DE               	movf	postinc2,w,c
  4395  00124A  5832               	subwfb	(i2rr_scheduler@next_task+1)^0,w,c
  4396  00124C  A0D8               	btfss	status,0,c
  4397  00124E  EF2B  F009         	goto	i2u82_41
  4398  001252  EF2D  F009         	goto	i2u82_40
  4399  001256                     i2u82_41:
  4400  001256  EF33  F009         	goto	i2l1801
  4401  00125A                     i2u82_40:
  4402  00125A                     
  4403                           ;scheduler.c: 21:    next_task = 0;
  4404  00125A  0E00               	movlw	0
  4405  00125C  6E32               	movwf	(i2rr_scheduler@next_task+1)^0,c
  4406  00125E  0E00               	movlw	0
  4407  001260  6E31               	movwf	i2rr_scheduler@next_task^0,c
  4408                           
  4409                           ;scheduler.c: 22:    break;
  4410  001262  EF4B  F009         	goto	i2l118
  4411  001266                     i2l1801:
  4412                           
  4413                           ;scheduler.c: 24:  } while (f_aptos.ready_queue[next_task].task_state != READY);
  4414  001266  C031  F027         	movff	i2rr_scheduler@next_task,i2___wmul@multiplier
  4415  00126A  C032  F028         	movff	i2rr_scheduler@next_task+1,i2___wmul@multiplier+1
  4416  00126E  0E00               	movlw	0
  4417  001270  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4418  001272  0E4A               	movlw	74
  4419  001274  6E29               	movwf	i2___wmul@multiplicand^0,c
  4420  001276  ECF6  F00A         	call	i2___wmul	;wreg free
  4421  00127A  0E7B               	movlw	low (_f_aptos+2)
  4422  00127C  2427               	addwf	?i2___wmul^0,w,c
  4423  00127E  6ED9               	movwf	fsr2l,c
  4424  001280  0E01               	movlw	high (_f_aptos+2)
  4425  001282  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4426  001284  6EDA               	movwf	fsr2h,c
  4427  001286  50DF               	movf	indf2,w,c
  4428  001288  A4D8               	btfss	status,2,c
  4429  00128A  EF49  F009         	goto	i2u83_41
  4430  00128E  EF4B  F009         	goto	i2u83_40
  4431  001292                     i2u83_41:
  4432  001292  EF1E  F009         	goto	i2l1795
  4433  001296                     i2u83_40:
  4434  001296                     i2l118:
  4435                           
  4436                           ;scheduler.c: 25:  return next_task;
  4437  001296  C031  F02D         	movff	i2rr_scheduler@next_task,?i2_rr_scheduler
  4438  00129A  C032  F02E         	movff	i2rr_scheduler@next_task+1,?i2_rr_scheduler+1
  4439  00129E  0012               	return		;funcret
  4440  0012A0                     __end_ofi2_rr_scheduler:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function _controle_delay *****************
  4444 ;; Defined at:
  4445 ;;		line 19 in file "timer.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  i               2    8[COMRAM] int 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4459 ;;      Params:         0       0       0       0       0       0       0
  4460 ;;      Locals:         2       0       0       0       0       0       0
  4461 ;;      Temps:          2       0       0       0       0       0       0
  4462 ;;      Totals:         4       0       0       0       0       0       0
  4463 ;;Total ram usage:        4 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    1
  4466 ;; This function calls:
  4467 ;;		i2___wmul
  4468 ;; This function is called by:
  4469 ;;		_IRQ_Timer0
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text30
  4474  000CE0                     __ptext30:
  4475                           	callstack 0
  4476  000CE0                     _controle_delay:
  4477                           	callstack 18
  4478  000CE0                     
  4479                           ;timer.c: 20:     int i;;timer.c: 21:     for (i = 0; i < f_aptos.ready_queue_size; i++)
      +                           {
  4480  000CE0  0E00               	movlw	0
  4481  000CE2  6E30               	movwf	(controle_delay@i+1)^0,c
  4482  000CE4  0E00               	movlw	0
  4483  000CE6  6E2F               	movwf	controle_delay@i^0,c
  4484  000CE8  EFCF  F006         	goto	i2l1933
  4485  000CEC                     i2l1925:
  4486                           
  4487                           ;timer.c: 22:         if (f_aptos.ready_queue[i].task_state == WAITING_DELAY) {
  4488  000CEC  C02F  F027         	movff	controle_delay@i,i2___wmul@multiplier
  4489  000CF0  C030  F028         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4490  000CF4  0E00               	movlw	0
  4491  000CF6  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4492  000CF8  0E4A               	movlw	74
  4493  000CFA  6E29               	movwf	i2___wmul@multiplicand^0,c
  4494  000CFC  ECF6  F00A         	call	i2___wmul	;wreg free
  4495  000D00  0E7B               	movlw	low (_f_aptos+2)
  4496  000D02  2427               	addwf	?i2___wmul^0,w,c
  4497  000D04  6ED9               	movwf	fsr2l,c
  4498  000D06  0E01               	movlw	high (_f_aptos+2)
  4499  000D08  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4500  000D0A  6EDA               	movwf	fsr2h,c
  4501  000D0C  0E03               	movlw	3
  4502  000D0E  18DE               	xorwf	postinc2,w,c
  4503  000D10  A4D8               	btfss	status,2,c
  4504  000D12  EF8D  F006         	goto	i2u91_41
  4505  000D16  EF8F  F006         	goto	i2u91_40
  4506  000D1A                     i2u91_41:
  4507  000D1A  EFCD  F006         	goto	i2l1931
  4508  000D1E                     i2u91_40:
  4509  000D1E                     
  4510                           ;timer.c: 23:             f_aptos.ready_queue[i].delay--;
  4511  000D1E  C02F  F027         	movff	controle_delay@i,i2___wmul@multiplier
  4512  000D22  C030  F028         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4513  000D26  0E00               	movlw	0
  4514  000D28  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4515  000D2A  0E4A               	movlw	74
  4516  000D2C  6E29               	movwf	i2___wmul@multiplicand^0,c
  4517  000D2E  ECF6  F00A         	call	i2___wmul	;wreg free
  4518  000D32  0EC1               	movlw	low (_f_aptos+72)
  4519  000D34  2427               	addwf	?i2___wmul^0,w,c
  4520  000D36  6ED9               	movwf	fsr2l,c
  4521  000D38  0E01               	movlw	high (_f_aptos+72)
  4522  000D3A  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4523  000D3C  6EDA               	movwf	fsr2h,c
  4524  000D3E  06DE               	decf	postinc2,f,c
  4525  000D40  0E00               	movlw	0
  4526  000D42  5ADD               	subwfb	postdec2,f,c
  4527                           
  4528                           ;timer.c: 24:             if (f_aptos.ready_queue[i].delay == 0) {
  4529  000D44  C02F  F027         	movff	controle_delay@i,i2___wmul@multiplier
  4530  000D48  C030  F028         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4531  000D4C  0E00               	movlw	0
  4532  000D4E  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4533  000D50  0E4A               	movlw	74
  4534  000D52  6E29               	movwf	i2___wmul@multiplicand^0,c
  4535  000D54  ECF6  F00A         	call	i2___wmul	;wreg free
  4536  000D58  0EC1               	movlw	low (_f_aptos+72)
  4537  000D5A  2427               	addwf	?i2___wmul^0,w,c
  4538  000D5C  6ED9               	movwf	fsr2l,c
  4539  000D5E  0E01               	movlw	high (_f_aptos+72)
  4540  000D60  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4541  000D62  6EDA               	movwf	fsr2h,c
  4542  000D64  50DE               	movf	postinc2,w,c
  4543  000D66  10DE               	iorwf	postinc2,w,c
  4544  000D68  A4D8               	btfss	status,2,c
  4545  000D6A  EFB9  F006         	goto	i2u92_41
  4546  000D6E  EFBB  F006         	goto	i2u92_40
  4547  000D72                     i2u92_41:
  4548  000D72  EFCD  F006         	goto	i2l1931
  4549  000D76                     i2u92_40:
  4550  000D76                     
  4551                           ;timer.c: 25:     f_aptos.ready_queue[i].task_state = READY;
  4552  000D76  C02F  F027         	movff	controle_delay@i,i2___wmul@multiplier
  4553  000D7A  C030  F028         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4554  000D7E  0E00               	movlw	0
  4555  000D80  6E2A               	movwf	(i2___wmul@multiplicand+1)^0,c
  4556  000D82  0E4A               	movlw	74
  4557  000D84  6E29               	movwf	i2___wmul@multiplicand^0,c
  4558  000D86  ECF6  F00A         	call	i2___wmul	;wreg free
  4559  000D8A  0E7B               	movlw	low (_f_aptos+2)
  4560  000D8C  2427               	addwf	?i2___wmul^0,w,c
  4561  000D8E  6ED9               	movwf	fsr2l,c
  4562  000D90  0E01               	movlw	high (_f_aptos+2)
  4563  000D92  2028               	addwfc	(?i2___wmul+1)^0,w,c
  4564  000D94  6EDA               	movwf	fsr2h,c
  4565  000D96  0E00               	movlw	0
  4566  000D98  6EDF               	movwf	indf2,c
  4567  000D9A                     i2l1931:
  4568                           
  4569                           ;timer.c: 28:     }
  4570  000D9A  4A2F               	infsnz	controle_delay@i^0,f,c
  4571  000D9C  2A30               	incf	(controle_delay@i+1)^0,f,c
  4572  000D9E                     i2l1933:
  4573  000D9E  EE23  F07F         	lfsr	2,_f_aptos+518
  4574  000DA2  50DE               	movf	postinc2,w,c
  4575  000DA4  5C2F               	subwf	controle_delay@i^0,w,c
  4576  000DA6  50DE               	movf	postinc2,w,c
  4577  000DA8  5830               	subwfb	(controle_delay@i+1)^0,w,c
  4578  000DAA  A0D8               	btfss	status,0,c
  4579  000DAC  EFDA  F006         	goto	i2u93_41
  4580  000DB0  EFDC  F006         	goto	i2u93_40
  4581  000DB4                     i2u93_41:
  4582  000DB4  EF76  F006         	goto	i2l1925
  4583  000DB8                     i2u93_40:
  4584  000DB8  0012               	return		;funcret
  4585  000DBA                     __end_of_controle_delay:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function i2___wmul *****************
  4589 ;; Defined at:
  4590 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  multiplier      2    0[COMRAM] unsigned int 
  4593 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  product         2    4[COMRAM] unsigned int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    0[COMRAM] unsigned int 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, prodl, prodh
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4605 ;;      Params:         4       0       0       0       0       0       0
  4606 ;;      Locals:         2       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0
  4608 ;;      Totals:         6       0       0       0       0       0       0
  4609 ;;Total ram usage:        6 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_controle_delay
  4615 ;;		_IRQ_Timer0
  4616 ;;		i2_rr_scheduler
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text31
  4621  0015EC                     __ptext31:
  4622                           	callstack 0
  4623  0015EC                     i2___wmul:
  4624                           	callstack 17
  4625  0015EC  5027               	movf	i2___wmul@multiplier^0,w,c
  4626  0015EE  0229               	mulwf	i2___wmul@multiplicand^0,c
  4627  0015F0  CFF3 F02B          	movff	prodl,i2___wmul@product
  4628  0015F4  CFF4 F02C          	movff	prodh,i2___wmul@product+1
  4629  0015F8  5027               	movf	i2___wmul@multiplier^0,w,c
  4630  0015FA  022A               	mulwf	(i2___wmul@multiplicand+1)^0,c
  4631  0015FC  50F3               	movf	243,w,c
  4632  0015FE  262C               	addwf	(i2___wmul@product+1)^0,f,c
  4633  001600  5028               	movf	(i2___wmul@multiplier+1)^0,w,c
  4634  001602  0229               	mulwf	i2___wmul@multiplicand^0,c
  4635  001604  50F3               	movf	243,w,c
  4636  001606  262C               	addwf	(i2___wmul@product+1)^0,f,c
  4637  001608  C02B  F027         	movff	i2___wmul@product,?i2___wmul
  4638  00160C  C02C  F028         	movff	i2___wmul@product+1,?i2___wmul+1
  4639  001610  0012               	return		;funcret
  4640  001612                     __end_ofi2___wmul:
  4641                           	callstack 0
  4642  0000                     
  4643                           	psect	text32
  4644  000000                     __ptext32:
  4645                           	callstack 0
  4646  000000                     
  4647                           	psect	rparam
  4648  0000                     
  4649                           	psect	temp
  4650  00004C                     btemp:
  4651                           	callstack 0
  4652  00004C                     	ds	1
  4653  0000                     int$flags	set	btemp
  4654  0000                     wtemp8	set	btemp+1
  4655  0000                     ttemp5	set	btemp+1
  4656  0000                     ttemp6	set	btemp+4
  4657  0000                     ttemp7	set	btemp+8
  4658                           
  4659                           	psect	idloc
  4660                           
  4661                           ;Config register IDLOC0 @ 0x200000
  4662                           ;	unspecified, using default values
  4663  200000                     	org	2097152
  4664  200000  FF                 	db	255
  4665                           
  4666                           ;Config register IDLOC1 @ 0x200001
  4667                           ;	unspecified, using default values
  4668  200001                     	org	2097153
  4669  200001  FF                 	db	255
  4670                           
  4671                           ;Config register IDLOC2 @ 0x200002
  4672                           ;	unspecified, using default values
  4673  200002                     	org	2097154
  4674  200002  FF                 	db	255
  4675                           
  4676                           ;Config register IDLOC3 @ 0x200003
  4677                           ;	unspecified, using default values
  4678  200003                     	org	2097155
  4679  200003  FF                 	db	255
  4680                           
  4681                           ;Config register IDLOC4 @ 0x200004
  4682                           ;	unspecified, using default values
  4683  200004                     	org	2097156
  4684  200004  FF                 	db	255
  4685                           
  4686                           ;Config register IDLOC5 @ 0x200005
  4687                           ;	unspecified, using default values
  4688  200005                     	org	2097157
  4689  200005  FF                 	db	255
  4690                           
  4691                           ;Config register IDLOC6 @ 0x200006
  4692                           ;	unspecified, using default values
  4693  200006                     	org	2097158
  4694  200006  FF                 	db	255
  4695                           
  4696                           ;Config register IDLOC7 @ 0x200007
  4697                           ;	unspecified, using default values
  4698  200007                     	org	2097159
  4699  200007  FF                 	db	255
  4700                           
  4701                           	psect	config
  4702                           
  4703                           ; Padding undefined space
  4704  300000                     	org	3145728
  4705  300000  FF                 	db	255
  4706                           
  4707                           ;Config register CONFIG1H @ 0x300001
  4708                           ;	Oscillator Selection bits
  4709                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  4710                           ;	Fail-Safe Clock Monitor Enable bit
  4711                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4712                           ;	Internal/External Oscillator Switchover bit
  4713                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4714  300001                     	org	3145729
  4715  300001  07                 	db	7
  4716                           
  4717                           ;Config register CONFIG2L @ 0x300002
  4718                           ;	Power-up Timer Enable bit
  4719                           ;	PWRT = OFF, PWRT disabled
  4720                           ;	Brown-out Reset Enable bits
  4721                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4722                           ;	Brown Out Reset Voltage bits
  4723                           ;	BORV = 3, Minimum setting
  4724  300002                     	org	3145730
  4725  300002  1F                 	db	31
  4726                           
  4727                           ;Config register CONFIG2H @ 0x300003
  4728                           ;	Watchdog Timer Enable bit
  4729                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4730                           ;	Watchdog Timer Postscale Select bits
  4731                           ;	WDTPS = 32768, 1:32768
  4732  300003                     	org	3145731
  4733  300003  1E                 	db	30
  4734                           
  4735                           ; Padding undefined space
  4736  300004                     	org	3145732
  4737  300004  FF                 	db	255
  4738                           
  4739                           ;Config register CONFIG3H @ 0x300005
  4740                           ;	CCP2 MUX bit
  4741                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4742                           ;	PORTB A/D Enable bit
  4743                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4744                           ;	Low-Power Timer1 Oscillator Enable bit
  4745                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4746                           ;	MCLR Pin Enable bit
  4747                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4748  300005                     	org	3145733
  4749  300005  81                 	db	129
  4750                           
  4751                           ;Config register CONFIG4L @ 0x300006
  4752                           ;	Stack Full/Underflow Reset Enable bit
  4753                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4754                           ;	Single-Supply ICSP Enable bit
  4755                           ;	LVP = ON, Single-Supply ICSP enabled
  4756                           ;	Extended Instruction Set Enable bit
  4757                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4758                           ;	Background Debugger Enable bit
  4759                           ;	DEBUG = 0x1, unprogrammed default
  4760  300006                     	org	3145734
  4761  300006  85                 	db	133
  4762                           
  4763                           ; Padding undefined space
  4764  300007                     	org	3145735
  4765  300007  FF                 	db	255
  4766                           
  4767                           ;Config register CONFIG5L @ 0x300008
  4768                           ;	Code Protection bit
  4769                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4770                           ;	Code Protection bit
  4771                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4772                           ;	Code Protection bit
  4773                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4774                           ;	Code Protection bit
  4775                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4776  300008                     	org	3145736
  4777  300008  0F                 	db	15
  4778                           
  4779                           ;Config register CONFIG5H @ 0x300009
  4780                           ;	Boot Block Code Protection bit
  4781                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4782                           ;	Data EEPROM Code Protection bit
  4783                           ;	CPD = OFF, Data EEPROM not code-protected
  4784  300009                     	org	3145737
  4785  300009  C0                 	db	192
  4786                           
  4787                           ;Config register CONFIG6L @ 0x30000A
  4788                           ;	Write Protection bit
  4789                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4790                           ;	Write Protection bit
  4791                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4792                           ;	Write Protection bit
  4793                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4794                           ;	Write Protection bit
  4795                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4796  30000A                     	org	3145738
  4797  30000A  0F                 	db	15
  4798                           
  4799                           ;Config register CONFIG6H @ 0x30000B
  4800                           ;	Configuration Register Write Protection bit
  4801                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4802                           ;	Boot Block Write Protection bit
  4803                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4804                           ;	Data EEPROM Write Protection bit
  4805                           ;	WRTD = OFF, Data EEPROM not write-protected
  4806  30000B                     	org	3145739
  4807  30000B  E0                 	db	224
  4808                           
  4809                           ;Config register CONFIG7L @ 0x30000C
  4810                           ;	Table Read Protection bit
  4811                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4812                           ;	Table Read Protection bit
  4813                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4814                           ;	Table Read Protection bit
  4815                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4816                           ;	Table Read Protection bit
  4817                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4818  30000C                     	org	3145740
  4819  30000C  0F                 	db	15
  4820                           
  4821                           ;Config register CONFIG7H @ 0x30000D
  4822                           ;	Boot Block Table Read Protection bit
  4823                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4824  30000D                     	org	3145741
  4825  30000D  40                 	db	64
  4826                           tosu	equ	0xFFF
  4827                           tosh	equ	0xFFE
  4828                           tosl	equ	0xFFD
  4829                           stkptr	equ	0xFFC
  4830                           pclatu	equ	0xFFB
  4831                           pclath	equ	0xFFA
  4832                           pcl	equ	0xFF9
  4833                           tblptru	equ	0xFF8
  4834                           tblptrh	equ	0xFF7
  4835                           tblptrl	equ	0xFF6
  4836                           tablat	equ	0xFF5
  4837                           prodh	equ	0xFF4
  4838                           prodl	equ	0xFF3
  4839                           indf0	equ	0xFEF
  4840                           postinc0	equ	0xFEE
  4841                           postdec0	equ	0xFED
  4842                           preinc0	equ	0xFEC
  4843                           plusw0	equ	0xFEB
  4844                           fsr0h	equ	0xFEA
  4845                           fsr0l	equ	0xFE9
  4846                           wreg	equ	0xFE8
  4847                           indf1	equ	0xFE7
  4848                           postinc1	equ	0xFE6
  4849                           postdec1	equ	0xFE5
  4850                           preinc1	equ	0xFE4
  4851                           plusw1	equ	0xFE3
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           bsr	equ	0xFE0
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           preinc2	equ	0xFDC
  4859                           plusw2	equ	0xFDB
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1096
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     35      75
    BANK0           128     29      53
    BANK1           256    121     121
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pipe_write@p.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_write@p	PTR struct pipe size(2) Largest target is 9
		 -> pipe_motor_error(BANK0[8]), pipe_error(BANK0[8]), pipe_igni(BANK0[8]), 

    pipe_read@p.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_read@p	PTR struct pipe size(2) Largest target is 9
		 -> pipe_motor_error(BANK0[8]), pipe_igni(BANK0[8]), 

    pipe_create@p.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_create@p	PTR struct pipe size(2) Largest target is 9
		 -> pipe_motor_error(BANK0[8]), pipe_error(BANK0[8]), pipe_igni(BANK0[8]), 

    sem_post@sem	PTR struct semaforo size(2) Largest target is 18
		 -> sem_motor(COMRAM[18]), sem_igni(COMRAM[18]), 

    sem_wait@sem	PTR struct semaforo size(2) Largest target is 18
		 -> sem_motor(COMRAM[18]), sem_igni(COMRAM[18]), 

    sem_init@sem	PTR struct semaforo size(2) Largest target is 18
		 -> sem_motor(COMRAM[18]), sem_igni(COMRAM[18]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_motor_error.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_error.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S348pipe$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_igni.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    task_create@func	PTR FTN()void  size(2) Largest target is 1
		 -> task_6(), task_5(), task_4(), task_3(), 
		 -> task_2(), task_1(), task_idle(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_6(), task_5(), task_4(), task_3(), 
		 -> task_2(), task_1(), task_idle(), 

    S87tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_6(), task_5(), task_4(), task_3(), 
		 -> task_2(), task_1(), task_idle(), 

    f_aptos.ready_queue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_6(), task_5(), task_4(), task_3(), 
		 -> task_2(), task_1(), task_idle(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    _sem_wait->_scheduler
    _scheduler->_rr_scheduler

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    None.

Critical Paths under _task_4 in COMRAM

    None.

Critical Paths under _task_5 in COMRAM

    _task_5->_sem_wait
    _sem_wait->_scheduler
    _scheduler->_rr_scheduler

Critical Paths under _task_6 in COMRAM

    None.

Critical Paths under _IRQ_Timer0 in COMRAM

    _IRQ_Timer0->i2_scheduler
    i2_scheduler->i2_rr_scheduler
    i2_rr_scheduler->i2___wmul
    _controle_delay->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_1 in BANK0

    _pipe_write->___lwmod

Critical Paths under _task_2 in BANK0

    _sem_post->i1___wmul
    _pipe_write->___lwmod

Critical Paths under _task_3 in BANK0

    _pipe_write->___lwmod

Critical Paths under _task_4 in BANK0

    None.

Critical Paths under _task_5 in BANK0

    _pipe_write->___lwmod

Critical Paths under _task_6 in BANK0

    _sem_post->i1___wmul
    _pipe_write->___lwmod

Critical Paths under _IRQ_Timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_task_create
    _os_config->_task_create
    _task_create->___wmul
    _config_tasks->_pipe_create
    _pipe_create->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_3 in BANK1

    None.

Critical Paths under _task_4 in BANK1

    None.

Critical Paths under _task_5 in BANK1

    None.

Critical Paths under _task_6 in BANK1

    _task_6->_pipe_write
    _task_6->_sem_post

Critical Paths under _IRQ_Timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _task_4 in BANK2

    None.

Critical Paths under _task_5 in BANK2

    None.

Critical Paths under _task_6 in BANK2

    None.

Critical Paths under _IRQ_Timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _task_4 in BANK3

    None.

Critical Paths under _task_5 in BANK3

    None.

Critical Paths under _task_6 in BANK3

    None.

Critical Paths under _IRQ_Timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _task_4 in BANK4

    None.

Critical Paths under _task_5 in BANK4

    None.

Critical Paths under _task_6 in BANK4

    None.

Critical Paths under _IRQ_Timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _task_4 in BANK5

    None.

Critical Paths under _task_5 in BANK5

    None.

Critical Paths under _task_6 in BANK5

    None.

Critical Paths under _IRQ_Timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   45372
                       _SRAMInitHeap
                          _os_config
                           _os_start
                        _task_create
                          _task_idle
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0   23977
                       _config_tasks
                      _setup_timer_0
                        _task_create
 ---------------------------------------------------------------------------------
 (1) _task_create                                         80    76      4   21166
                                             41 BANK1     80    76      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   19250
                                             35 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _setup_timer_0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_tasks                                         0     0      0    2811
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _sem_init                                             4     0      4     554
                                             35 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pipe_create                                          4     0      4    2257
                                             54 BANK1      4     0      4
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                           11     9      2    1369
                                             43 BANK1     11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           8     6      2     666
                                             35 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SRAMInitHeap                                         4     4      0     229
                                             35 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_1                                               0     0      0   16361
                         _pipe_write
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             6     4      2   11778
                                             29 COMRAM     6     4      2
                            ___lwmod
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            2     0      2    4816
                                             27 COMRAM     2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    4816
                                             21 COMRAM     6     4      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    4561
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           7     4      3    4583
                                             28 BANK1      7     4      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1405
                                             23 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_2                                               0     0      0   11577
                         _pipe_write
                           _sem_post
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             7     5      2    6994
                                             28 BANK1      7     5      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    4561
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           7     4      3    4583
                                             28 BANK1      7     4      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1405
                                             23 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_3                                               0     0      0    6855
                          _pipe_read
                         _pipe_write
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           7     4      3    4583
                                             28 BANK1      7     4      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _pipe_read                                            7     5      2    2272
                                             21 COMRAM     7     5      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1405
                                             23 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_4                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_5                                               0     0      0   18633
                          _pipe_read
                         _pipe_write
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             6     4      2   11778
                                             29 COMRAM     6     4      2
                            ___lwmod
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            2     0      2    4816
                                             27 COMRAM     2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    4816
                                             21 COMRAM     6     4      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    4561
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           7     4      3    4583
                                             28 BANK1      7     4      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _pipe_read                                            7     5      2    2272
                                             21 COMRAM     7     5      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1405
                                             23 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_6                                               0     0      0   11577
                         _pipe_write
                           _sem_post
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             7     5      2    6994
                                             28 BANK1      7     5      2
                            ___lwmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    4561
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           7     4      3    4583
                                             28 BANK1      7     4      3
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4    1405
                                             23 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _IRQ_Timer0                                          6     6      0    5338
                                             14 COMRAM     6     6      0
                     _controle_delay
                           i2___wmul
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (12) i2_scheduler                                         2     0      2    1788
                                             12 COMRAM     2     0      2
                     i2_rr_scheduler
 ---------------------------------------------------------------------------------
 (13) i2_rr_scheduler                                      6     4      2    1788
                                              6 COMRAM     6     4      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) _controle_delay                                      4     4      0    1831
                                              6 COMRAM     4     4      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4    1719
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _os_config
     _config_tasks
       _pipe_create
         _SRAMalloc
           __SRAMmerge
       _sem_init
     _setup_timer_0
     _task_create
       ___wmul
   _os_start
   _task_create
     ___wmul
   _task_idle

 _task_idle (ROOT)

 _task_idle (ROOT)

 _task_1 (ROOT)
   _pipe_write
     ___lwmod
   _sem_wait
     ___lwmod
     _scheduler
       _rr_scheduler
         i1___wmul
     i1___wmul

 _task_2 (ROOT)
   _pipe_write
     ___lwmod
   _sem_post
     ___lwmod
     i1___wmul

 _task_3 (ROOT)
   _pipe_read
     ___lwmod
   _pipe_write
     ___lwmod

 _task_4 (ROOT)

 _task_5 (ROOT)
   _pipe_read
     ___lwmod
   _pipe_write
     ___lwmod
   _sem_wait
     ___lwmod
     _scheduler
       _rr_scheduler
         i1___wmul
     i1___wmul

 _task_6 (ROOT)
   _pipe_write
     ___lwmod
   _sem_post
     ___lwmod
     i1___wmul

 _IRQ_Timer0 (ROOT)
   _controle_delay
     i2___wmul
   i2___wmul
   i2_scheduler
     i2_rr_scheduler
       i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     40A      17       67.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     79      79       7       47.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      35       5       41.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     23      4B       1       59.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9      15        0.0%
DATA                 0      0     503       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Dec 14 20:21:17 2020

    __end_ofi2_scheduler 1644                       l52 11C2                       l61 1650  
                     l55 164E                       l58 152C  i2rr_scheduler@next_task 0031  
    ___wmul@multiplicand 0125         i1___wmul@product 009B  __size_of_controle_delay 00DA  
          SRAMalloc@temp 012F                      l104 0F18                      l205 0FB0  
                    l206 103A                      l311 0C4E                      l312 0CDE  
                    l161 1568                      l218 14AE                      l306 1306  
                    l181 0DF2                      l158 1150                      l175 0DBA  
                    l255 1626                      l176 0E5A                      l168 152E  
                    l177 0E42                      l345 1418                      l186 0E7C  
                    l195 1468                      l179 0E2A                      l196 1478  
                    l188 0E76                      l197 1488                      l198 1498  
                    l286 0AF8                      l295 0AF4                      l288 0A2A  
                    l369 13C4                      l378 15C2                      _BSR 000FE0  
                    _TOS 000FFD                      wreg 000FE8           SRAMalloc@pHeap 0134  
           fp__task_idle 0000        SRAMInitHeap@pHeap 0123        SRAMInitHeap@count 0125  
                   l1523 1476                     l1525 1486                     l1527 1496  
                   l1529 14A6                     l3401 0AAA                     l3331 0C48  
                   l3323 0C06                     l3403 0AB8                     l3341 0C6E  
                   l3325 0C20                     l3405 0AC4                     l3421 1402  
                   l3413 13C6                     l3351 0CA8                     l3335 0C5C  
                   l3327 0C2C                     l3407 0AE8                     l3431 13B0  
                   l3423 1416                     l3415 13C8                     l3353 0CB0  
                   l3329 0C38                     l3425 136E                     l3417 13D8  
                   l3433 159C                     l3441 116C                     l3601 0EA2  
                   l3355 0CBC                     l3363 0CD0                     l3347 0C86  
                   l3427 1388                     l3419 13EE                     l3435 15BA  
                   l3451 11B8                     l3443 1174                     l3611 0F10  
                   l3603 0EB8                     l3357 0CCA                     l3349 0C9C  
                   l3373 09F6                     l3429 139C                     l3461 110E  
                   l3453 1612                     l3445 1178                     l3613 0F14  
                   l3605 0ECE                     l3631 1576                     l3391 0A7E  
                   l3375 09FE                     l3367 09D8                     l3463 1124  
                   l3455 161A                     l3447 1180                     l3439 1152  
                   l3471 164A                     l3607 0EE4                     l3641 1554  
                   l3633 1578                     l3393 0A90                     l3385 0A38  
                   l3377 0A0C                     l3369 09EA                     l3465 113A  
                   l3457 10CC                     l3449 1188                     l3481 1528  
                   l3473 164C                     l3609 0EFA                     l3651 0E0E  
                   l3643 0DBA                     l3635 158A                     l3491 12D2  
                   l3483 12A0                     l3395 0A9A                     l3387 0A4A  
                   l3379 0A16                     l3459 10E2                     l3475 14F4  
                   l3467 1644                     l3653 0E2C                     l3645 0DD6  
                   l3637 153C                     l3493 12DA                     l3485 12AA  
                   l3389 0A66                     l3477 150E                     l3469 1646  
                   l3671 0FF8                     l3663 0FBE                     l3655 0E44  
                   l3647 0DE4                     l3639 1542                     l3495 12EA  
                   l3487 12B0                     l3479 1512                     l3673 1004  
                   l3665 0FCC                     l3657 0E68                     l3649 0E00  
                   l3497 12F6                     l3489 12C6                     l3683 14BC  
                   l3675 1012                     l3667 0FE8                     l3595 0E84  
                   l3685 14CA                     l3677 1014                     l3669 0FF6  
                   l3597 0E88                     l3687 14CE                     l3679 1024  
                   l3599 0E8C                     l3689 14E0                     u2700 09EA  
                   u2701 09E6                     u2710 0A26                     u2711 0A22  
                   u2720 0A38                     u2721 0A34                     u2650 0C48  
                   u2730 0A4A                     u2651 0C44                     u2731 0A46  
                   u2660 0C5C                     u2740 0A66                     u2661 0C58  
                   u2741 0A62                     u2670 0C6A                     u2750 0A90  
                   u2671 0C66                     u2751 0A8C                     u2680 0C82  
                   u2681 0C7E                     u2761 11B0                     u2770 12C6  
                   u2690 0C9C                     u2771 12C2                     u2691 0C98  
                   _TOSH 000FFE                     _TOSL 000FFD                     _WREG 000FE8  
                   _TOSU 000FFF                     _main 0E84                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 004C                     prodh 000FF4  
                   prodl 000FF3                     start 000E           ??_config_tasks 013A  
        SRAMalloc@nBytes 0133             ___param_bank 000000          SRAMalloc@segLen 0131  
            ?_IRQ_Timer0 0027                    ?_main 0027                    i1l113 1634  
                  i1l118 122A                    i1l119 1232                    i2l113 1642  
        __end_of___lwmod 136E                    i1l362 0C04                    i1l355 0414  
                  i1l372 10CA                    i1l357 053C                    i2l118 1296  
                  i2l119 129E                    i1l375 0FAE                    i1l378 15EA  
                  i2l263 0DB8                    i2l276 08A0                    i2l278 09C0  
                  i2l378 1610                    i1l886 136C                    i1l879 1364  
                  _TMR0L 000FD6                    u50_20 1486                    u50_21 1482  
                  u51_20 1496                    u51_21 1492                    u52_20 14A6  
                  u52_21 14A2                    u49_20 1476                    u49_21 1472  
         pipe_write@data 011E               __SRAMmerge 0C06                    _index 0001  
     __size_of_SRAMalloc 0126                    tablat 000FF5         __end_ofi1___wmul 15EC  
       __end_ofi2___wmul 1612                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 004D                    ttemp6 0050                    ttemp7 0054  
                  status 000FD8      i1___wmul@multiplier 0097                    wtemp8 004D  
            i2_scheduler 1636          ??_setup_timer_0 0123          __initialization 141A  
           __end_of_main 0F1C           i2_rr_scheduler 1234                   ??_main 0179  
          __activetblptr 000000             ?_pipe_create 0136                   i1l3101 003A  
                 i1l3111 0114                   i1l3103 007C                   i1l3121 0278  
                 i1l3113 013A                   i1l3105 00C0                   i1l3051 11EA  
                 i1l3131 034C                   i1l3123 02B0                   i1l3115 0164  
                 i1l3107 00C8                   i1l3061 131C                   i1l3053 11F6  
                 i1l3045 11C4                   i1l3141 053A                   i1l3133 0416  
                 i1l3125 02B4                   i1l3117 0262                   i1l3109 00EE  
                 i1l3071 1358                   i1l3063 1324                   i1l3047 11CC  
                 i1l3055 1628                   i1l3135 0514                   i1l3127 02EA  
                 i1l3119 0268                   i1l3161 1076                   i1l3073 135E  
                 i1l3065 132C                   i1l3049 11D0                   i1l3137 051A  
                 i1l3129 02EC                   i1l3163 10C6                   i1l3067 133A  
                 i1l3059 1308                   i1l3075 15C4                   i1l3139 052C  
                 i1l3165 10C8                   i1l3157 1040                   i1l3069 1350  
                 i1l3501 0F1C                   i1l3077 15E2                   i1l3159 1042  
                 i1l3511 0AFC                   i1l3503 0F1E                   i1l3521 0C02  
                 i1l3513 0B14                   i1l3505 0F54                   i1l3097 0012  
                 i1l3515 0B74                   i1l3507 0FAC                   i1l3099 0014  
                 i1l3517 0BC0                   i1l3509 0AFA                   i2l2111 0568  
                 i1l3519 0BF4                   i2l2121 05EE                   i2l2113 057A  
                 i2l2131 0750                   i2l2123 0616                   i2l2115 0582  
                 i2l2107 0550                   i2l2141 08A2                   i2l2133 0754  
                 i2l2125 0706                   i2l2117 05A6                   i2l2109 0562  
                 i2l2151 09B6                   i2l2143 0992                   i2l2135 0786  
                 i2l2127 070C                   i2l2119 05CA                   u300_20 0FCC  
                 i2l2153 09B8                   i2l2145 0998                   i2l2137 0788  
                 i2l2129 071C                   u300_21 0FC8                   i2l2155 09BC  
                 i2l2147 09AA                   i2l2139 07E2                   i2l2149 09B2  
                 i2l2157 09BE                   u301_20 0FE8                   i2l1801 1266  
                 u301_21 0FE4                   i2l1741 1608                   u302_20 0FF6  
                 u302_21 0FF2                   i2l1739 15EC                   i2l1931 0D9A  
                 i2l1923 0CE0                   i2l1925 0CEC                   i2l1933 0D9E  
                 i2l1927 0D1E                   i2l1935 1636                   u303_20 1012  
                 i2l1929 0D76                   i2l1793 1234                   u303_21 100E  
                 i2l1795 123C                   i2l1797 1240                   i2l1799 125A  
                 u304_20 14BC                   u304_21 14B8                   u305_20 14CA  
                 u305_21 14C6                   u290_20 153C                   u290_21 1538  
    __size_of_IRQ_Timer0 09CC      task_create@new_task 012F                   u291_20 0DD6  
                 u291_21 0DD2                   u292_20 0DE4                   u292_21 0DE0  
                 u293_20 0DF2                   u293_21 0DEE                   u294_20 0E00  
                 u294_21 0DFC                   u295_20 0E0E                   u295_21 0E0A  
                 u296_20 0E2A                   u296_21 0E26                   u297_20 0E68  
                 u289_20 1576                   u297_21 0E64                   u289_21 1572  
                 u298_20 0E76                   u298_21 0E72                   u299_20 0FBE  
                 u299_21 0FBA                   _STATUS 000FD8                   _STKPTR 000FFC  
           ?_task_create 0129                   ___wmul 159C   __end_ofi2_rr_scheduler 12A0  
              ??___lwmod 009B        __end_of_SRAMalloc 0AFA           _controle_delay 0CE0  
                 clear_0 143A                   clear_1 144C                   clear_2 1458  
                 _task_1 1568                   _task_2 152E                   _task_3 0DBA  
                 _task_4 1468                   _task_5 0FB0                   _task_6 14AE  
       __end_of_sem_init 141A         __end_of_sem_wait 053E         __end_of_sem_post 0C06  
           __pdataCOMRAM 004A         __end_of_os_start 1650     __end_of_config_tasks 1152  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
            ?__SRAMmerge 0123               __accesstop 0080  __end_of__initialization 145E  
          ___rparam_used 000001           __pcstackCOMRAM 0027   __end_of_controle_delay 0DBA  
       task_create@prior 0129          ?i2_rr_scheduler 002D          __SRAMmerge@uSum 0126  
              ?i1___wmul 0097                ?i2___wmul 0027               __pbssBANK0 009D  
          __uDynamicHeap 0383       __size_of_scheduler 000E                  ?___wmul 0123  
        ?_controle_delay 0027      __size_of__SRAMmerge 00DA             ??_IRQ_Timer0 0035  
     __size_of_pipe_read 008C       __size_of_os_config 003A                  ?_task_1 0027  
                ?_task_2 0027                  ?_task_3 0027                  ?_task_4 0027  
                ?_task_5 0027                  ?_task_6 0027       __size_of_task_idle 0008  
             ??i1___wmul 009B               ??i2___wmul 002B                  i2u82_40 125A  
                i2u82_41 1256                  i2u91_40 0D1E                  i2u83_40 1296  
                i2u91_41 0D1A                  i2u83_41 1292                  i2u92_40 0D76  
                i2u92_41 0D72                  i2u93_40 0DB8                  i2u93_41 0DB4  
   __size_of_pipe_create 0058              sem_init@sem 0123       __end_of_IRQ_Timer0 09D4  
           ?i2_scheduler 0033              pipe_write@p 011C              sem_wait@sem 0044  
                __Hparam 0000              sem_post@sem 011C                ?_sem_init 0123  
              ?_sem_wait 0044                ?_sem_post 011C                  __Lparam 0000  
   __size_of_task_create 0072                ?_os_start 0027          __size_of___wmul 0028  
                ___lwmod 1308                  _f_aptos 0179                  __pcinit 141A  
  __size_of_config_tasks 0086                  __ramtop 0600          __size_of_task_1 0034  
        __size_of_task_2 003A          __size_of_task_3 00CA          __size_of_task_4 0046  
        __size_of_task_5 0090          __size_of_task_6 0046            ?_SRAMInitHeap 0027  
                __ptext0 0E84                  __ptext1 1644                  __ptext2 14F4  
                __ptext3 1152                  __ptext4 159C                  __ptext5 1612  
                __ptext6 10CC                  __ptext7 13C6                  __ptext8 136E  
                __ptext9 09D4                _T0CONbits 000FD5                  _quantum 004A  
      __end_of_scheduler 1636           __pintcode_body 053E     end_of_initialization 145E  
      __end_of_pipe_read 10CC        __end_of_os_config 152E               _pipe_error 00A5  
      __end_of_task_idle 1658                  int_func 053E      i2___wmul@multiplier 0027  
             _pipe_write 0F1C    __end_of_setup_timer_0 1628               ??_sem_init 0127  
             ??_sem_wait 0046               ??_sem_post 011E             _config_tasks 10CC  
             ??_os_start 0123                  postdec1 000FE5                  postdec2 000FDD  
          ?_rr_scheduler 003C                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE            pipe_read@data 0042    i1___wmul@multiplicand 0099  
         ??_SRAMInitHeap 0123                _PORTBbits 000F81                _PORTDbits 000F83  
              _SRAMalloc 09D4                _TRISBbits 000F93                _TRISDbits 000F95  
           ??__SRAMmerge 0125            sem_init@valor 0125         ??i2_rr_scheduler 002F  
         ??_rr_scheduler 003E       __end_of__SRAMmerge 0CE0           __end_of___wmul 15C4  
          __pidataCOMRAM 1658           __end_of_task_1 159C           __end_of_task_2 1568  
         __end_of_task_3 0E84           __end_of_task_4 14AE           __end_of_task_5 1040  
         __end_of_task_6 14F4         i2___wmul@product 002B               ?_SRAMalloc 012B  
    start_initialization 141A       SRAMalloc@segHeader 0132        __size_ofi1___wmul 0028  
      __size_ofi2___wmul 0026         __SRAMmerge@pSegA 0123         __SRAMmerge@pSegB 0127  
       __SRAMmerge@uSegA 0129         __SRAMmerge@uSegB 012A              ?_pipe_write 011C  
       ??_controle_delay 002D     __size_ofi2_scheduler 000E                 ??___wmul 0127  
               ??_task_1 0035                 ??_task_2 0035                 ??_task_3 003C  
               ??_task_4 003C                 ??_task_5 004A                 ??_task_6 009D  
            __pbssBIGRAM 0179              __pbssCOMRAM 0001            __pcstackBANK0 0080  
          __pcstackBANK1 0100          task_create@func 012B     __end_of_SRAMInitHeap 1308  
              __pintcode 0008        __size_of_sem_init 0054        __size_of_sem_wait 052C  
      __size_of_sem_post 010C                 ?___lwmod 0097        __size_of_os_start 000C  
             pipe_read@p 003C              ??_SRAMalloc 012D      __size_of_pipe_write 0094  
          ??_pipe_create 013A     __end_of_rr_scheduler 1234                _scheduler 1628  
         ___wmul@product 0127            ??_task_create 012D                _pipe_igni 00AD  
              _pipe_read 1040                _os_config 14F4             pipe_create@p 0136  
              _sem_motor 0003                 i1u231_20 11EA                 i1u231_21 11E6  
               i1u232_20 122A                 i1u232_21 1226                 i1u233_20 131C  
               i1u233_21 1318                 i1u234_20 133A                 i1u234_21 1336  
               i1u235_20 1350                 i1u235_21 134C                 i1u236_20 003A  
               i1u236_21 0036                 i1u237_20 0278                 i1u237_21 0274  
               i1u238_20 02EA                 i1u238_21 02E6                 i1u239_20 052C  
               i1u239_21 0528                 i2u120_40 0562                 i2u120_41 055E  
               i2u121_40 057A                 i2u121_41 0576                 i2u122_40 071C  
               i2u122_41 0718                 i2u123_40 0786                 i2u123_41 0782  
               i2u124_40 09AA                 i2u124_41 09A6                 i1u278_20 0B14  
               i1u278_21 0B10                 i1u279_20 0BF4                 i1u279_21 0BF0  
              _task_idle 1650                fp__task_1 0000                fp__task_2 0000  
              fp__task_3 0000                fp__task_4 0000                fp__task_5 0000  
              fp__task_6 0000        ___wmul@multiplier 0123                 i1___wmul 15C4  
               i2___wmul 15EC      __end_of_pipe_create 13C6               ?_scheduler 0042  
             ?_pipe_read 003C               ?_os_config 0027                 __Hrparam 0000  
             ?_task_idle 0027                 __Lrparam 0000      __end_of_task_create 11C4  
  i2___wmul@multiplicand 0029         __size_of___lwmod 0066    rr_scheduler@next_task 0040  
        pipe_create@size 0138   __size_of_setup_timer_0 0016    __size_of_SRAMInitHeap 0068  
               __ptext10 0C06                 __ptext11 12A0                 __ptext20 152E  
               __ptext12 1650                 __ptext21 0AFA                 __ptext13 1568  
               __ptext30 0CE0                 __ptext22 0DBA                 __ptext14 0012  
               __ptext31 15EC                 __ptext23 1040                 __ptext15 1628  
               __ptext32 0000                 __ptext24 1468                 __ptext16 11C4  
               __ptext25 0FB0                 __ptext17 15C4                 __ptext26 14AE  
               __ptext18 0F1C                 __ptext19 1308                 __ptext28 1636  
               __ptext29 1234            __size_of_main 0098             ??_pipe_write 011F  
               _sem_igni 0015                 _sem_init 13C6                 _sem_wait 0012  
               _sem_post 0AFA                 _os_start 1644                 int$flags 004C  
           _SRAMInitHeap 12A0    __size_of_rr_scheduler 0070               _INTCONbits 000FF2  
     __end_of_pipe_write 0FB0              _pipe_create 136E                 intlevel1 0000  
               intlevel2 0000            ??i2_scheduler 0035         ___lwmod@dividend 0097  
            ??_scheduler 0044              _task_create 1152              ??_pipe_read 003E  
            ??_os_config 0179              ??_task_idle 0123            _setup_timer_0 1612  
        controle_delay@i 002F             _rr_scheduler 11C4               _IRQ_Timer0 0008  
__size_ofi2_rr_scheduler 006C          ___lwmod@divisor 0099          ___lwmod@counter 009B  
       _pipe_motor_error 009D           ?_setup_timer_0 0027            ?_config_tasks 0027  
