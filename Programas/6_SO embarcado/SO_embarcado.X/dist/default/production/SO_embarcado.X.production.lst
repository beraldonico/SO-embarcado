

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Dec 14 20:21:08 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4520 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  00173C                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _quantum
    89  00173C  0005               	dw	5
    90  0000                     _TOS	set	4093
    91  0000                     _TRISDbits	set	3989
    92  0000                     _PORTDbits	set	3971
    93  0000                     _T0CONbits	set	4053
    94  0000                     _TMR0L	set	4054
    95  0000                     _STKPTR	set	4092
    96  0000                     _TOSH	set	4094
    97  0000                     _TOSL	set	4093
    98  0000                     _TOSU	set	4095
    99  0000                     _STATUS	set	4056
   100  0000                     _BSR	set	4064
   101  0000                     _WREG	set	4072
   102  0000                     _INTCONbits	set	4082
   103                           
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107  0014F4                     __pcinit:
   108                           	callstack 0
   109  0014F4                     start_initialization:
   110                           	callstack 0
   111  0014F4                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Initialize objects allocated to COMRAM (2 bytes)
   115                           ; load TBLPTR registers with __pidataCOMRAM
   116  0014F4  0E3C               	movlw	low __pidataCOMRAM
   117  0014F6  6EF6               	movwf	tblptrl,c
   118  0014F8  0E17               	movlw	high __pidataCOMRAM
   119  0014FA  6EF7               	movwf	tblptrh,c
   120  0014FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   121  0014FE  6EF8               	movwf	tblptru,c
   122  001500  0009               	tblrd		*+	;fetch initializer
   123  001502  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   124  001506  0009               	tblrd		*+	;fetch initializer
   125  001508  CFF5 F040          	movff	tablat,__pdataCOMRAM+1
   126                           
   127                           ; Clear objects allocated to BIGRAM (920 bytes)
   128  00150C  EE01  F065         	lfsr	0,__pbssBIGRAM
   129  001510  EE13 F098          	lfsr	1,920
   130  001514                     clear_0:
   131  001514  6AEE               	clrf	postinc0,c
   132  001516  50E5               	movf	postdec1,w,c
   133  001518  50E1               	movf	fsr1l,w,c
   134  00151A  E1FC               	bnz	clear_0
   135  00151C  50E2               	movf	fsr1h,w,c
   136  00151E  E1FA               	bnz	clear_0
   137                           
   138                           ; Clear objects allocated to BANK0 (22 bytes)
   139  001520  EE00  F0BD         	lfsr	0,__pbssBANK0
   140  001524  0E16               	movlw	22
   141  001526                     clear_1:
   142  001526  6AEE               	clrf	postinc0,c
   143  001528  06E8               	decf	wreg,f,c
   144  00152A  E1FD               	bnz	clear_1
   145  00152C                     end_of_initialization:
   146                           	callstack 0
   147  00152C                     __end_of__initialization:
   148                           	callstack 0
   149  00152C  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   150  00152E  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   151  001530  0100               	movlb	0
   152  001532  EF4F  F00A         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	dataCOMRAM
   155  00003F                     __pdataCOMRAM:
   156                           	callstack 0
   157  00003F                     _quantum:
   158                           	callstack 0
   159  00003F                     	ds	2
   160                           
   161                           	psect	bssBANK0
   162  0000BD                     __pbssBANK0:
   163                           	callstack 0
   164  0000BD                     _index:
   165                           	callstack 0
   166  0000BD                     	ds	2
   167  0000BF                     _pipe_teste:
   168                           	callstack 0
   169  0000BF                     	ds	10
   170  0000C9                     _sem_teste:
   171                           	callstack 0
   172  0000C9                     	ds	10
   173                           
   174                           	psect	bssBIGRAM
   175  000165                     __pbssBIGRAM:
   176                           	callstack 0
   177  000165                     _f_aptos:
   178                           	callstack 0
   179  000165                     	ds	408
   180  0002FD                     __uDynamicHeap:
   181                           	callstack 0
   182  0002FD                     	ds	512
   183                           
   184                           	psect	cstackBANK1
   185  000100                     __pcstackBANK1:
   186                           	callstack 0
   187  000100                     pipe_create@p:
   188                           	callstack 0
   189  000100                     task_create@new_task:
   190                           	callstack 0
   191                           
   192                           ; 101 bytes @ 0x0
   193  000100                     	ds	2
   194  000102                     pipe_create@size:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0x2
   198  000102                     	ds	99
   199                           
   200                           	psect	cstackBANK0
   201  000080                     __pcstackBANK0:
   202                           	callstack 0
   203  000080                     	ds	22
   204  000096                     ?_who:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x16
   208  000096                     	ds	8
   209  00009E                     sem_wait@sem:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x1E
   213  00009E                     	ds	2
   214  0000A0                     ?i1___wmul:
   215                           	callstack 0
   216  0000A0                     i1___wmul@multiplier:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x20
   220  0000A0                     	ds	2
   221  0000A2                     i1___wmul@multiplicand:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x22
   225  0000A2                     	ds	2
   226  0000A4                     ?_rr_scheduler:
   227                           	callstack 0
   228  0000A4                     sem_post@sem:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x24
   232  0000A4                     	ds	2
   233  0000A6                     ?_scheduler:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x26
   237  0000A6                     	ds	2
   238  0000A8                     task_delay@ms:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x28
   242  0000A8                     	ds	2
   243  0000AA                     ??_task_idle:
   244  0000AA                     ?___wmul:
   245                           	callstack 0
   246  0000AA                     sem_init@sem:
   247                           	callstack 0
   248  0000AA                     SRAMInitHeap@pHeap:
   249                           	callstack 0
   250  0000AA                     __SRAMmerge@pSegA:
   251                           	callstack 0
   252  0000AA                     ___wmul@multiplier:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x2A
   256  0000AA                     	ds	2
   257  0000AC                     ??__SRAMmerge:
   258  0000AC                     sem_init@valor:
   259                           	callstack 0
   260  0000AC                     SRAMInitHeap@count:
   261                           	callstack 0
   262  0000AC                     ___wmul@multiplicand:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x2C
   266  0000AC                     	ds	1
   267  0000AD                     __SRAMmerge@pSegB:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x2D
   271  0000AD                     	ds	1
   272  0000AE                     ___wmul@product:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x2E
   276  0000AE                     	ds	1
   277  0000AF                     __SRAMmerge@uSum:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x2F
   281  0000AF                     	ds	1
   282  0000B0                     __SRAMmerge@uSegA:
   283                           	callstack 0
   284  0000B0                     task_create@prior:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x30
   288  0000B0                     	ds	1
   289  0000B1                     __SRAMmerge@uSegB:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x31
   293  0000B1                     	ds	1
   294  0000B2                     ?_SRAMalloc:
   295                           	callstack 0
   296  0000B2                     task_create@func:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x32
   300  0000B2                     	ds	2
   301  0000B4                     ??_task_create:
   302  0000B4                     ??_SRAMalloc:
   303                           
   304                           ; 1 bytes @ 0x34
   305  0000B4                     	ds	2
   306  0000B6                     SRAMalloc@temp:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x36
   310  0000B6                     	ds	2
   311  0000B8                     SRAMalloc@segLen:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x38
   315  0000B8                     	ds	1
   316  0000B9                     SRAMalloc@segHeader:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x39
   320  0000B9                     	ds	1
   321  0000BA                     SRAMalloc@nBytes:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x3A
   325  0000BA                     	ds	1
   326  0000BB                     SRAMalloc@pHeap:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x3B
   330  0000BB                     	ds	2
   331  0000BD                     
   332                           ; 1 bytes @ 0x3D
   333                           
   334                           	psect	cstackCOMRAM
   335  000001                     __pcstackCOMRAM:
   336                           	callstack 0
   337  000001                     ?i2___wmul:
   338                           	callstack 0
   339  000001                     i2___wmul@multiplier:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x0
   343  000001                     	ds	2
   344  000003                     i2___wmul@multiplicand:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000003                     	ds	2
   349  000005                     i2___wmul@product:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x4
   353  000005                     	ds	2
   354  000007                     ?i2_rr_scheduler:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x6
   358  000007                     	ds	2
   359  000009                     controle_delay@i:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x8
   363  000009                     	ds	2
   364  00000B                     i2rr_scheduler@next_task:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0xA
   368  00000B                     	ds	2
   369  00000D                     ?i2_scheduler:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0xC
   373  00000D                     	ds	2
   374  00000F                     ??_IRQ_Timer0:
   375  00000F                     
   376                           ; 1 bytes @ 0xE
   377  00000F                     	ds	27
   378  00002A                     
   379                           ; 1 bytes @ 0x29
   380  00002A                     	ds	6
   381  000030                     ??_sem_wait:
   382                           
   383                           ; 1 bytes @ 0x2F
   384  000030                     	ds	4
   385  000034                     ??_task_1:
   386                           
   387                           ; 1 bytes @ 0x33
   388  000034                     	ds	1
   389  000035                     ??_task_2:
   390                           
   391                           ; 1 bytes @ 0x34
   392  000035                     	ds	1
   393  000036                     i1___wmul@product:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x35
   397  000036                     	ds	2
   398  000038                     ??_sem_post:
   399  000038                     
   400                           ; 1 bytes @ 0x37
   401  000038                     	ds	2
   402  00003A                     rr_scheduler@next_task:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x39
   406  00003A                     	ds	2
   407  00003C                     ??_task_delay:
   408                           
   409                           ; 1 bytes @ 0x3B
   410  00003C                     	ds	2
   411  00003E                     ??_task_3:
   412                           
   413                           ; 1 bytes @ 0x3D
   414  00003E                     	ds	1
   415                           
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 19 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   435 ;;      Params:         0       0       0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels required when called:   14
   441 ;; This function calls:
   442 ;;		_SRAMInitHeap
   443 ;;		_os_config
   444 ;;		_os_start
   445 ;;		_task_create
   446 ;;		_task_idle
   447 ;; This function is called by:
   448 ;;		Startup code after reset
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text0
   453  00149E                     __ptext0:
   454                           	callstack 0
   455  00149E                     _main:
   456                           	callstack 17
   457  00149E                     
   458                           ;main.c: 22:    SRAMInitHeap();
   459  00149E  EC1B  F00A         	call	_SRAMInitHeap	;wreg free
   460  0014A2                     
   461                           ;main.c: 25:    os_config();
   462  0014A2  ECDC  F00A         	call	_os_config	;wreg free
   463  0014A6                     
   464                           ;main.c: 28:    task_create(2, &task_1);
   465  0014A6  0E00               	movlw	0
   466  0014A8  0100               	movlb	0	; () banked
   467  0014AA  6FB1               	movwf	(task_create@prior+1)& (0+255),b
   468  0014AC  0E02               	movlw	2
   469  0014AE  6FB0               	movwf	task_create@prior& (0+255),b
   470  0014B0  0E36               	movlw	low _task_1
   471  0014B2  6FB2               	movwf	task_create@func& (0+255),b
   472  0014B4  0E15               	movlw	high _task_1
   473  0014B6  6FB3               	movwf	(task_create@func+1)& (0+255),b
   474  0014B8  EC04  F009         	call	_task_create	;wreg free
   475  0014BC                     
   476                           ;main.c: 29:    task_create(2, &task_2);
   477  0014BC  0E00               	movlw	0
   478  0014BE  0100               	movlb	0	; () banked
   479  0014C0  6FB1               	movwf	(task_create@prior+1)& (0+255),b
   480  0014C2  0E02               	movlw	2
   481  0014C4  6FB0               	movwf	task_create@prior& (0+255),b
   482  0014C6  0EA6               	movlw	low _task_2
   483  0014C8  6FB2               	movwf	task_create@func& (0+255),b
   484  0014CA  0E16               	movlw	high _task_2
   485  0014CC  6FB3               	movwf	(task_create@func+1)& (0+255),b
   486  0014CE  EC04  F009         	call	_task_create	;wreg free
   487  0014D2                     
   488                           ;main.c: 30:    task_create(3, &task_3);
   489  0014D2  0E00               	movlw	0
   490  0014D4  0100               	movlb	0	; () banked
   491  0014D6  6FB1               	movwf	(task_create@prior+1)& (0+255),b
   492  0014D8  0E03               	movlw	3
   493  0014DA  6FB0               	movwf	task_create@prior& (0+255),b
   494  0014DC  0ECC               	movlw	low _task_3
   495  0014DE  6FB2               	movwf	task_create@func& (0+255),b
   496  0014E0  0E13               	movlw	high _task_3
   497  0014E2  6FB3               	movwf	(task_create@func+1)& (0+255),b
   498  0014E4  EC04  F009         	call	_task_create	;wreg free
   499  0014E8                     
   500                           ;main.c: 33:    os_start();
   501  0014E8  EC93  F00B         	call	_os_start	;wreg free
   502  0014EC                     
   503                           ;main.c: 35:  task_idle();
   504  0014EC  EC14  F00B         	call	_task_idle	;wreg free
   505  0014F0  EF07  F000         	goto	start
   506  0014F4                     __end_of_main:
   507                           	callstack 0
   508                           
   509 ;; *************** function _os_start *****************
   510 ;; Defined at:
   511 ;;		line 63 in file "kernel.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   525 ;;      Params:         0       0       0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:    9
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text1
   540  001726                     __ptext1:
   541                           	callstack 0
   542  001726                     _os_start:
   543                           	callstack 21
   544  001726                     
   545                           ;kernel.c: 64:     INTCONbits.GIE = 1;
   546  001726  8EF2               	bsf	242,7,c	;volatile
   547  001728                     
   548                           ;kernel.c: 66:     TMR0L = 6;
   549  001728  0E06               	movlw	6
   550  00172A  6ED6               	movwf	214,c	;volatile
   551  00172C                     
   552                           ;kernel.c: 67:     INTCONbits.TMR0IF = 0;
   553  00172C  94F2               	bcf	242,2,c	;volatile
   554  00172E                     
   555                           ;kernel.c: 68:  T0CONbits.TMR0ON = 1;
   556  00172E  8ED5               	bsf	213,7,c	;volatile
   557  001730  0012               	return		;funcret
   558  001732                     __end_of_os_start:
   559                           	callstack 0
   560                           
   561 ;; *************** function _os_config *****************
   562 ;; Defined at:
   563 ;;		line 74 in file "kernel.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:   13
   584 ;; This function calls:
   585 ;;		_config_tasks
   586 ;;		_setup_timer_0
   587 ;;		_task_create
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text2
   594  0015B8                     __ptext2:
   595                           	callstack 0
   596  0015B8                     _os_config:
   597                           	callstack 17
   598  0015B8                     
   599                           ;kernel.c: 79:  T0CONbits.TMR0ON = 0;
   600  0015B8  9ED5               	bcf	213,7,c	;volatile
   601                           
   602                           ;kernel.c: 81:     f_aptos.task_running = 0;
   603  0015BA  0E00               	movlw	0
   604  0015BC  CFE8 F2FB          	movff	wreg,_f_aptos+406
   605  0015C0  0E00               	movlw	0
   606  0015C2  CFE8 F2FC          	movff	wreg,_f_aptos+407
   607                           
   608                           ;kernel.c: 82:     f_aptos.ready_queue_size = 0;
   609  0015C6  0E00               	movlw	0
   610  0015C8  CFE8 F2F9          	movff	wreg,_f_aptos+404
   611  0015CC  0E00               	movlw	0
   612  0015CE  CFE8 F2FA          	movff	wreg,_f_aptos+405
   613  0015D2                     
   614                           ;kernel.c: 84:     setup_timer_0();
   615  0015D2  EC7A  F00B         	call	_setup_timer_0	;wreg free
   616  0015D6                     
   617                           ;kernel.c: 86:     task_create(0, &task_idle);
   618  0015D6  0E00               	movlw	0
   619  0015D8  0100               	movlb	0	; () banked
   620  0015DA  6FB1               	movwf	(task_create@prior+1)& (0+255),b
   621  0015DC  0E00               	movlw	0
   622  0015DE  6FB0               	movwf	task_create@prior& (0+255),b
   623  0015E0  0E28               	movlw	low _task_idle
   624  0015E2  6FB2               	movwf	task_create@func& (0+255),b
   625  0015E4  0E16               	movlw	high _task_idle
   626  0015E6  6FB3               	movwf	(task_create@func+1)& (0+255),b
   627  0015E8  EC04  F009         	call	_task_create	;wreg free
   628  0015EC                     
   629                           ;kernel.c: 88:     config_tasks();
   630  0015EC  ECF9  F00A         	call	_config_tasks	;wreg free
   631  0015F0  0012               	return		;funcret
   632  0015F2                     __end_of_os_config:
   633                           	callstack 0
   634                           
   635 ;; *************** function _task_create *****************
   636 ;; Defined at:
   637 ;;		line 45 in file "kernel.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  prior           2   48[BANK0 ] unsigned int 
   640 ;;  func            2   50[BANK0 ] PTR FTN()void 
   641 ;;		 -> task_idle(1), task_3(1), task_2(1), task_1(1), 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  new_task      101    0[BANK1 ] struct tcb
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   653 ;;      Params:         0       4       0       0       0       0       0
   654 ;;      Locals:         0       0     101       0       0       0       0
   655 ;;      Temps:          0       2       0       0       0       0       0
   656 ;;      Totals:         0       6     101       0       0       0       0
   657 ;;Total ram usage:      107 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:   10
   660 ;; This function calls:
   661 ;;		___wmul
   662 ;; This function is called by:
   663 ;;		_main
   664 ;;		_os_config
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669  001208                     __ptext3:
   670                           	callstack 0
   671  001208                     _task_create:
   672                           	callstack 20
   673  001208                     
   674                           ;kernel.c: 45: void task_create(u_int prior, task_ptr func);kernel.c: 46: {;kernel.c: 47
      +                          :    tcb_t new_task;;kernel.c: 49:    new_task.task_id = f_aptos.ready_queue_size + 1;
   675  001208  EE22  F0F9         	lfsr	2,_f_aptos+404
   676  00120C  CFDE F0B4          	movff	postinc2,??_task_create
   677  001210  CFDD F0B5          	movff	postdec2,??_task_create+1
   678  001214  0E01               	movlw	1
   679  001216  0100               	movlb	0	; () banked
   680  001218  25B4               	addwf	??_task_create& (0+255),w,b
   681  00121A  0101               	movlb	1	; () banked
   682  00121C  6F00               	movwf	task_create@new_task& (0+255),b
   683  00121E  0E00               	movlw	0
   684  001220  0100               	movlb	0	; () banked
   685  001222  21B5               	addwfc	(??_task_create+1)& (0+255),w,b
   686  001224  0101               	movlb	1	; () banked
   687  001226  6F01               	movwf	(task_create@new_task+1)& (0+255),b
   688  001228                     
   689                           ; BSR set to: 1
   690                           ;kernel.c: 50:    new_task.task_prior = prior;
   691  001228  C0B0  F103         	movff	task_create@prior,task_create@new_task+3
   692  00122C  C0B1  F104         	movff	task_create@prior+1,task_create@new_task+4
   693  001230                     
   694                           ; BSR set to: 1
   695                           ;kernel.c: 51:    new_task.task_state = READY;
   696  001230  0E00               	movlw	0
   697  001232  6F02               	movwf	(task_create@new_task+2)& (0+255),b
   698  001234                     
   699                           ; BSR set to: 1
   700                           ;kernel.c: 52:    new_task.task_func = func;
   701  001234  C0B2  F105         	movff	task_create@func,task_create@new_task+5
   702  001238  C0B3  F106         	movff	task_create@func+1,task_create@new_task+6
   703  00123C                     
   704                           ; BSR set to: 1
   705                           ;kernel.c: 53:    new_task.task_stack.size = 0;
   706  00123C  0E00               	movlw	0
   707  00123E  6F5F               	movwf	(task_create@new_task+95)& (0+255),b
   708  001240  0E00               	movlw	0
   709  001242  6F5E               	movwf	(task_create@new_task+94)& (0+255),b
   710  001244                     
   711                           ; BSR set to: 1
   712                           ;kernel.c: 56:    f_aptos.ready_queue[f_aptos.ready_queue_size] = new_task;
   713  001244  EE21  F000         	lfsr	2,task_create@new_task
   714  001248  C2F9  F0AA         	movff	_f_aptos+404,___wmul@multiplier
   715  00124C  C2FA  F0AB         	movff	_f_aptos+405,___wmul@multiplier+1
   716  001250  0E00               	movlw	0
   717  001252  0100               	movlb	0	; () banked
   718  001254  6FAD               	movwf	(___wmul@multiplicand+1)& (0+255),b
   719  001256  0E65               	movlw	101
   720  001258  6FAC               	movwf	___wmul@multiplicand& (0+255),b
   721  00125A  EC2B  F00B         	call	___wmul	;wreg free
   722  00125E  0E65               	movlw	low _f_aptos
   723  001260  0100               	movlb	0	; () banked
   724  001262  25AA               	addwf	?___wmul& (0+255),w,b
   725  001264  6EE1               	movwf	fsr1l,c
   726  001266  0E01               	movlw	high _f_aptos
   727  001268  21AB               	addwfc	(?___wmul+1)& (0+255),w,b
   728  00126A  6EE2               	movwf	fsr1h,c
   729  00126C  0E64               	movlw	100
   730  00126E                     u851:
   731  00126E  CFDB FFE3          	movff	plusw2,plusw1
   732  001272  06E8               	decf	wreg,f,c
   733  001274  E2FC               	bc	u851
   734  001276                     
   735                           ; BSR set to: 0
   736                           ;kernel.c: 57:    f_aptos.ready_queue_size++;
   737  001276  EE22  F0F9         	lfsr	2,_f_aptos+404
   738  00127A  2ADE               	incf	postinc2,f,c
   739  00127C  0E00               	movlw	0
   740  00127E  22DD               	addwfc	postdec2,f,c
   741  001280                     
   742                           ; BSR set to: 0
   743  001280  0012               	return		;funcret
   744  001282                     __end_of_task_create:
   745                           	callstack 0
   746                           
   747 ;; *************** function ___wmul *****************
   748 ;; Defined at:
   749 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  multiplier      2   42[BANK0 ] unsigned int 
   752 ;;  multiplicand    2   44[BANK0 ] unsigned int 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  product         2   46[BANK0 ] unsigned int 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2   42[BANK0 ] unsigned int 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0, prodl, prodh
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   764 ;;      Params:         0       4       0       0       0       0       0
   765 ;;      Locals:         0       2       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0
   767 ;;      Totals:         0       6       0       0       0       0       0
   768 ;;Total ram usage:        6 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; Hardware stack levels required when called:    9
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_task_create
   775 ;;		_get_task_id
   776 ;;		_task_yield
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text4
   781  001656                     __ptext4:
   782                           	callstack 0
   783  001656                     ___wmul:
   784                           	callstack 20
   785  001656  0100               	movlb	0	; () banked
   786  001658  51AA               	movf	___wmul@multiplier& (0+255),w,b
   787  00165A  03AC               	mulwf	___wmul@multiplicand& (0+255),b
   788  00165C  CFF3 F0AE          	movff	prodl,___wmul@product
   789  001660  CFF4 F0AF          	movff	prodh,___wmul@product+1
   790  001664  51AA               	movf	___wmul@multiplier& (0+255),w,b
   791  001666  03AD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   792  001668  50F3               	movf	243,w,c
   793  00166A  27AF               	addwf	(___wmul@product+1)& (0+255),f,b
   794  00166C  51AB               	movf	(___wmul@multiplier+1)& (0+255),w,b
   795  00166E  03AC               	mulwf	___wmul@multiplicand& (0+255),b
   796  001670  50F3               	movf	243,w,c
   797  001672  27AF               	addwf	(___wmul@product+1)& (0+255),f,b
   798  001674                     
   799                           ; BSR set to: 0
   800  001674  C0AE  F0AA         	movff	___wmul@product,?___wmul
   801  001678  C0AF  F0AB         	movff	___wmul@product+1,?___wmul+1
   802  00167C                     
   803                           ; BSR set to: 0
   804  00167C  0012               	return		;funcret
   805  00167E                     __end_of___wmul:
   806                           	callstack 0
   807                           
   808 ;; *************** function _setup_timer_0 *****************
   809 ;; Defined at:
   810 ;;		line 16 in file "timer.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   824 ;;      Params:         0       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    9
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_os_config
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text5
   839  0016F4                     __ptext5:
   840                           	callstack 0
   841  0016F4                     _setup_timer_0:
   842                           	callstack 20
   843  0016F4                     
   844                           ;timer.c: 19:    INTCONbits.TMR0IE = 1;
   845  0016F4  8AF2               	bsf	242,5,c	;volatile
   846                           
   847                           ;timer.c: 20:    INTCONbits.PEIE = 1;
   848  0016F6  8CF2               	bsf	242,6,c	;volatile
   849                           
   850                           ;timer.c: 21:    T0CONbits.T0CS = 0;
   851  0016F8  9AD5               	bcf	213,5,c	;volatile
   852                           
   853                           ;timer.c: 22:    T0CONbits.PSA = 0;
   854  0016FA  96D5               	bcf	213,3,c	;volatile
   855  0016FC                     
   856                           ;timer.c: 23:    T0CONbits.T0PS = 0b001;
   857  0016FC  50D5               	movf	213,w,c	;volatile
   858  0016FE  0BF8               	andlw	-8
   859  001700  0901               	iorlw	1
   860  001702  6ED5               	movwf	213,c	;volatile
   861                           
   862                           ;timer.c: 24:    TMR0L = 6;
   863  001704  0E06               	movlw	6
   864  001706  6ED6               	movwf	214,c	;volatile
   865  001708  0012               	return		;funcret
   866  00170A                     __end_of_setup_timer_0:
   867                           	callstack 0
   868                           
   869 ;; *************** function _config_tasks *****************
   870 ;; Defined at:
   871 ;;		line 11 in file "tasks.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   885 ;;      Params:         0       0       0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:   12
   892 ;; This function calls:
   893 ;;		_pipe_create
   894 ;;		_sem_init
   895 ;; This function is called by:
   896 ;;		_os_config
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text6
   901  0015F2                     __ptext6:
   902                           	callstack 0
   903  0015F2                     _config_tasks:
   904                           	callstack 17
   905  0015F2                     
   906                           ;tasks.c: 13:  TRISDbits.RD0 = 0;
   907  0015F2  9095               	bcf	149,0,c	;volatile
   908                           
   909                           ;tasks.c: 14:  TRISDbits.RD1 = 0;
   910  0015F4  9295               	bcf	149,1,c	;volatile
   911                           
   912                           ;tasks.c: 15:  TRISDbits.RD2 = 0;
   913  0015F6  9495               	bcf	149,2,c	;volatile
   914                           
   915                           ;tasks.c: 16:  TRISDbits.RD3 = 0;
   916  0015F8  9695               	bcf	149,3,c	;volatile
   917  0015FA                     
   918                           ;tasks.c: 17:  sem_init(&sem_teste, 0);
   919  0015FA  0EC9               	movlw	low _sem_teste
   920  0015FC  0100               	movlb	0	; () banked
   921  0015FE  6FAA               	movwf	sem_init@sem& (0+255),b
   922  001600  0E00               	movlw	high _sem_teste
   923  001602  6FAB               	movwf	(sem_init@sem+1)& (0+255),b
   924  001604  0E00               	movlw	0
   925  001606  6FAD               	movwf	(sem_init@valor+1)& (0+255),b
   926  001608  0E00               	movlw	0
   927  00160A  6FAC               	movwf	sem_init@valor& (0+255),b
   928  00160C  ECBC  F00A         	call	_sem_init	;wreg free
   929  001610                     
   930                           ;tasks.c: 18:  pipe_create(&pipe_teste, 2);
   931  001610  0EBF               	movlw	low _pipe_teste
   932  001612  0101               	movlb	1	; () banked
   933  001614  6F00               	movwf	pipe_create@p& (0+255),b
   934  001616  0E00               	movlw	high _pipe_teste
   935  001618  6F01               	movwf	(pipe_create@p+1)& (0+255),b
   936  00161A  0E00               	movlw	0
   937  00161C  6F03               	movwf	(pipe_create@size+1)& (0+255),b
   938  00161E  0E02               	movlw	2
   939  001620  6F02               	movwf	pipe_create@size& (0+255),b
   940  001622  EC79  F009         	call	_pipe_create	;wreg free
   941  001626  0012               	return		;funcret
   942  001628                     __end_of_config_tasks:
   943                           	callstack 0
   944                           
   945 ;; *************** function _sem_init *****************
   946 ;; Defined at:
   947 ;;		line 9 in file "semaforo.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  sem             2   42[BANK0 ] PTR struct semaforo
   950 ;;		 -> sem_teste(10), 
   951 ;;  valor           2   44[BANK0 ] int 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   963 ;;      Params:         0       4       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0
   966 ;;      Totals:         0       4       0       0       0       0       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    9
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_config_tasks
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text7
   978  001578                     __ptext7:
   979                           	callstack 0
   980  001578                     _sem_init:
   981                           	callstack 19
   982  001578                     
   983                           ;semaforo.c: 9: void sem_init(sem_t *sem, int valor);semaforo.c: 10: {;semaforo.c: 11:  
      +                            INTCONbits.GIE = 0;
   984  001578  9EF2               	bcf	242,7,c	;volatile
   985  00157A                     
   986                           ;semaforo.c: 14:    sem->contadorSem = valor;
   987  00157A  C0AA  FFD9         	movff	sem_init@sem,fsr2l
   988  00157E  C0AB  FFDA         	movff	sem_init@sem+1,fsr2h
   989  001582  C0AC  FFDE         	movff	sem_init@valor,postinc2
   990  001586  C0AD  FFDD         	movff	sem_init@valor+1,postdec2
   991  00158A                     
   992                           ;semaforo.c: 15:    sem->fila.queue = 0;
   993  00158A  0100               	movlb	0	; () banked
   994  00158C  EE20 F006          	lfsr	2,6
   995  001590  51AA               	movf	sem_init@sem& (0+255),w,b
   996  001592  26D9               	addwf	fsr2l,f,c
   997  001594  51AB               	movf	(sem_init@sem+1)& (0+255),w,b
   998  001596  22DA               	addwfc	fsr2h,f,c
   999  001598  0E00               	movlw	0
  1000  00159A  6EDE               	movwf	postinc2,c
  1001  00159C  0E00               	movlw	0
  1002  00159E  6EDD               	movwf	postdec2,c
  1003  0015A0                     
  1004                           ; BSR set to: 0
  1005                           ;semaforo.c: 16:    sem->fila.next_to_free = 0;
  1006  0015A0  EE20 F008          	lfsr	2,8
  1007  0015A4  51AA               	movf	sem_init@sem& (0+255),w,b
  1008  0015A6  26D9               	addwf	fsr2l,f,c
  1009  0015A8  51AB               	movf	(sem_init@sem+1)& (0+255),w,b
  1010  0015AA  22DA               	addwfc	fsr2h,f,c
  1011  0015AC  0E00               	movlw	0
  1012  0015AE  6EDE               	movwf	postinc2,c
  1013  0015B0  0E00               	movlw	0
  1014  0015B2  6EDD               	movwf	postdec2,c
  1015  0015B4                     
  1016                           ; BSR set to: 0
  1017                           ;semaforo.c: 18:    INTCONbits.GIE = 1;
  1018  0015B4  8EF2               	bsf	242,7,c	;volatile
  1019  0015B6                     
  1020                           ; BSR set to: 0
  1021  0015B6  0012               	return		;funcret
  1022  0015B8                     __end_of_sem_init:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _pipe_create *****************
  1026 ;; Defined at:
  1027 ;;		line 10 in file "pipe.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  p               2    0[BANK1 ] PTR struct pipe
  1030 ;;		 -> pipe_teste(10), 
  1031 ;;  size            2    2[BANK1 ] unsigned int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1043 ;;      Params:         0       0       4       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0
  1046 ;;      Totals:         0       0       4       0       0       0       0
  1047 ;;Total ram usage:        4 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:   11
  1050 ;; This function calls:
  1051 ;;		_SRAMalloc
  1052 ;; This function is called by:
  1053 ;;		_config_tasks
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text8
  1058  0012F2                     __ptext8:
  1059                           	callstack 0
  1060  0012F2                     _pipe_create:
  1061                           	callstack 17
  1062  0012F2                     
  1063                           ;pipe.c: 10: void pipe_create(pipe_t* p, u_int size);pipe.c: 11: {;pipe.c: 12:     p->bu
      +                          ffer = SRAMalloc(size);
  1064  0012F2  0101               	movlb	1	; () banked
  1065  0012F4  5102               	movf	pipe_create@size& (0+255),w,b
  1066  0012F6  EC36  F007         	call	_SRAMalloc
  1067  0012FA  C100  FFD9         	movff	pipe_create@p,fsr2l
  1068  0012FE  C101  FFDA         	movff	pipe_create@p+1,fsr2h
  1069  001302  0100               	movlb	0	; () banked
  1070  001304  C0B2  FFDE         	movff	?_SRAMalloc,postinc2
  1071  001308  C0B3  FFDD         	movff	?_SRAMalloc+1,postdec2
  1072  00130C                     
  1073                           ; BSR set to: 0
  1074                           ;pipe.c: 13:     p->buffer_size = size;
  1075  00130C  0101               	movlb	1	; () banked
  1076  00130E  EE20 F002          	lfsr	2,2
  1077  001312  5100               	movf	pipe_create@p& (0+255),w,b
  1078  001314  26D9               	addwf	fsr2l,f,c
  1079  001316  5101               	movf	(pipe_create@p+1)& (0+255),w,b
  1080  001318  22DA               	addwfc	fsr2h,f,c
  1081  00131A  C102  FFDE         	movff	pipe_create@size,postinc2
  1082  00131E  C103  FFDD         	movff	pipe_create@size+1,postdec2
  1083  001322                     
  1084                           ; BSR set to: 1
  1085                           ;pipe.c: 14:     p->itens = 0;
  1086  001322  EE20 F004          	lfsr	2,4
  1087  001326  5100               	movf	pipe_create@p& (0+255),w,b
  1088  001328  26D9               	addwf	fsr2l,f,c
  1089  00132A  5101               	movf	(pipe_create@p+1)& (0+255),w,b
  1090  00132C  22DA               	addwfc	fsr2h,f,c
  1091  00132E  0E00               	movlw	0
  1092  001330  6EDE               	movwf	postinc2,c
  1093  001332  0E00               	movlw	0
  1094  001334  6EDD               	movwf	postdec2,c
  1095  001336                     
  1096                           ; BSR set to: 1
  1097                           ;pipe.c: 15:     p->pos_read = 0;
  1098  001336  EE20 F006          	lfsr	2,6
  1099  00133A  5100               	movf	pipe_create@p& (0+255),w,b
  1100  00133C  26D9               	addwf	fsr2l,f,c
  1101  00133E  5101               	movf	(pipe_create@p+1)& (0+255),w,b
  1102  001340  22DA               	addwfc	fsr2h,f,c
  1103  001342  0E00               	movlw	0
  1104  001344  6EDE               	movwf	postinc2,c
  1105  001346  0E00               	movlw	0
  1106  001348  6EDD               	movwf	postdec2,c
  1107  00134A                     
  1108                           ; BSR set to: 1
  1109                           ;pipe.c: 16:     p->pos_write = 0;
  1110  00134A  EE20 F008          	lfsr	2,8
  1111  00134E  5100               	movf	pipe_create@p& (0+255),w,b
  1112  001350  26D9               	addwf	fsr2l,f,c
  1113  001352  5101               	movf	(pipe_create@p+1)& (0+255),w,b
  1114  001354  22DA               	addwfc	fsr2h,f,c
  1115  001356  0E00               	movlw	0
  1116  001358  6EDE               	movwf	postinc2,c
  1117  00135A  0E00               	movlw	0
  1118  00135C  6EDD               	movwf	postdec2,c
  1119  00135E                     
  1120                           ; BSR set to: 1
  1121  00135E  0012               	return		;funcret
  1122  001360                     __end_of_pipe_create:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _SRAMalloc *****************
  1126 ;; Defined at:
  1127 ;;		line 146 in file "mm.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  nBytes          1    wreg     unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  nBytes          1   58[BANK0 ] unsigned char 
  1132 ;;  pHeap           2   59[BANK0 ] PTR struct _SALLOC
  1133 ;;		 -> _uDynamicHeap(512), 
  1134 ;;  temp            2   54[BANK0 ] PTR struct _SALLOC
  1135 ;;		 -> _uDynamicHeap(512), 
  1136 ;;  segHeader       1   57[BANK0 ] struct _SALLOC
  1137 ;;  segLen          1   56[BANK0 ] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  2   50[BANK0 ] PTR unsigned char 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1147 ;;      Params:         0       2       0       0       0       0       0
  1148 ;;      Locals:         0       7       0       0       0       0       0
  1149 ;;      Temps:          0       2       0       0       0       0       0
  1150 ;;      Totals:         0      11       0       0       0       0       0
  1151 ;;Total ram usage:       11 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:   10
  1154 ;; This function calls:
  1155 ;;		__SRAMmerge
  1156 ;; This function is called by:
  1157 ;;		_pipe_create
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text9
  1162  000E6C                     __ptext9:
  1163                           	callstack 0
  1164  000E6C                     _SRAMalloc:
  1165                           	callstack 17
  1166                           
  1167                           ; BSR set to: 1
  1168                           ;incstack = 0
  1169                           ;SRAMalloc@nBytes stored from wreg
  1170  000E6C  0100               	movlb	0	; () banked
  1171  000E6E  6FBA               	movwf	SRAMalloc@nBytes& (0+255),b
  1172  000E70                     
  1173                           ;mm.c: 146: u_char* SRAMalloc( u_char nBytes);mm.c: 147: {;mm.c: 148:  SALLOC * pHeap;;m
      +                          m.c: 149:  SALLOC * temp;;mm.c: 150:       SALLOC segHeader;;mm.c: 151:       u_char seg
      +                          Len;;mm.c: 154:  if (nBytes > (0x7F - 1)) return (0);
  1174  000E70  0E7E               	movlw	126
  1175  000E72  0100               	movlb	0	; () banked
  1176  000E74  65BA               	cpfsgt	SRAMalloc@nBytes& (0+255),b
  1177  000E76  EF3F  F007         	goto	u471
  1178  000E7A  EF41  F007         	goto	u470
  1179  000E7E                     u471:
  1180  000E7E  EF47  F007         	goto	l1512
  1181  000E82                     u470:
  1182  000E82                     l1508:
  1183                           
  1184                           ; BSR set to: 0
  1185  000E82  0E00               	movlw	0
  1186  000E84  6FB2               	movwf	?_SRAMalloc& (0+255),b
  1187  000E86  0E00               	movlw	0
  1188  000E88  6FB3               	movwf	(?_SRAMalloc+1)& (0+255),b
  1189  000E8A  EFC8  F007         	goto	l286
  1190  000E8E                     l1512:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;mm.c: 157:  pHeap = (SALLOC *)_uDynamicHeap;
  1194  000E8E  0EFD               	movlw	low __uDynamicHeap
  1195  000E90  6FBB               	movwf	SRAMalloc@pHeap& (0+255),b
  1196  000E92  0E02               	movlw	high __uDynamicHeap
  1197  000E94  6FBC               	movwf	(SRAMalloc@pHeap+1)& (0+255),b
  1198  000E96                     l1514:
  1199                           
  1200                           ;mm.c: 160:  {;mm.c: 162:   segHeader = *pHeap;
  1201  000E96  C0BB  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1202  000E9A  C0BC  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1203  000E9E  50DF               	movf	indf2,w,c
  1204  000EA0  0100               	movlb	0	; () banked
  1205  000EA2  6FB9               	movwf	SRAMalloc@segHeader& (0+255),b
  1206  000EA4                     
  1207                           ; BSR set to: 0
  1208                           ;mm.c: 165:   segLen = segHeader.bits.count - 1;
  1209  000EA4  51B9               	movf	SRAMalloc@segHeader& (0+255),w,b
  1210  000EA6  0B7F               	andlw	127
  1211  000EA8  6FB4               	movwf	??_SRAMalloc& (0+255),b
  1212  000EAA  05B4               	decf	??_SRAMalloc& (0+255),w,b
  1213  000EAC  6FB8               	movwf	SRAMalloc@segLen& (0+255),b
  1214  000EAE                     
  1215                           ; BSR set to: 0
  1216                           ;mm.c: 168:   if (segHeader.byte == 0) return (0);
  1217  000EAE  51B9               	movf	SRAMalloc@segHeader& (0+255),w,b
  1218  000EB0  A4D8               	btfss	status,2,c
  1219  000EB2  EF5D  F007         	goto	u481
  1220  000EB6  EF5F  F007         	goto	u480
  1221  000EBA                     u481:
  1222  000EBA  EF61  F007         	goto	l288
  1223  000EBE                     u480:
  1224  000EBE  EF41  F007         	goto	l1508
  1225  000EC2                     l288:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;mm.c: 171:   if (!(segHeader.bits.alloc))
  1229  000EC2  BFB9               	btfsc	SRAMalloc@segHeader& (0+255),7,b
  1230  000EC4  EF66  F007         	goto	u491
  1231  000EC8  EF68  F007         	goto	u490
  1232  000ECC                     u491:
  1233  000ECC  EF7F  F007         	goto	l1528
  1234  000ED0                     u490:
  1235  000ED0                     
  1236                           ; BSR set to: 0
  1237                           ;mm.c: 172:   {;mm.c: 174:    if (nBytes > segLen)
  1238  000ED0  51BA               	movf	SRAMalloc@nBytes& (0+255),w,b
  1239  000ED2  5DB8               	subwf	SRAMalloc@segLen& (0+255),w,b
  1240  000ED4  B0D8               	btfsc	status,0,c
  1241  000ED6  EF6F  F007         	goto	u501
  1242  000EDA  EF71  F007         	goto	u500
  1243  000EDE                     u501:
  1244  000EDE  EF8B  F007         	goto	l1530
  1245  000EE2                     u500:
  1246  000EE2                     
  1247                           ; BSR set to: 0
  1248                           ;mm.c: 175:    {;mm.c: 177:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
  1249  000EE2  C0BB  F0AA         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  1250  000EE6  C0BC  F0AB         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  1251  000EEA  ECC9  F007         	call	__SRAMmerge	;wreg free
  1252  000EEE  0900               	iorlw	0
  1253  000EF0  A4D8               	btfss	status,2,c
  1254  000EF2  EF7D  F007         	goto	u511
  1255  000EF6  EF7F  F007         	goto	u510
  1256  000EFA                     u511:
  1257  000EFA  EFC6  F007         	goto	l295
  1258  000EFE                     u510:
  1259  000EFE                     l1528:
  1260  000EFE  0100               	movlb	0	; () banked
  1261  000F00  51B9               	movf	SRAMalloc@segHeader& (0+255),w,b
  1262  000F02  0B7F               	andlw	127
  1263  000F04  6FB4               	movwf	??_SRAMalloc& (0+255),b
  1264  000F06  51B4               	movf	??_SRAMalloc& (0+255),w,b
  1265  000F08  0D01               	mullw	1
  1266  000F0A  50F3               	movf	243,w,c
  1267  000F0C  27BB               	addwf	SRAMalloc@pHeap& (0+255),f,b
  1268  000F0E  50F4               	movf	244,w,c
  1269  000F10  23BC               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  1270  000F12  EF4B  F007         	goto	l1514
  1271  000F16                     l1530:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;mm.c: 183:    if (nBytes == segLen)
  1275  000F16  51B8               	movf	SRAMalloc@segLen& (0+255),w,b
  1276  000F18  19BA               	xorwf	SRAMalloc@nBytes& (0+255),w,b
  1277  000F1A  A4D8               	btfss	status,2,c
  1278  000F1C  EF92  F007         	goto	u521
  1279  000F20  EF94  F007         	goto	u520
  1280  000F24                     u521:
  1281  000F24  EFA1  F007         	goto	l1540
  1282  000F28                     u520:
  1283  000F28                     
  1284                           ; BSR set to: 0
  1285                           ;mm.c: 184:    {;mm.c: 186:     (*pHeap).bits.alloc = 1;
  1286  000F28  C0BB  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1287  000F2C  C0BC  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1288  000F30  8EDF               	bsf	indf2,7,c
  1289  000F32                     
  1290                           ; BSR set to: 0
  1291                           ;mm.c: 189:     return ((u_char *)(pHeap + 1));
  1292  000F32  0E01               	movlw	1
  1293  000F34  25BB               	addwf	SRAMalloc@pHeap& (0+255),w,b
  1294  000F36  6FB2               	movwf	?_SRAMalloc& (0+255),b
  1295  000F38  0E00               	movlw	0
  1296  000F3A  21BC               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  1297  000F3C  6FB3               	movwf	(?_SRAMalloc+1)& (0+255),b
  1298  000F3E  EFC8  F007         	goto	l286
  1299  000F42                     l1540:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;mm.c: 194:    {;mm.c: 196:     (*pHeap).byte = nBytes + 0x81;
  1303  000F42  51BA               	movf	SRAMalloc@nBytes& (0+255),w,b
  1304  000F44  0F81               	addlw	129
  1305  000F46  C0BB  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1306  000F4A  C0BC  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1307  000F4E  6EDF               	movwf	indf2,c
  1308  000F50                     
  1309                           ; BSR set to: 0
  1310                           ;mm.c: 199:     temp = pHeap + 1;
  1311  000F50  0E01               	movlw	1
  1312  000F52  25BB               	addwf	SRAMalloc@pHeap& (0+255),w,b
  1313  000F54  6FB6               	movwf	SRAMalloc@temp& (0+255),b
  1314  000F56  0E00               	movlw	0
  1315  000F58  21BC               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  1316  000F5A  6FB7               	movwf	(SRAMalloc@temp+1)& (0+255),b
  1317  000F5C                     
  1318                           ; BSR set to: 0
  1319                           ;mm.c: 202:     pHeap += (nBytes + 1);
  1320  000F5C  51BA               	movf	SRAMalloc@nBytes& (0+255),w,b
  1321  000F5E  6FB4               	movwf	??_SRAMalloc& (0+255),b
  1322  000F60  6BB5               	clrf	(??_SRAMalloc+1)& (0+255),b
  1323  000F62  0E01               	movlw	1
  1324  000F64  27B4               	addwf	??_SRAMalloc& (0+255),f,b
  1325  000F66  0E00               	movlw	0
  1326  000F68  23B5               	addwfc	(??_SRAMalloc+1)& (0+255),f,b
  1327  000F6A  51B4               	movf	??_SRAMalloc& (0+255),w,b
  1328  000F6C  27BB               	addwf	SRAMalloc@pHeap& (0+255),f,b
  1329  000F6E  51B5               	movf	(??_SRAMalloc+1)& (0+255),w,b
  1330  000F70  23BC               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  1331                           
  1332                           ;mm.c: 205:     (*pHeap).byte = segLen - nBytes;
  1333  000F72  51BA               	movf	SRAMalloc@nBytes& (0+255),w,b
  1334  000F74  5DB8               	subwf	SRAMalloc@segLen& (0+255),w,b
  1335  000F76  C0BB  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1336  000F7A  C0BC  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1337  000F7E  6EDF               	movwf	indf2,c
  1338  000F80                     
  1339                           ; BSR set to: 0
  1340                           ;mm.c: 208:     return ((u_char *) temp);
  1341  000F80  C0B6  F0B2         	movff	SRAMalloc@temp,?_SRAMalloc
  1342  000F84  C0B7  F0B3         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  1343  000F88  EFC8  F007         	goto	l286
  1344  000F8C                     l295:
  1345  000F8C  EF4B  F007         	goto	l1514
  1346  000F90                     l286:
  1347                           
  1348                           ; BSR set to: 0
  1349  000F90  0012               	return		;funcret
  1350  000F92                     __end_of_SRAMalloc:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function __SRAMmerge *****************
  1354 ;; Defined at:
  1355 ;;		line 314 in file "mm.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  pSegA           2   42[BANK0 ] PTR struct _SALLOC
  1358 ;;		 -> _uDynamicHeap(512), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  pSegB           2   45[BANK0 ] PTR struct _SALLOC
  1361 ;;		 -> _uDynamicHeap(512), 
  1362 ;;  uSegB           1   49[BANK0 ] struct _SALLOC
  1363 ;;  uSegA           1   48[BANK0 ] struct _SALLOC
  1364 ;;  uSum            1   47[BANK0 ] struct _SALLOC
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      unsigned char 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1374 ;;      Params:         0       2       0       0       0       0       0
  1375 ;;      Locals:         0       5       0       0       0       0       0
  1376 ;;      Temps:          0       1       0       0       0       0       0
  1377 ;;      Totals:         0       8       0       0       0       0       0
  1378 ;;Total ram usage:        8 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    9
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_SRAMalloc
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text10
  1389  000F92                     __ptext10:
  1390                           	callstack 0
  1391  000F92                     __SRAMmerge:
  1392                           	callstack 17
  1393  000F92                     
  1394                           ;mm.c: 314:      u_char _SRAMmerge(SALLOC * pSegA);mm.c: 315: {;mm.c: 316:  SALLOC * pSe
      +                          gB;;mm.c: 317:       SALLOC uSegA, uSegB, uSum;;mm.c: 321:  pSegB = pSegA + (*pSegA).byt
      +                          e;
  1395  000F92  C0AA  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1396  000F96  C0AB  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1397  000F9A  50DF               	movf	indf2,w,c
  1398  000F9C  0100               	movlb	0	; () banked
  1399  000F9E  6FAC               	movwf	??__SRAMmerge& (0+255),b
  1400  000FA0  51AC               	movf	??__SRAMmerge& (0+255),w,b
  1401  000FA2  25AA               	addwf	__SRAMmerge@pSegA& (0+255),w,b
  1402  000FA4  6FAD               	movwf	__SRAMmerge@pSegB& (0+255),b
  1403  000FA6  0E00               	movlw	0
  1404  000FA8  21AB               	addwfc	(__SRAMmerge@pSegA+1)& (0+255),w,b
  1405  000FAA  6FAE               	movwf	(__SRAMmerge@pSegB+1)& (0+255),b
  1406  000FAC                     
  1407                           ; BSR set to: 0
  1408                           ;mm.c: 324:  uSegA = *pSegA;
  1409  000FAC  C0AA  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1410  000FB0  C0AB  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1411  000FB4  50DF               	movf	indf2,w,c
  1412  000FB6  6FB0               	movwf	__SRAMmerge@uSegA& (0+255),b
  1413  000FB8                     
  1414                           ; BSR set to: 0
  1415                           ;mm.c: 325:  uSegB = *pSegB;
  1416  000FB8  C0AD  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  1417  000FBC  C0AE  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  1418  000FC0  50DF               	movf	indf2,w,c
  1419  000FC2  6FB1               	movwf	__SRAMmerge@uSegB& (0+255),b
  1420  000FC4                     
  1421                           ; BSR set to: 0
  1422                           ;mm.c: 328:  if (uSegB.byte == 0) return (0);
  1423  000FC4  51B1               	movf	__SRAMmerge@uSegB& (0+255),w,b
  1424  000FC6  A4D8               	btfss	status,2,c
  1425  000FC8  EFE8  F007         	goto	u421
  1426  000FCC  EFEA  F007         	goto	u420
  1427  000FD0                     u421:
  1428  000FD0  EFED  F007         	goto	l311
  1429  000FD4                     u420:
  1430  000FD4                     l1470:
  1431                           
  1432                           ; BSR set to: 0
  1433  000FD4  0E00               	movlw	0
  1434  000FD6  EF35  F008         	goto	l312
  1435  000FDA                     l311:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;mm.c: 331:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1439  000FDA  BFB0               	btfsc	__SRAMmerge@uSegA& (0+255),7,b
  1440  000FDC  EFF2  F007         	goto	u431
  1441  000FE0  EFF4  F007         	goto	u430
  1442  000FE4                     u431:
  1443  000FE4  EFEA  F007         	goto	l1470
  1444  000FE8                     u430:
  1445  000FE8                     
  1446                           ; BSR set to: 0
  1447  000FE8  AFB1               	btfss	__SRAMmerge@uSegB& (0+255),7,b
  1448  000FEA  EFF9  F007         	goto	u441
  1449  000FEE  EFFB  F007         	goto	u440
  1450  000FF2                     u441:
  1451  000FF2  EFFD  F007         	goto	l1480
  1452  000FF6                     u440:
  1453  000FF6  EFEA  F007         	goto	l1470
  1454  000FFA                     l1480:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;mm.c: 334:  if (uSegA.bits.count == 0x7F) return (0);
  1458  000FFA  51B0               	movf	__SRAMmerge@uSegA& (0+255),w,b
  1459  000FFC  0B7F               	andlw	127
  1460  000FFE  0A7F               	xorlw	127
  1461  001000  A4D8               	btfss	status,2,c
  1462  001002  EF05  F008         	goto	u451
  1463  001006  EF07  F008         	goto	u450
  1464  00100A                     u451:
  1465  00100A  EF09  F008         	goto	l1486
  1466  00100E                     u450:
  1467  00100E  EFEA  F007         	goto	l1470
  1468  001012                     l1486:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;mm.c: 337:  uSum.byte = uSegA.byte + uSegB.byte;
  1472  001012  51B0               	movf	__SRAMmerge@uSegA& (0+255),w,b
  1473  001014  25B1               	addwf	__SRAMmerge@uSegB& (0+255),w,b
  1474  001016  6FAF               	movwf	__SRAMmerge@uSum& (0+255),b
  1475                           
  1476                           ;mm.c: 343:  if ((uSum.byte) > 0x7F)
  1477  001018  0E7F               	movlw	127
  1478  00101A  65AF               	cpfsgt	__SRAMmerge@uSum& (0+255),b
  1479  00101C  EF12  F008         	goto	u461
  1480  001020  EF14  F008         	goto	u460
  1481  001024                     u461:
  1482  001024  EF2E  F008         	goto	l1502
  1483  001028                     u460:
  1484  001028                     
  1485                           ; BSR set to: 0
  1486                           ;mm.c: 344:  {;mm.c: 345:   (*pSegA).byte = 0x7F;
  1487  001028  C0AA  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1488  00102C  C0AB  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1489  001030  0E7F               	movlw	127
  1490  001032  6EDF               	movwf	indf2,c
  1491  001034                     
  1492                           ; BSR set to: 0
  1493                           ;mm.c: 346:   pSegA += 0x7F;
  1494  001034  0E7F               	movlw	127
  1495  001036  27AA               	addwf	__SRAMmerge@pSegA& (0+255),f,b
  1496  001038  0E00               	movlw	0
  1497  00103A  23AB               	addwfc	(__SRAMmerge@pSegA+1)& (0+255),f,b
  1498  00103C                     
  1499                           ; BSR set to: 0
  1500                           ;mm.c: 347:   pSegB += uSegB.byte;
  1501  00103C  51B1               	movf	__SRAMmerge@uSegB& (0+255),w,b
  1502  00103E  0D01               	mullw	1
  1503  001040  50F3               	movf	243,w,c
  1504  001042  27AD               	addwf	__SRAMmerge@pSegB& (0+255),f,b
  1505  001044  50F4               	movf	244,w,c
  1506  001046  23AE               	addwfc	(__SRAMmerge@pSegB+1)& (0+255),f,b
  1507  001048                     
  1508                           ; BSR set to: 0
  1509                           ;mm.c: 348:   (*pSegA).byte = pSegB - pSegA;
  1510  001048  51AA               	movf	__SRAMmerge@pSegA& (0+255),w,b
  1511  00104A  5DAD               	subwf	__SRAMmerge@pSegB& (0+255),w,b
  1512  00104C  C0AA  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1513  001050  C0AB  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1514  001054  6EDF               	movwf	indf2,c
  1515  001056                     
  1516                           ; BSR set to: 0
  1517                           ;mm.c: 350:   return (0x7F);
  1518  001056  0E7F               	movlw	127
  1519  001058  EF35  F008         	goto	l312
  1520  00105C                     l1502:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;mm.c: 355:  {;mm.c: 356:   return ((*pSegA).byte = uSum.byte);
  1524  00105C  C0AA  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1525  001060  C0AB  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1526  001064  C0AF  FFDF         	movff	__SRAMmerge@uSum,indf2
  1527  001068  50DF               	movf	223,w,c
  1528  00106A                     l312:
  1529                           
  1530                           ; BSR set to: 0
  1531  00106A  0012               	return		;funcret
  1532  00106C                     __end_of__SRAMmerge:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _SRAMInitHeap *****************
  1536 ;; Defined at:
  1537 ;;		line 268 in file "mm.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  count           2   44[BANK0 ] unsigned int 
  1542 ;;  pHeap           2   42[BANK0 ] PTR unsigned char 
  1543 ;;		 -> _uDynamicHeap(512), 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1553 ;;      Params:         0       0       0       0       0       0       0
  1554 ;;      Locals:         0       4       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0
  1556 ;;      Totals:         0       4       0       0       0       0       0
  1557 ;;Total ram usage:        4 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    9
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text11
  1568  001436                     __ptext11:
  1569                           	callstack 0
  1570  001436                     _SRAMInitHeap:
  1571                           	callstack 21
  1572  001436                     
  1573                           ;mm.c: 270:  u_char* pHeap;;mm.c: 271:       u_int count;;mm.c: 273:  pHeap = _uDynamicH
      +                          eap;
  1574  001436  0EFD               	movlw	low __uDynamicHeap
  1575  001438  0100               	movlb	0	; () banked
  1576  00143A  6FAA               	movwf	SRAMInitHeap@pHeap& (0+255),b
  1577  00143C  0E02               	movlw	high __uDynamicHeap
  1578  00143E  6FAB               	movwf	(SRAMInitHeap@pHeap+1)& (0+255),b
  1579  001440                     
  1580                           ; BSR set to: 0
  1581                           ;mm.c: 274:  count = 0x200 -1;
  1582  001440  0E01               	movlw	1
  1583  001442  6FAD               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  1584  001444  69AC               	setf	SRAMInitHeap@count& (0+255),b
  1585  001446                     l1980:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;mm.c: 277:  {;mm.c: 278:   if (count > 0x7F)
  1589  001446  51AD               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  1590  001448  E109               	bnz	u860
  1591  00144A  0E80               	movlw	128
  1592  00144C  5DAC               	subwf	SRAMInitHeap@count& (0+255),w,b
  1593  00144E  A0D8               	btfss	status,0,c
  1594  001450  EF2C  F00A         	goto	u861
  1595  001454  EF2E  F00A         	goto	u860
  1596  001458                     u861:
  1597  001458  EF40  F00A         	goto	l1988
  1598  00145C                     u860:
  1599  00145C                     
  1600                           ; BSR set to: 0
  1601                           ;mm.c: 279:   {;mm.c: 280:    *pHeap = 0x7F;
  1602  00145C  C0AA  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1603  001460  C0AB  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1604  001464  0E7F               	movlw	127
  1605  001466  6EDF               	movwf	indf2,c
  1606  001468                     
  1607                           ; BSR set to: 0
  1608                           ;mm.c: 281:    pHeap += 0x7F;
  1609  001468  0E7F               	movlw	127
  1610  00146A  27AA               	addwf	SRAMInitHeap@pHeap& (0+255),f,b
  1611  00146C  0E00               	movlw	0
  1612  00146E  23AB               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),f,b
  1613  001470                     
  1614                           ; BSR set to: 0
  1615                           ;mm.c: 282:    count = count - 0x7F;
  1616  001470  0E81               	movlw	129
  1617  001472  25AC               	addwf	SRAMInitHeap@count& (0+255),w,b
  1618  001474  6FAC               	movwf	SRAMInitHeap@count& (0+255),b
  1619  001476  0EFF               	movlw	255
  1620  001478  21AD               	addwfc	(SRAMInitHeap@count+1)& (0+255),w,b
  1621  00147A  6FAD               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  1622                           
  1623                           ;mm.c: 283:   }
  1624  00147C  EF23  F00A         	goto	l1980
  1625  001480                     l1988:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;mm.c: 285:   {;mm.c: 286:    *pHeap = count;
  1629  001480  C0AA  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1630  001484  C0AB  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1631  001488  C0AC  FFDF         	movff	SRAMInitHeap@count,indf2
  1632  00148C                     
  1633                           ; BSR set to: 0
  1634                           ;mm.c: 287:    *(pHeap + count) = 0;
  1635  00148C  51AC               	movf	SRAMInitHeap@count& (0+255),w,b
  1636  00148E  25AA               	addwf	SRAMInitHeap@pHeap& (0+255),w,b
  1637  001490  6ED9               	movwf	fsr2l,c
  1638  001492  51AD               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  1639  001494  21AB               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),w,b
  1640  001496  6EDA               	movwf	fsr2h,c
  1641  001498  0E00               	movlw	0
  1642  00149A  6EDF               	movwf	indf2,c
  1643  00149C                     
  1644                           ; BSR set to: 0
  1645  00149C  0012               	return		;funcret
  1646  00149E                     __end_of_SRAMInitHeap:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _task_idle *****************
  1650 ;; Defined at:
  1651 ;;		line 94 in file "kernel.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         0       0       0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0
  1667 ;;      Temps:          0       1       0       0       0       0       0
  1668 ;;      Totals:         0       1       0       0       0       0       0
  1669 ;;Total ram usage:        1 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    9
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;;		_os_config
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text12
  1681  001628                     __ptext12:
  1682                           	callstack 0
  1683  001628                     _task_idle:
  1684                           	callstack 16
  1685  001628                     l87:
  1686  001628                     
  1687                           ;kernel.c: 98:       PORTDbits.RD3 = ~PORTDbits.RD3;
  1688  001628  B683               	btfsc	131,3,c	;volatile
  1689  00162A  EF19  F00B         	goto	u105_21
  1690  00162E  EF1C  F00B         	goto	u105_20
  1691  001632                     u105_21:
  1692  001632  0E01               	movlw	1
  1693  001634  EF1D  F00B         	goto	u105_26
  1694  001638                     u105_20:
  1695  001638  0E00               	movlw	0
  1696  00163A                     u105_26:
  1697  00163A  0AFF               	xorlw	255
  1698  00163C  0100               	movlb	0	; () banked
  1699  00163E  6FAA               	movwf	??_task_idle& (0+255),b
  1700  001640  47AA               	rlncf	??_task_idle& (0+255),f,b
  1701  001642  47AA               	rlncf	??_task_idle& (0+255),f,b
  1702  001644  47AA               	rlncf	??_task_idle& (0+255),f,b
  1703  001646  5083               	movf	131,w,c	;volatile
  1704  001648  19AA               	xorwf	??_task_idle& (0+255),w,b
  1705  00164A  0BF7               	andlw	-9
  1706  00164C  19AA               	xorwf	??_task_idle& (0+255),w,b
  1707  00164E  6E83               	movwf	131,c	;volatile
  1708  001650  EF14  F00B         	goto	l87
  1709  001654  0012               	return		;funcret
  1710  001656                     __end_of_task_idle:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _task_1 *****************
  1714 ;; Defined at:
  1715 ;;		line 21 in file "tasks.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1729 ;;      Params:         0       0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0
  1731 ;;      Temps:          1       0       0       0       0       0       0
  1732 ;;      Totals:         1       0       0       0       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    8
  1736 ;; This function calls:
  1737 ;;		_sem_wait
  1738 ;;		_task_delay
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text13
  1745  001536                     __ptext13:
  1746                           	callstack 0
  1747  001536                     _task_1:
  1748                           	callstack 17
  1749  001536                     l128:
  1750  001536                     
  1751                           ;tasks.c: 24:   PORTDbits.RD0 = ~PORTDbits.RD0;
  1752  001536  B083               	btfsc	131,0,c	;volatile
  1753  001538  EFA0  F00A         	goto	u99_21
  1754  00153C  EFA3  F00A         	goto	u99_20
  1755  001540                     u99_21:
  1756  001540  0E01               	movlw	1
  1757  001542  EFA4  F00A         	goto	u99_26
  1758  001546                     u99_20:
  1759  001546  0E00               	movlw	0
  1760  001548                     u99_26:
  1761  001548  0AFF               	xorlw	255
  1762  00154A  6E34               	movwf	??_task_1^0,c
  1763  00154C  5083               	movf	131,w,c	;volatile
  1764  00154E  1834               	xorwf	??_task_1^0,w,c
  1765  001550  0BFE               	andlw	-2
  1766  001552  1834               	xorwf	??_task_1^0,w,c
  1767  001554  6E83               	movwf	131,c	;volatile
  1768  001556                     
  1769                           ;tasks.c: 25:   task_delay(500);
  1770  001556  0E01               	movlw	1
  1771  001558  0100               	movlb	0	; () banked
  1772  00155A  6FA9               	movwf	(task_delay@ms+1)& (0+255),b
  1773  00155C  0EF4               	movlw	244
  1774  00155E  6FA8               	movwf	task_delay@ms& (0+255),b
  1775  001560  EC9A  F002         	call	_task_delay	;wreg free
  1776  001564                     
  1777                           ;tasks.c: 26:   sem_wait(&sem_teste);
  1778  001564  0EC9               	movlw	low _sem_teste
  1779  001566  0100               	movlb	0	; () banked
  1780  001568  6F9E               	movwf	sem_wait@sem& (0+255),b
  1781  00156A  0E00               	movlw	high _sem_teste
  1782  00156C  6F9F               	movwf	(sem_wait@sem+1)& (0+255),b
  1783  00156E  EC09  F000         	call	_sem_wait	;wreg free
  1784  001572  EF9B  F00A         	goto	l128
  1785  001576  0012               	return		;funcret
  1786  001578                     __end_of_task_1:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function _task_delay *****************
  1790 ;; Defined at:
  1791 ;;		line 29 in file "kernel.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  ms              2   40[BANK0 ] unsigned int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1805 ;;      Params:         0       2       0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0
  1807 ;;      Temps:          2       0       0       0       0       0       0
  1808 ;;      Totals:         2       2       0       0       0       0       0
  1809 ;;Total ram usage:        4 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    7
  1812 ;; This function calls:
  1813 ;;		_scheduler
  1814 ;;		i1___wmul
  1815 ;; This function is called by:
  1816 ;;		_task_1
  1817 ;;		_task_3
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text14
  1822  000534                     __ptext14:
  1823                           	callstack 0
  1824  000534                     _task_delay:
  1825                           	callstack 17
  1826  000534                     
  1827                           ;kernel.c: 29: void task_delay(u_int ms);kernel.c: 30: {;kernel.c: 31:  INTCONbits.GIE =
      +                           0;
  1828  000534  9EF2               	bcf	242,7,c	;volatile
  1829  000536                     
  1830                           ;kernel.c: 32:  { index = 0; f_aptos.ready_queue[f_aptos.task_running].task_state = WAIT
      +                          ING_DELAY; f_aptos.ready_queue[f_aptos.task_running].w_reg = WREG; f_aptos.ready_queue[f
      +                          _aptos.task_running].bsr_reg = BSR; f_aptos.ready_queue[f_aptos.task_running].status_reg
      +                           = STATUS; while (STKPTR) { f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[i
      +                          ndex].TOSU_reg = TOSU; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index]
      +                          .TOSL_reg = TOSL; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index].TOSH
      +                          _reg = TOSH; index++; __asm("POP"); } f_aptos.ready_queue[f_aptos.task_running].task_sta
      +                          ck.size = index; }
  1831  000536  0E00               	movlw	0
  1832  000538  0100               	movlb	0	; () banked
  1833  00053A  6FBE               	movwf	(_index+1)& (0+255),b
  1834  00053C  0E00               	movlw	0
  1835  00053E  6FBD               	movwf	_index& (0+255),b
  1836  000540                     
  1837                           ; BSR set to: 0
  1838  000540  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1839  000544  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1840  000548  0E00               	movlw	0
  1841  00054A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1842  00054C  0E65               	movlw	101
  1843  00054E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1844  000550  EC3F  F00B         	call	i1___wmul	;wreg free
  1845  000554  0E67               	movlw	low (_f_aptos+2)
  1846  000556  0100               	movlb	0	; () banked
  1847  000558  25A0               	addwf	?i1___wmul& (0+255),w,b
  1848  00055A  6ED9               	movwf	fsr2l,c
  1849  00055C  0E01               	movlw	high (_f_aptos+2)
  1850  00055E  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1851  000560  6EDA               	movwf	fsr2h,c
  1852  000562  0E03               	movlw	3
  1853  000564  6EDF               	movwf	indf2,c
  1854  000566                     
  1855                           ; BSR set to: 0
  1856  000566  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1857  00056A  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1858  00056E  0E00               	movlw	0
  1859  000570  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1860  000572  0E65               	movlw	101
  1861  000574  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1862  000576  EC3F  F00B         	call	i1___wmul	;wreg free
  1863  00057A  0EC6               	movlw	low (_f_aptos+97)
  1864  00057C  0100               	movlb	0	; () banked
  1865  00057E  25A0               	addwf	?i1___wmul& (0+255),w,b
  1866  000580  6ED9               	movwf	fsr2l,c
  1867  000582  0E01               	movlw	high (_f_aptos+97)
  1868  000584  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1869  000586  6EDA               	movwf	fsr2h,c
  1870  000588  CFE8 FFDF          	movff	wreg,indf2	;volatile
  1871  00058C                     
  1872                           ; BSR set to: 0
  1873  00058C  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1874  000590  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1875  000594  0E00               	movlw	0
  1876  000596  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1877  000598  0E65               	movlw	101
  1878  00059A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1879  00059C  EC3F  F00B         	call	i1___wmul	;wreg free
  1880  0005A0  0EC5               	movlw	low (_f_aptos+96)
  1881  0005A2  0100               	movlb	0	; () banked
  1882  0005A4  25A0               	addwf	?i1___wmul& (0+255),w,b
  1883  0005A6  6ED9               	movwf	fsr2l,c
  1884  0005A8  0E01               	movlw	high (_f_aptos+96)
  1885  0005AA  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1886  0005AC  6EDA               	movwf	fsr2h,c
  1887  0005AE  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1888  0005B2                     
  1889                           ; BSR set to: 0
  1890  0005B2  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1891  0005B6  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1892  0005BA  0E00               	movlw	0
  1893  0005BC  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1894  0005BE  0E65               	movlw	101
  1895  0005C0  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1896  0005C2  EC3F  F00B         	call	i1___wmul	;wreg free
  1897  0005C6  0EC7               	movlw	low (_f_aptos+98)
  1898  0005C8  0100               	movlb	0	; () banked
  1899  0005CA  25A0               	addwf	?i1___wmul& (0+255),w,b
  1900  0005CC  6ED9               	movwf	fsr2l,c
  1901  0005CE  0E01               	movlw	high (_f_aptos+98)
  1902  0005D0  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  1903  0005D2  6EDA               	movwf	fsr2h,c
  1904  0005D4  CFD8 FFDF          	movff	status,indf2	;volatile
  1905  0005D8  EF70  F003         	goto	i1l2026
  1906  0005DC                     i1l2022:
  1907  0005DC  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1908  0005E0  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1909  0005E4  0E00               	movlw	0
  1910  0005E6  0100               	movlb	0	; () banked
  1911  0005E8  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1912  0005EA  0E65               	movlw	101
  1913  0005EC  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1914  0005EE  EC3F  F00B         	call	i1___wmul	;wreg free
  1915  0005F2  0E65               	movlw	low _f_aptos
  1916  0005F4  6E3C               	movwf	??_task_delay^0,c
  1917  0005F6  0E01               	movlw	high _f_aptos
  1918  0005F8  6E3D               	movwf	(??_task_delay+1)^0,c
  1919  0005FA  0E07               	movlw	7
  1920  0005FC  263C               	addwf	??_task_delay^0,f,c
  1921  0005FE  0E00               	movlw	0
  1922  000600  223D               	addwfc	(??_task_delay+1)^0,f,c
  1923  000602  0100               	movlb	0	; () banked
  1924  000604  51A0               	movf	?i1___wmul& (0+255),w,b
  1925  000606  263C               	addwf	??_task_delay^0,f,c
  1926  000608  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  1927  00060A  223D               	addwfc	(??_task_delay+1)^0,f,c
  1928  00060C  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  1929  000610  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  1930  000614  0E00               	movlw	0
  1931  000616  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1932  000618  0E03               	movlw	3
  1933  00061A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1934  00061C  EC3F  F00B         	call	i1___wmul	;wreg free
  1935  000620  0100               	movlb	0	; () banked
  1936  000622  51A0               	movf	?i1___wmul& (0+255),w,b
  1937  000624  243C               	addwf	??_task_delay^0,w,c
  1938  000626  6ED9               	movwf	fsr2l,c
  1939  000628  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  1940  00062A  203D               	addwfc	(??_task_delay+1)^0,w,c
  1941  00062C  6EDA               	movwf	fsr2h,c
  1942  00062E  CFFF FFDF          	movff	tosu,indf2	;volatile
  1943  000632  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1944  000636  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1945  00063A  0E00               	movlw	0
  1946  00063C  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1947  00063E  0E65               	movlw	101
  1948  000640  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1949  000642  EC3F  F00B         	call	i1___wmul	;wreg free
  1950  000646  0E65               	movlw	low _f_aptos
  1951  000648  6E3C               	movwf	??_task_delay^0,c
  1952  00064A  0E01               	movlw	high _f_aptos
  1953  00064C  6E3D               	movwf	(??_task_delay+1)^0,c
  1954  00064E  0E08               	movlw	8
  1955  000650  263C               	addwf	??_task_delay^0,f,c
  1956  000652  0E00               	movlw	0
  1957  000654  223D               	addwfc	(??_task_delay+1)^0,f,c
  1958  000656  0100               	movlb	0	; () banked
  1959  000658  51A0               	movf	?i1___wmul& (0+255),w,b
  1960  00065A  263C               	addwf	??_task_delay^0,f,c
  1961  00065C  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  1962  00065E  223D               	addwfc	(??_task_delay+1)^0,f,c
  1963  000660  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  1964  000664  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  1965  000668  0E00               	movlw	0
  1966  00066A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1967  00066C  0E03               	movlw	3
  1968  00066E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1969  000670  EC3F  F00B         	call	i1___wmul	;wreg free
  1970  000674  0100               	movlb	0	; () banked
  1971  000676  51A0               	movf	?i1___wmul& (0+255),w,b
  1972  000678  243C               	addwf	??_task_delay^0,w,c
  1973  00067A  6ED9               	movwf	fsr2l,c
  1974  00067C  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  1975  00067E  203D               	addwfc	(??_task_delay+1)^0,w,c
  1976  000680  6EDA               	movwf	fsr2h,c
  1977  000682  CFFD FFDF          	movff	tosl,indf2	;volatile
  1978  000686  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  1979  00068A  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  1980  00068E  0E00               	movlw	0
  1981  000690  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  1982  000692  0E65               	movlw	101
  1983  000694  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  1984  000696  EC3F  F00B         	call	i1___wmul	;wreg free
  1985  00069A  0E65               	movlw	low _f_aptos
  1986  00069C  6E3C               	movwf	??_task_delay^0,c
  1987  00069E  0E01               	movlw	high _f_aptos
  1988  0006A0  6E3D               	movwf	(??_task_delay+1)^0,c
  1989  0006A2  0E09               	movlw	9
  1990  0006A4  263C               	addwf	??_task_delay^0,f,c
  1991  0006A6  0E00               	movlw	0
  1992  0006A8  223D               	addwfc	(??_task_delay+1)^0,f,c
  1993  0006AA  0100               	movlb	0	; () banked
  1994  0006AC  51A0               	movf	?i1___wmul& (0+255),w,b
  1995  0006AE  263C               	addwf	??_task_delay^0,f,c
  1996  0006B0  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  1997  0006B2  223D               	addwfc	(??_task_delay+1)^0,f,c
  1998  0006B4  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  1999  0006B8  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2000  0006BC  0E00               	movlw	0
  2001  0006BE  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2002  0006C0  0E03               	movlw	3
  2003  0006C2  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2004  0006C4  EC3F  F00B         	call	i1___wmul	;wreg free
  2005  0006C8  0100               	movlb	0	; () banked
  2006  0006CA  51A0               	movf	?i1___wmul& (0+255),w,b
  2007  0006CC  243C               	addwf	??_task_delay^0,w,c
  2008  0006CE  6ED9               	movwf	fsr2l,c
  2009  0006D0  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2010  0006D2  203D               	addwfc	(??_task_delay+1)^0,w,c
  2011  0006D4  6EDA               	movwf	fsr2h,c
  2012  0006D6  CFFE FFDF          	movff	tosh,indf2	;volatile
  2013  0006DA                     
  2014                           ; BSR set to: 0
  2015  0006DA  4BBD               	infsnz	_index& (0+255),f,b
  2016  0006DC  2BBE               	incf	(_index+1)& (0+255),f,b
  2017  0006DE  0006               	pop		;# 
  2018  0006E0                     i1l2026:
  2019  0006E0  50FC               	movf	252,w,c	;volatile
  2020  0006E2  A4D8               	btfss	status,2,c
  2021  0006E4  EF76  F003         	goto	i1u87_21
  2022  0006E8  EF78  F003         	goto	i1u87_20
  2023  0006EC                     i1u87_21:
  2024  0006EC  EFEE  F002         	goto	i1l2022
  2025  0006F0                     i1u87_20:
  2026  0006F0  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2027  0006F4  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2028  0006F8  0E00               	movlw	0
  2029  0006FA  0100               	movlb	0	; () banked
  2030  0006FC  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2031  0006FE  0E65               	movlw	101
  2032  000700  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2033  000702  EC3F  F00B         	call	i1___wmul	;wreg free
  2034  000706  0EC3               	movlw	low (_f_aptos+94)
  2035  000708  0100               	movlb	0	; () banked
  2036  00070A  25A0               	addwf	?i1___wmul& (0+255),w,b
  2037  00070C  6ED9               	movwf	fsr2l,c
  2038  00070E  0E01               	movlw	high (_f_aptos+94)
  2039  000710  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2040  000712  6EDA               	movwf	fsr2h,c
  2041  000714  C0BD  FFDE         	movff	_index,postinc2
  2042  000718  C0BE  FFDD         	movff	_index+1,postdec2
  2043                           
  2044                           ;kernel.c: 35:    f_aptos.ready_queue[f_aptos.task_running].delay = ms;
  2045  00071C  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2046  000720  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2047  000724  0E00               	movlw	0
  2048  000726  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2049  000728  0E65               	movlw	101
  2050  00072A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2051  00072C  EC3F  F00B         	call	i1___wmul	;wreg free
  2052  000730  0EC8               	movlw	low (_f_aptos+99)
  2053  000732  0100               	movlb	0	; () banked
  2054  000734  25A0               	addwf	?i1___wmul& (0+255),w,b
  2055  000736  6ED9               	movwf	fsr2l,c
  2056  000738  0E01               	movlw	high (_f_aptos+99)
  2057  00073A  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2058  00073C  6EDA               	movwf	fsr2h,c
  2059  00073E  C0A8  FFDE         	movff	task_delay@ms,postinc2
  2060  000742  C0A9  FFDD         	movff	task_delay@ms+1,postdec2
  2061                           
  2062                           ;kernel.c: 38:  { f_aptos.task_running = scheduler(); STKPTR = 0; if (f_aptos.ready_queu
      +                          e[f_aptos.task_running].task_stack.size == 0) { __asm("PUSH"); TOS = f_aptos.ready_queue
      +                          [f_aptos.task_running].task_func; f_aptos.ready_queue[f_aptos.task_running].task_state =
      +                           RUNNING; } else { f_aptos.ready_queue[f_aptos.task_running].task_state = RUNNING; WREG 
      +                          = f_aptos.ready_queue[f_aptos.task_running].w_reg; BSR = f_aptos.ready_queue[f_aptos.tas
      +                          k_running].bsr_reg; STATUS = f_aptos.ready_queue[f_aptos.task_running].status_reg; index
      +                           = f_aptos.ready_queue[f_aptos.task_running].task_stack.size; while(index) { __asm("PUSH
      +                          "); TOSU = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSU_re
      +                          g; TOSL = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSL_reg
      +                          ; TOSH = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSH_reg;
      +                           index--; } } };
  2063  000746  EC85  F00B         	call	_scheduler	;wreg free
  2064  00074A  0100               	movlb	0	; () banked
  2065  00074C  C0A6  F2FB         	movff	?_scheduler,_f_aptos+406
  2066  000750  C0A7  F2FC         	movff	?_scheduler+1,_f_aptos+407
  2067  000754                     
  2068                           ; BSR set to: 0
  2069  000754  0E00               	movlw	0
  2070  000756  6EFC               	movwf	252,c	;volatile
  2071  000758                     
  2072                           ; BSR set to: 0
  2073  000758  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2074  00075C  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2075  000760  0E00               	movlw	0
  2076  000762  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2077  000764  0E65               	movlw	101
  2078  000766  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2079  000768  EC3F  F00B         	call	i1___wmul	;wreg free
  2080  00076C  0EC3               	movlw	low (_f_aptos+94)
  2081  00076E  0100               	movlb	0	; () banked
  2082  000770  25A0               	addwf	?i1___wmul& (0+255),w,b
  2083  000772  6ED9               	movwf	fsr2l,c
  2084  000774  0E01               	movlw	high (_f_aptos+94)
  2085  000776  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2086  000778  6EDA               	movwf	fsr2h,c
  2087  00077A  50DE               	movf	postinc2,w,c
  2088  00077C  10DE               	iorwf	postinc2,w,c
  2089  00077E  A4D8               	btfss	status,2,c
  2090  000780  EFC4  F003         	goto	i1u88_21
  2091  000784  EFC6  F003         	goto	i1u88_20
  2092  000788                     i1u88_21:
  2093  000788  EFF7  F003         	goto	i1l2038
  2094  00078C                     i1u88_20:
  2095  00078C                     
  2096                           ; BSR set to: 0
  2097  00078C  0005               	push		;# 
  2098  00078E  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2099  000792  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2100  000796  0E00               	movlw	0
  2101  000798  0100               	movlb	0	; () banked
  2102  00079A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2103  00079C  0E65               	movlw	101
  2104  00079E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2105  0007A0  EC3F  F00B         	call	i1___wmul	;wreg free
  2106  0007A4  0E6A               	movlw	low (_f_aptos+5)
  2107  0007A6  0100               	movlb	0	; () banked
  2108  0007A8  25A0               	addwf	?i1___wmul& (0+255),w,b
  2109  0007AA  6ED9               	movwf	fsr2l,c
  2110  0007AC  0E01               	movlw	high (_f_aptos+5)
  2111  0007AE  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2112  0007B0  6EDA               	movwf	fsr2h,c
  2113  0007B2  CFDE F03C          	movff	postinc2,??_task_delay
  2114  0007B6  CFDD F03D          	movff	postdec2,??_task_delay+1
  2115  0007BA  C03C  FFFD         	movff	??_task_delay,tosl	;volatile
  2116  0007BE  C03D  FFFE         	movff	??_task_delay+1,tosh	;volatile
  2117  0007C2  6AFF               	clrf	255,c	;volatile
  2118  0007C4  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2119  0007C8  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2120  0007CC  0E00               	movlw	0
  2121  0007CE  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2122  0007D0  0E65               	movlw	101
  2123  0007D2  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2124  0007D4  EC3F  F00B         	call	i1___wmul	;wreg free
  2125  0007D8  0E67               	movlw	low (_f_aptos+2)
  2126  0007DA  0100               	movlb	0	; () banked
  2127  0007DC  25A0               	addwf	?i1___wmul& (0+255),w,b
  2128  0007DE  6ED9               	movwf	fsr2l,c
  2129  0007E0  0E01               	movlw	high (_f_aptos+2)
  2130  0007E2  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2131  0007E4  6EDA               	movwf	fsr2h,c
  2132  0007E6  0E01               	movlw	1
  2133  0007E8  6EDF               	movwf	indf2,c
  2134  0007EA  EFE7  F004         	goto	i1l71
  2135  0007EE                     i1l2038:
  2136                           
  2137                           ; BSR set to: 0
  2138  0007EE  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2139  0007F2  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2140  0007F6  0E00               	movlw	0
  2141  0007F8  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2142  0007FA  0E65               	movlw	101
  2143  0007FC  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2144  0007FE  EC3F  F00B         	call	i1___wmul	;wreg free
  2145  000802  0E67               	movlw	low (_f_aptos+2)
  2146  000804  0100               	movlb	0	; () banked
  2147  000806  25A0               	addwf	?i1___wmul& (0+255),w,b
  2148  000808  6ED9               	movwf	fsr2l,c
  2149  00080A  0E01               	movlw	high (_f_aptos+2)
  2150  00080C  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2151  00080E  6EDA               	movwf	fsr2h,c
  2152  000810  0E01               	movlw	1
  2153  000812  6EDF               	movwf	indf2,c
  2154  000814  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2155  000818  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2156  00081C  0E00               	movlw	0
  2157  00081E  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2158  000820  0E65               	movlw	101
  2159  000822  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2160  000824  EC3F  F00B         	call	i1___wmul	;wreg free
  2161  000828  0EC6               	movlw	low (_f_aptos+97)
  2162  00082A  0100               	movlb	0	; () banked
  2163  00082C  25A0               	addwf	?i1___wmul& (0+255),w,b
  2164  00082E  6ED9               	movwf	fsr2l,c
  2165  000830  0E01               	movlw	high (_f_aptos+97)
  2166  000832  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2167  000834  6EDA               	movwf	fsr2h,c
  2168  000836  50DF               	movf	indf2,w,c
  2169  000838  6E3C               	movwf	??_task_delay^0,c
  2170  00083A  503C               	movf	??_task_delay^0,w,c
  2171  00083C  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2172  000840  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2173  000844  0E00               	movlw	0
  2174  000846  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2175  000848  0E65               	movlw	101
  2176  00084A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2177  00084C  EC3F  F00B         	call	i1___wmul	;wreg free
  2178  000850  0EC5               	movlw	low (_f_aptos+96)
  2179  000852  0100               	movlb	0	; () banked
  2180  000854  25A0               	addwf	?i1___wmul& (0+255),w,b
  2181  000856  6ED9               	movwf	fsr2l,c
  2182  000858  0E01               	movlw	high (_f_aptos+96)
  2183  00085A  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2184  00085C  6EDA               	movwf	fsr2h,c
  2185  00085E  50DF               	movf	indf2,w,c
  2186  000860  6EE0               	movwf	224,c	;volatile
  2187  000862  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2188  000866  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2189  00086A  0E00               	movlw	0
  2190  00086C  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2191  00086E  0E65               	movlw	101
  2192  000870  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2193  000872  EC3F  F00B         	call	i1___wmul	;wreg free
  2194  000876  0EC7               	movlw	low (_f_aptos+98)
  2195  000878  0100               	movlb	0	; () banked
  2196  00087A  25A0               	addwf	?i1___wmul& (0+255),w,b
  2197  00087C  6ED9               	movwf	fsr2l,c
  2198  00087E  0E01               	movlw	high (_f_aptos+98)
  2199  000880  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2200  000882  6EDA               	movwf	fsr2h,c
  2201  000884  50DF               	movf	indf2,w,c
  2202  000886  6ED8               	movwf	216,c	;volatile
  2203  000888  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2204  00088C  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2205  000890  0E00               	movlw	0
  2206  000892  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2207  000894  0E65               	movlw	101
  2208  000896  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2209  000898  EC3F  F00B         	call	i1___wmul	;wreg free
  2210  00089C  0EC3               	movlw	low (_f_aptos+94)
  2211  00089E  0100               	movlb	0	; () banked
  2212  0008A0  25A0               	addwf	?i1___wmul& (0+255),w,b
  2213  0008A2  6ED9               	movwf	fsr2l,c
  2214  0008A4  0E01               	movlw	high (_f_aptos+94)
  2215  0008A6  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2216  0008A8  6EDA               	movwf	fsr2h,c
  2217  0008AA  CFDE F0BD          	movff	postinc2,_index
  2218  0008AE  CFDD F0BE          	movff	postdec2,_index+1
  2219  0008B2  EFDE  F004         	goto	i1l2044
  2220  0008B6                     i1l73:
  2221                           
  2222                           ; BSR set to: 0
  2223  0008B6  0005               	push		;# 
  2224  0008B8  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2225  0008BC  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2226  0008C0  0E00               	movlw	0
  2227  0008C2  0100               	movlb	0	; () banked
  2228  0008C4  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2229  0008C6  0E65               	movlw	101
  2230  0008C8  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2231  0008CA  EC3F  F00B         	call	i1___wmul	;wreg free
  2232  0008CE  0E65               	movlw	low _f_aptos
  2233  0008D0  6E3C               	movwf	??_task_delay^0,c
  2234  0008D2  0E01               	movlw	high _f_aptos
  2235  0008D4  6E3D               	movwf	(??_task_delay+1)^0,c
  2236  0008D6  0E04               	movlw	4
  2237  0008D8  263C               	addwf	??_task_delay^0,f,c
  2238  0008DA  0E00               	movlw	0
  2239  0008DC  223D               	addwfc	(??_task_delay+1)^0,f,c
  2240  0008DE  0100               	movlb	0	; () banked
  2241  0008E0  51A0               	movf	?i1___wmul& (0+255),w,b
  2242  0008E2  263C               	addwf	??_task_delay^0,f,c
  2243  0008E4  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2244  0008E6  223D               	addwfc	(??_task_delay+1)^0,f,c
  2245  0008E8  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2246  0008EC  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2247  0008F0  0E00               	movlw	0
  2248  0008F2  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2249  0008F4  0E03               	movlw	3
  2250  0008F6  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2251  0008F8  EC3F  F00B         	call	i1___wmul	;wreg free
  2252  0008FC  0100               	movlb	0	; () banked
  2253  0008FE  51A0               	movf	?i1___wmul& (0+255),w,b
  2254  000900  243C               	addwf	??_task_delay^0,w,c
  2255  000902  6ED9               	movwf	fsr2l,c
  2256  000904  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2257  000906  203D               	addwfc	(??_task_delay+1)^0,w,c
  2258  000908  6EDA               	movwf	fsr2h,c
  2259  00090A  50DF               	movf	indf2,w,c
  2260  00090C  6EFF               	movwf	255,c	;volatile
  2261  00090E  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2262  000912  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2263  000916  0E00               	movlw	0
  2264  000918  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2265  00091A  0E65               	movlw	101
  2266  00091C  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2267  00091E  EC3F  F00B         	call	i1___wmul	;wreg free
  2268  000922  0E65               	movlw	low _f_aptos
  2269  000924  6E3C               	movwf	??_task_delay^0,c
  2270  000926  0E01               	movlw	high _f_aptos
  2271  000928  6E3D               	movwf	(??_task_delay+1)^0,c
  2272  00092A  0E05               	movlw	5
  2273  00092C  263C               	addwf	??_task_delay^0,f,c
  2274  00092E  0E00               	movlw	0
  2275  000930  223D               	addwfc	(??_task_delay+1)^0,f,c
  2276  000932  0100               	movlb	0	; () banked
  2277  000934  51A0               	movf	?i1___wmul& (0+255),w,b
  2278  000936  263C               	addwf	??_task_delay^0,f,c
  2279  000938  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2280  00093A  223D               	addwfc	(??_task_delay+1)^0,f,c
  2281  00093C  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2282  000940  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2283  000944  0E00               	movlw	0
  2284  000946  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2285  000948  0E03               	movlw	3
  2286  00094A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2287  00094C  EC3F  F00B         	call	i1___wmul	;wreg free
  2288  000950  0100               	movlb	0	; () banked
  2289  000952  51A0               	movf	?i1___wmul& (0+255),w,b
  2290  000954  243C               	addwf	??_task_delay^0,w,c
  2291  000956  6ED9               	movwf	fsr2l,c
  2292  000958  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2293  00095A  203D               	addwfc	(??_task_delay+1)^0,w,c
  2294  00095C  6EDA               	movwf	fsr2h,c
  2295  00095E  50DF               	movf	indf2,w,c
  2296  000960  6EFD               	movwf	253,c	;volatile
  2297  000962  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2298  000966  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2299  00096A  0E00               	movlw	0
  2300  00096C  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2301  00096E  0E65               	movlw	101
  2302  000970  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2303  000972  EC3F  F00B         	call	i1___wmul	;wreg free
  2304  000976  0E65               	movlw	low _f_aptos
  2305  000978  6E3C               	movwf	??_task_delay^0,c
  2306  00097A  0E01               	movlw	high _f_aptos
  2307  00097C  6E3D               	movwf	(??_task_delay+1)^0,c
  2308  00097E  0E06               	movlw	6
  2309  000980  263C               	addwf	??_task_delay^0,f,c
  2310  000982  0E00               	movlw	0
  2311  000984  223D               	addwfc	(??_task_delay+1)^0,f,c
  2312  000986  0100               	movlb	0	; () banked
  2313  000988  51A0               	movf	?i1___wmul& (0+255),w,b
  2314  00098A  263C               	addwf	??_task_delay^0,f,c
  2315  00098C  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2316  00098E  223D               	addwfc	(??_task_delay+1)^0,f,c
  2317  000990  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2318  000994  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2319  000998  0E00               	movlw	0
  2320  00099A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2321  00099C  0E03               	movlw	3
  2322  00099E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2323  0009A0  EC3F  F00B         	call	i1___wmul	;wreg free
  2324  0009A4  0100               	movlb	0	; () banked
  2325  0009A6  51A0               	movf	?i1___wmul& (0+255),w,b
  2326  0009A8  243C               	addwf	??_task_delay^0,w,c
  2327  0009AA  6ED9               	movwf	fsr2l,c
  2328  0009AC  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2329  0009AE  203D               	addwfc	(??_task_delay+1)^0,w,c
  2330  0009B0  6EDA               	movwf	fsr2h,c
  2331  0009B2  50DF               	movf	indf2,w,c
  2332  0009B4  6EFE               	movwf	254,c	;volatile
  2333  0009B6                     
  2334                           ; BSR set to: 0
  2335  0009B6  07BD               	decf	_index& (0+255),f,b
  2336  0009B8  A0D8               	btfss	status,0,c
  2337  0009BA  07BE               	decf	(_index+1)& (0+255),f,b
  2338  0009BC                     i1l2044:
  2339                           
  2340                           ; BSR set to: 0
  2341  0009BC  51BD               	movf	_index& (0+255),w,b
  2342  0009BE  11BE               	iorwf	(_index+1)& (0+255),w,b
  2343  0009C0  A4D8               	btfss	status,2,c
  2344  0009C2  EFE5  F004         	goto	i1u89_21
  2345  0009C6  EFE7  F004         	goto	i1u89_20
  2346  0009CA                     i1u89_21:
  2347  0009CA  EF5B  F004         	goto	i1l73
  2348  0009CE                     i1u89_20:
  2349  0009CE                     i1l71:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;kernel.c: 39:  INTCONbits.GIE = 1;
  2353  0009CE  8EF2               	bsf	242,7,c	;volatile
  2354  0009D0                     
  2355                           ; BSR set to: 0
  2356  0009D0  0012               	return		;funcret
  2357  0009D2                     __end_of_task_delay:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _sem_wait *****************
  2361 ;; Defined at:
  2362 ;;		line 21 in file "semaforo.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  sem             2   30[BANK0 ] PTR struct semaforo
  2365 ;;		 -> sem_teste(10), 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2377 ;;      Params:         0       2       0       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0
  2379 ;;      Temps:          4       0       0       0       0       0       0
  2380 ;;      Totals:         4       2       0       0       0       0       0
  2381 ;;Total ram usage:        6 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    7
  2384 ;; This function calls:
  2385 ;;		_scheduler
  2386 ;;		_who
  2387 ;;		i1___wmul
  2388 ;; This function is called by:
  2389 ;;		_task_1
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text15
  2394  000012                     __ptext15:
  2395                           	callstack 0
  2396  000012                     _sem_wait:
  2397                           	callstack 17
  2398  000012                     
  2399                           ;semaforo.c: 21: void sem_wait(sem_t *sem);semaforo.c: 22: {;semaforo.c: 23:    INTCONbi
      +                          ts.GIE = 0;
  2400  000012  9EF2               	bcf	242,7,c	;volatile
  2401  000014                     
  2402                           ;semaforo.c: 25:    if (sem->contadorSem <= 0) {
  2403  000014  C09E  FFD9         	movff	sem_wait@sem,fsr2l
  2404  000018  C09F  FFDA         	movff	sem_wait@sem+1,fsr2h
  2405  00001C  0E01               	movlw	1
  2406  00001E  BEDB               	btfsc	plusw2,7,c
  2407  000020  EF1D  F000         	goto	i1u90_20
  2408  000024  0E01               	movlw	1
  2409  000026  50DB               	movf	plusw2,w,c
  2410  000028  E106               	bnz	i1u90_21
  2411  00002A  04DE               	decf	postinc2,w,c
  2412  00002C  B0D8               	btfsc	status,0,c
  2413  00002E  EF1B  F000         	goto	i1u90_21
  2414  000032  EF1D  F000         	goto	i1u90_20
  2415  000036                     i1u90_21:
  2416  000036  EF91  F002         	goto	i1l2088
  2417  00003A                     i1u90_20:
  2418  00003A                     
  2419                           ;semaforo.c: 28:       sem->fila.tasks[sem->fila.queue] = who();
  2420  00003A  EC99  F00B         	call	_who	;wreg free
  2421  00003E  0100               	movlb	0	; () banked
  2422  000040  EE20 F006          	lfsr	2,6
  2423  000044  519E               	movf	sem_wait@sem& (0+255),w,b
  2424  000046  26D9               	addwf	fsr2l,f,c
  2425  000048  519F               	movf	(sem_wait@sem+1)& (0+255),w,b
  2426  00004A  22DA               	addwfc	fsr2h,f,c
  2427  00004C  CFDE F030          	movff	postinc2,??_sem_wait
  2428  000050  CFDD F031          	movff	postdec2,??_sem_wait+1
  2429  000054  90D8               	bcf	status,0,c
  2430  000056  3630               	rlcf	??_sem_wait^0,f,c
  2431  000058  3631               	rlcf	(??_sem_wait+1)^0,f,c
  2432  00005A  C09E  F032         	movff	sem_wait@sem,??_sem_wait+2
  2433  00005E  C09F  F033         	movff	sem_wait@sem+1,??_sem_wait+3
  2434  000062  5030               	movf	??_sem_wait^0,w,c
  2435  000064  2632               	addwf	(??_sem_wait+2)^0,f,c
  2436  000066  5031               	movf	(??_sem_wait+1)^0,w,c
  2437  000068  2233               	addwfc	(??_sem_wait+3)^0,f,c
  2438  00006A  0E02               	movlw	2
  2439  00006C  2432               	addwf	(??_sem_wait+2)^0,w,c
  2440  00006E  6ED9               	movwf	fsr2l,c
  2441  000070  0E00               	movlw	0
  2442  000072  2033               	addwfc	(??_sem_wait+3)^0,w,c
  2443  000074  6EDA               	movwf	fsr2h,c
  2444  000076  C096  FFDE         	movff	?_who,postinc2
  2445  00007A  C097  FFDD         	movff	?_who+1,postdec2
  2446  00007E                     
  2447                           ; BSR set to: 0
  2448                           ;semaforo.c: 29:       sem->fila.queue = (sem->fila.queue + 1) % (3 - 1);
  2449  00007E  EE20 F006          	lfsr	2,6
  2450  000082  519E               	movf	sem_wait@sem& (0+255),w,b
  2451  000084  26D9               	addwf	fsr2l,f,c
  2452  000086  519F               	movf	(sem_wait@sem+1)& (0+255),w,b
  2453  000088  22DA               	addwfc	fsr2h,f,c
  2454  00008A  CFDE F030          	movff	postinc2,??_sem_wait
  2455  00008E  CFDD F031          	movff	postdec2,??_sem_wait+1
  2456  000092  0E01               	movlw	1
  2457  000094  2630               	addwf	??_sem_wait^0,f,c
  2458  000096  0E00               	movlw	0
  2459  000098  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2460  00009A  0E01               	movlw	1
  2461  00009C  1630               	andwf	??_sem_wait^0,f,c
  2462  00009E  0E00               	movlw	0
  2463  0000A0  1631               	andwf	(??_sem_wait+1)^0,f,c
  2464  0000A2  EE20 F006          	lfsr	2,6
  2465  0000A6  519E               	movf	sem_wait@sem& (0+255),w,b
  2466  0000A8  26D9               	addwf	fsr2l,f,c
  2467  0000AA  519F               	movf	(sem_wait@sem+1)& (0+255),w,b
  2468  0000AC  22DA               	addwfc	fsr2h,f,c
  2469  0000AE  C030  FFDE         	movff	??_sem_wait,postinc2
  2470  0000B2  C031  FFDD         	movff	??_sem_wait+1,postdec2
  2471  0000B6                     
  2472                           ; BSR set to: 0
  2473                           ;semaforo.c: 31:       { index = 0; f_aptos.ready_queue[f_aptos.task_running].task_state
      +                           = WAITING_DELAY; f_aptos.ready_queue[f_aptos.task_running].w_reg = WREG; f_aptos.ready_
      +                          queue[f_aptos.task_running].bsr_reg = BSR; f_aptos.ready_queue[f_aptos.task_running].sta
      +                          tus_reg = STATUS; while (STKPTR) { f_aptos.ready_queue[f_aptos.task_running].task_stack.
      +                          stack[index].TOSU_reg = TOSU; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack
      +                          [index].TOSL_reg = TOSL; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[inde
      +                          x].TOSH_reg = TOSH; index++; __asm("POP"); } f_aptos.ready_queue[f_aptos.task_running].t
      +                          ask_stack.size = index; };
  2474  0000B6  0E00               	movlw	0
  2475  0000B8  6FBE               	movwf	(_index+1)& (0+255),b
  2476  0000BA  0E00               	movlw	0
  2477  0000BC  6FBD               	movwf	_index& (0+255),b
  2478  0000BE                     
  2479                           ; BSR set to: 0
  2480  0000BE  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2481  0000C2  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2482  0000C6  0E00               	movlw	0
  2483  0000C8  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2484  0000CA  0E65               	movlw	101
  2485  0000CC  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2486  0000CE  EC3F  F00B         	call	i1___wmul	;wreg free
  2487  0000D2  0E67               	movlw	low (_f_aptos+2)
  2488  0000D4  0100               	movlb	0	; () banked
  2489  0000D6  25A0               	addwf	?i1___wmul& (0+255),w,b
  2490  0000D8  6ED9               	movwf	fsr2l,c
  2491  0000DA  0E01               	movlw	high (_f_aptos+2)
  2492  0000DC  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2493  0000DE  6EDA               	movwf	fsr2h,c
  2494  0000E0  0E03               	movlw	3
  2495  0000E2  6EDF               	movwf	indf2,c
  2496  0000E4                     
  2497                           ; BSR set to: 0
  2498  0000E4  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2499  0000E8  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2500  0000EC  0E00               	movlw	0
  2501  0000EE  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2502  0000F0  0E65               	movlw	101
  2503  0000F2  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2504  0000F4  EC3F  F00B         	call	i1___wmul	;wreg free
  2505  0000F8  0EC6               	movlw	low (_f_aptos+97)
  2506  0000FA  0100               	movlb	0	; () banked
  2507  0000FC  25A0               	addwf	?i1___wmul& (0+255),w,b
  2508  0000FE  6ED9               	movwf	fsr2l,c
  2509  000100  0E01               	movlw	high (_f_aptos+97)
  2510  000102  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2511  000104  6EDA               	movwf	fsr2h,c
  2512  000106  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2513  00010A                     
  2514                           ; BSR set to: 0
  2515  00010A  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2516  00010E  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2517  000112  0E00               	movlw	0
  2518  000114  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2519  000116  0E65               	movlw	101
  2520  000118  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2521  00011A  EC3F  F00B         	call	i1___wmul	;wreg free
  2522  00011E  0EC5               	movlw	low (_f_aptos+96)
  2523  000120  0100               	movlb	0	; () banked
  2524  000122  25A0               	addwf	?i1___wmul& (0+255),w,b
  2525  000124  6ED9               	movwf	fsr2l,c
  2526  000126  0E01               	movlw	high (_f_aptos+96)
  2527  000128  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2528  00012A  6EDA               	movwf	fsr2h,c
  2529  00012C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2530  000130                     
  2531                           ; BSR set to: 0
  2532  000130  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2533  000134  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2534  000138  0E00               	movlw	0
  2535  00013A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2536  00013C  0E65               	movlw	101
  2537  00013E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2538  000140  EC3F  F00B         	call	i1___wmul	;wreg free
  2539  000144  0EC7               	movlw	low (_f_aptos+98)
  2540  000146  0100               	movlb	0	; () banked
  2541  000148  25A0               	addwf	?i1___wmul& (0+255),w,b
  2542  00014A  6ED9               	movwf	fsr2l,c
  2543  00014C  0E01               	movlw	high (_f_aptos+98)
  2544  00014E  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2545  000150  6EDA               	movwf	fsr2h,c
  2546  000152  CFD8 FFDF          	movff	status,indf2	;volatile
  2547  000156  EF2F  F001         	goto	i1l2068
  2548  00015A                     i1l2064:
  2549  00015A  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2550  00015E  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2551  000162  0E00               	movlw	0
  2552  000164  0100               	movlb	0	; () banked
  2553  000166  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2554  000168  0E65               	movlw	101
  2555  00016A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2556  00016C  EC3F  F00B         	call	i1___wmul	;wreg free
  2557  000170  0E65               	movlw	low _f_aptos
  2558  000172  6E30               	movwf	??_sem_wait^0,c
  2559  000174  0E01               	movlw	high _f_aptos
  2560  000176  6E31               	movwf	(??_sem_wait+1)^0,c
  2561  000178  0E07               	movlw	7
  2562  00017A  2630               	addwf	??_sem_wait^0,f,c
  2563  00017C  0E00               	movlw	0
  2564  00017E  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2565  000180  0100               	movlb	0	; () banked
  2566  000182  51A0               	movf	?i1___wmul& (0+255),w,b
  2567  000184  2630               	addwf	??_sem_wait^0,f,c
  2568  000186  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2569  000188  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2570  00018A  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2571  00018E  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2572  000192  0E00               	movlw	0
  2573  000194  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2574  000196  0E03               	movlw	3
  2575  000198  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2576  00019A  EC3F  F00B         	call	i1___wmul	;wreg free
  2577  00019E  0100               	movlb	0	; () banked
  2578  0001A0  51A0               	movf	?i1___wmul& (0+255),w,b
  2579  0001A2  2430               	addwf	??_sem_wait^0,w,c
  2580  0001A4  6ED9               	movwf	fsr2l,c
  2581  0001A6  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2582  0001A8  2031               	addwfc	(??_sem_wait+1)^0,w,c
  2583  0001AA  6EDA               	movwf	fsr2h,c
  2584  0001AC  CFFF FFDF          	movff	tosu,indf2	;volatile
  2585  0001B0  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2586  0001B4  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2587  0001B8  0E00               	movlw	0
  2588  0001BA  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2589  0001BC  0E65               	movlw	101
  2590  0001BE  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2591  0001C0  EC3F  F00B         	call	i1___wmul	;wreg free
  2592  0001C4  0E65               	movlw	low _f_aptos
  2593  0001C6  6E30               	movwf	??_sem_wait^0,c
  2594  0001C8  0E01               	movlw	high _f_aptos
  2595  0001CA  6E31               	movwf	(??_sem_wait+1)^0,c
  2596  0001CC  0E08               	movlw	8
  2597  0001CE  2630               	addwf	??_sem_wait^0,f,c
  2598  0001D0  0E00               	movlw	0
  2599  0001D2  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2600  0001D4  0100               	movlb	0	; () banked
  2601  0001D6  51A0               	movf	?i1___wmul& (0+255),w,b
  2602  0001D8  2630               	addwf	??_sem_wait^0,f,c
  2603  0001DA  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2604  0001DC  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2605  0001DE  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2606  0001E2  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2607  0001E6  0E00               	movlw	0
  2608  0001E8  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2609  0001EA  0E03               	movlw	3
  2610  0001EC  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2611  0001EE  EC3F  F00B         	call	i1___wmul	;wreg free
  2612  0001F2  0100               	movlb	0	; () banked
  2613  0001F4  51A0               	movf	?i1___wmul& (0+255),w,b
  2614  0001F6  2430               	addwf	??_sem_wait^0,w,c
  2615  0001F8  6ED9               	movwf	fsr2l,c
  2616  0001FA  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2617  0001FC  2031               	addwfc	(??_sem_wait+1)^0,w,c
  2618  0001FE  6EDA               	movwf	fsr2h,c
  2619  000200  CFFD FFDF          	movff	tosl,indf2	;volatile
  2620  000204  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2621  000208  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2622  00020C  0E00               	movlw	0
  2623  00020E  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2624  000210  0E65               	movlw	101
  2625  000212  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2626  000214  EC3F  F00B         	call	i1___wmul	;wreg free
  2627  000218  0E65               	movlw	low _f_aptos
  2628  00021A  6E30               	movwf	??_sem_wait^0,c
  2629  00021C  0E01               	movlw	high _f_aptos
  2630  00021E  6E31               	movwf	(??_sem_wait+1)^0,c
  2631  000220  0E09               	movlw	9
  2632  000222  2630               	addwf	??_sem_wait^0,f,c
  2633  000224  0E00               	movlw	0
  2634  000226  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2635  000228  0100               	movlb	0	; () banked
  2636  00022A  51A0               	movf	?i1___wmul& (0+255),w,b
  2637  00022C  2630               	addwf	??_sem_wait^0,f,c
  2638  00022E  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2639  000230  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2640  000232  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2641  000236  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2642  00023A  0E00               	movlw	0
  2643  00023C  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2644  00023E  0E03               	movlw	3
  2645  000240  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2646  000242  EC3F  F00B         	call	i1___wmul	;wreg free
  2647  000246  0100               	movlb	0	; () banked
  2648  000248  51A0               	movf	?i1___wmul& (0+255),w,b
  2649  00024A  2430               	addwf	??_sem_wait^0,w,c
  2650  00024C  6ED9               	movwf	fsr2l,c
  2651  00024E  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2652  000250  2031               	addwfc	(??_sem_wait+1)^0,w,c
  2653  000252  6EDA               	movwf	fsr2h,c
  2654  000254  CFFE FFDF          	movff	tosh,indf2	;volatile
  2655  000258                     
  2656                           ; BSR set to: 0
  2657  000258  4BBD               	infsnz	_index& (0+255),f,b
  2658  00025A  2BBE               	incf	(_index+1)& (0+255),f,b
  2659  00025C  0006               	pop		;# 
  2660  00025E                     i1l2068:
  2661  00025E  50FC               	movf	252,w,c	;volatile
  2662  000260  A4D8               	btfss	status,2,c
  2663  000262  EF35  F001         	goto	i1u91_21
  2664  000266  EF37  F001         	goto	i1u91_20
  2665  00026A                     i1u91_21:
  2666  00026A  EFAD  F000         	goto	i1l2064
  2667  00026E                     i1u91_20:
  2668  00026E  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2669  000272  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2670  000276  0E00               	movlw	0
  2671  000278  0100               	movlb	0	; () banked
  2672  00027A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2673  00027C  0E65               	movlw	101
  2674  00027E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2675  000280  EC3F  F00B         	call	i1___wmul	;wreg free
  2676  000284  0EC3               	movlw	low (_f_aptos+94)
  2677  000286  0100               	movlb	0	; () banked
  2678  000288  25A0               	addwf	?i1___wmul& (0+255),w,b
  2679  00028A  6ED9               	movwf	fsr2l,c
  2680  00028C  0E01               	movlw	high (_f_aptos+94)
  2681  00028E  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2682  000290  6EDA               	movwf	fsr2h,c
  2683  000292  C0BD  FFDE         	movff	_index,postinc2
  2684  000296  C0BE  FFDD         	movff	_index+1,postdec2
  2685                           
  2686                           ;semaforo.c: 33:       { f_aptos.task_running = scheduler(); STKPTR = 0; if (f_aptos.rea
      +                          dy_queue[f_aptos.task_running].task_stack.size == 0) { __asm("PUSH"); TOS = f_aptos.read
      +                          y_queue[f_aptos.task_running].task_func; f_aptos.ready_queue[f_aptos.task_running].task_
      +                          state = RUNNING; } else { f_aptos.ready_queue[f_aptos.task_running].task_state = RUNNING
      +                          ; WREG = f_aptos.ready_queue[f_aptos.task_running].w_reg; BSR = f_aptos.ready_queue[f_ap
      +                          tos.task_running].bsr_reg; STATUS = f_aptos.ready_queue[f_aptos.task_running].status_reg
      +                          ; index = f_aptos.ready_queue[f_aptos.task_running].task_stack.size; while(index) { __as
      +                          m("PUSH"); TOSU = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].
      +                          TOSU_reg; TOSL = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].T
      +                          OSL_reg; TOSH = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TO
      +                          SH_reg; index--; } } };
  2687  00029A  EC85  F00B         	call	_scheduler	;wreg free
  2688  00029E  0100               	movlb	0	; () banked
  2689  0002A0  C0A6  F2FB         	movff	?_scheduler,_f_aptos+406
  2690  0002A4  C0A7  F2FC         	movff	?_scheduler+1,_f_aptos+407
  2691  0002A8                     
  2692                           ; BSR set to: 0
  2693  0002A8  0E00               	movlw	0
  2694  0002AA  6EFC               	movwf	252,c	;volatile
  2695  0002AC                     
  2696                           ; BSR set to: 0
  2697  0002AC  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2698  0002B0  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2699  0002B4  0E00               	movlw	0
  2700  0002B6  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2701  0002B8  0E65               	movlw	101
  2702  0002BA  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2703  0002BC  EC3F  F00B         	call	i1___wmul	;wreg free
  2704  0002C0  0EC3               	movlw	low (_f_aptos+94)
  2705  0002C2  0100               	movlb	0	; () banked
  2706  0002C4  25A0               	addwf	?i1___wmul& (0+255),w,b
  2707  0002C6  6ED9               	movwf	fsr2l,c
  2708  0002C8  0E01               	movlw	high (_f_aptos+94)
  2709  0002CA  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2710  0002CC  6EDA               	movwf	fsr2h,c
  2711  0002CE  50DE               	movf	postinc2,w,c
  2712  0002D0  10DE               	iorwf	postinc2,w,c
  2713  0002D2  A4D8               	btfss	status,2,c
  2714  0002D4  EF6E  F001         	goto	i1u92_21
  2715  0002D8  EF70  F001         	goto	i1u92_20
  2716  0002DC                     i1u92_21:
  2717  0002DC  EFA1  F001         	goto	i1l2080
  2718  0002E0                     i1u92_20:
  2719  0002E0                     
  2720                           ; BSR set to: 0
  2721  0002E0  0005               	push		;# 
  2722  0002E2  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2723  0002E6  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2724  0002EA  0E00               	movlw	0
  2725  0002EC  0100               	movlb	0	; () banked
  2726  0002EE  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2727  0002F0  0E65               	movlw	101
  2728  0002F2  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2729  0002F4  EC3F  F00B         	call	i1___wmul	;wreg free
  2730  0002F8  0E6A               	movlw	low (_f_aptos+5)
  2731  0002FA  0100               	movlb	0	; () banked
  2732  0002FC  25A0               	addwf	?i1___wmul& (0+255),w,b
  2733  0002FE  6ED9               	movwf	fsr2l,c
  2734  000300  0E01               	movlw	high (_f_aptos+5)
  2735  000302  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2736  000304  6EDA               	movwf	fsr2h,c
  2737  000306  CFDE F030          	movff	postinc2,??_sem_wait
  2738  00030A  CFDD F031          	movff	postdec2,??_sem_wait+1
  2739  00030E  C030  FFFD         	movff	??_sem_wait,tosl	;volatile
  2740  000312  C031  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  2741  000316  6AFF               	clrf	255,c	;volatile
  2742  000318  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2743  00031C  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2744  000320  0E00               	movlw	0
  2745  000322  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2746  000324  0E65               	movlw	101
  2747  000326  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2748  000328  EC3F  F00B         	call	i1___wmul	;wreg free
  2749  00032C  0E67               	movlw	low (_f_aptos+2)
  2750  00032E  0100               	movlb	0	; () banked
  2751  000330  25A0               	addwf	?i1___wmul& (0+255),w,b
  2752  000332  6ED9               	movwf	fsr2l,c
  2753  000334  0E01               	movlw	high (_f_aptos+2)
  2754  000336  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2755  000338  6EDA               	movwf	fsr2h,c
  2756  00033A  0E01               	movlw	1
  2757  00033C  6EDF               	movwf	indf2,c
  2758  00033E  EF91  F002         	goto	i1l2088
  2759  000342                     i1l2080:
  2760                           
  2761                           ; BSR set to: 0
  2762  000342  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2763  000346  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2764  00034A  0E00               	movlw	0
  2765  00034C  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2766  00034E  0E65               	movlw	101
  2767  000350  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2768  000352  EC3F  F00B         	call	i1___wmul	;wreg free
  2769  000356  0E67               	movlw	low (_f_aptos+2)
  2770  000358  0100               	movlb	0	; () banked
  2771  00035A  25A0               	addwf	?i1___wmul& (0+255),w,b
  2772  00035C  6ED9               	movwf	fsr2l,c
  2773  00035E  0E01               	movlw	high (_f_aptos+2)
  2774  000360  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2775  000362  6EDA               	movwf	fsr2h,c
  2776  000364  0E01               	movlw	1
  2777  000366  6EDF               	movwf	indf2,c
  2778  000368  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2779  00036C  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2780  000370  0E00               	movlw	0
  2781  000372  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2782  000374  0E65               	movlw	101
  2783  000376  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2784  000378  EC3F  F00B         	call	i1___wmul	;wreg free
  2785  00037C  0EC6               	movlw	low (_f_aptos+97)
  2786  00037E  0100               	movlb	0	; () banked
  2787  000380  25A0               	addwf	?i1___wmul& (0+255),w,b
  2788  000382  6ED9               	movwf	fsr2l,c
  2789  000384  0E01               	movlw	high (_f_aptos+97)
  2790  000386  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2791  000388  6EDA               	movwf	fsr2h,c
  2792  00038A  50DF               	movf	indf2,w,c
  2793  00038C  6E30               	movwf	??_sem_wait^0,c
  2794  00038E  5030               	movf	??_sem_wait^0,w,c
  2795  000390  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2796  000394  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2797  000398  0E00               	movlw	0
  2798  00039A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2799  00039C  0E65               	movlw	101
  2800  00039E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2801  0003A0  EC3F  F00B         	call	i1___wmul	;wreg free
  2802  0003A4  0EC5               	movlw	low (_f_aptos+96)
  2803  0003A6  0100               	movlb	0	; () banked
  2804  0003A8  25A0               	addwf	?i1___wmul& (0+255),w,b
  2805  0003AA  6ED9               	movwf	fsr2l,c
  2806  0003AC  0E01               	movlw	high (_f_aptos+96)
  2807  0003AE  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2808  0003B0  6EDA               	movwf	fsr2h,c
  2809  0003B2  50DF               	movf	indf2,w,c
  2810  0003B4  6EE0               	movwf	224,c	;volatile
  2811  0003B6  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2812  0003BA  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2813  0003BE  0E00               	movlw	0
  2814  0003C0  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2815  0003C2  0E65               	movlw	101
  2816  0003C4  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2817  0003C6  EC3F  F00B         	call	i1___wmul	;wreg free
  2818  0003CA  0EC7               	movlw	low (_f_aptos+98)
  2819  0003CC  0100               	movlb	0	; () banked
  2820  0003CE  25A0               	addwf	?i1___wmul& (0+255),w,b
  2821  0003D0  6ED9               	movwf	fsr2l,c
  2822  0003D2  0E01               	movlw	high (_f_aptos+98)
  2823  0003D4  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2824  0003D6  6EDA               	movwf	fsr2h,c
  2825  0003D8  50DF               	movf	indf2,w,c
  2826  0003DA  6ED8               	movwf	216,c	;volatile
  2827  0003DC  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2828  0003E0  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2829  0003E4  0E00               	movlw	0
  2830  0003E6  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2831  0003E8  0E65               	movlw	101
  2832  0003EA  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2833  0003EC  EC3F  F00B         	call	i1___wmul	;wreg free
  2834  0003F0  0EC3               	movlw	low (_f_aptos+94)
  2835  0003F2  0100               	movlb	0	; () banked
  2836  0003F4  25A0               	addwf	?i1___wmul& (0+255),w,b
  2837  0003F6  6ED9               	movwf	fsr2l,c
  2838  0003F8  0E01               	movlw	high (_f_aptos+94)
  2839  0003FA  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  2840  0003FC  6EDA               	movwf	fsr2h,c
  2841  0003FE  CFDE F0BD          	movff	postinc2,_index
  2842  000402  CFDD F0BE          	movff	postdec2,_index+1
  2843  000406  EF88  F002         	goto	i1l2086
  2844  00040A                     i1l256:
  2845                           
  2846                           ; BSR set to: 0
  2847  00040A  0005               	push		;# 
  2848  00040C  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2849  000410  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2850  000414  0E00               	movlw	0
  2851  000416  0100               	movlb	0	; () banked
  2852  000418  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2853  00041A  0E65               	movlw	101
  2854  00041C  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2855  00041E  EC3F  F00B         	call	i1___wmul	;wreg free
  2856  000422  0E65               	movlw	low _f_aptos
  2857  000424  6E30               	movwf	??_sem_wait^0,c
  2858  000426  0E01               	movlw	high _f_aptos
  2859  000428  6E31               	movwf	(??_sem_wait+1)^0,c
  2860  00042A  0E04               	movlw	4
  2861  00042C  2630               	addwf	??_sem_wait^0,f,c
  2862  00042E  0E00               	movlw	0
  2863  000430  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2864  000432  0100               	movlb	0	; () banked
  2865  000434  51A0               	movf	?i1___wmul& (0+255),w,b
  2866  000436  2630               	addwf	??_sem_wait^0,f,c
  2867  000438  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2868  00043A  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2869  00043C  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2870  000440  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2871  000444  0E00               	movlw	0
  2872  000446  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2873  000448  0E03               	movlw	3
  2874  00044A  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2875  00044C  EC3F  F00B         	call	i1___wmul	;wreg free
  2876  000450  0100               	movlb	0	; () banked
  2877  000452  51A0               	movf	?i1___wmul& (0+255),w,b
  2878  000454  2430               	addwf	??_sem_wait^0,w,c
  2879  000456  6ED9               	movwf	fsr2l,c
  2880  000458  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2881  00045A  2031               	addwfc	(??_sem_wait+1)^0,w,c
  2882  00045C  6EDA               	movwf	fsr2h,c
  2883  00045E  50DF               	movf	indf2,w,c
  2884  000460  6EFF               	movwf	255,c	;volatile
  2885  000462  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2886  000466  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2887  00046A  0E00               	movlw	0
  2888  00046C  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2889  00046E  0E65               	movlw	101
  2890  000470  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2891  000472  EC3F  F00B         	call	i1___wmul	;wreg free
  2892  000476  0E65               	movlw	low _f_aptos
  2893  000478  6E30               	movwf	??_sem_wait^0,c
  2894  00047A  0E01               	movlw	high _f_aptos
  2895  00047C  6E31               	movwf	(??_sem_wait+1)^0,c
  2896  00047E  0E05               	movlw	5
  2897  000480  2630               	addwf	??_sem_wait^0,f,c
  2898  000482  0E00               	movlw	0
  2899  000484  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2900  000486  0100               	movlb	0	; () banked
  2901  000488  51A0               	movf	?i1___wmul& (0+255),w,b
  2902  00048A  2630               	addwf	??_sem_wait^0,f,c
  2903  00048C  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2904  00048E  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2905  000490  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2906  000494  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2907  000498  0E00               	movlw	0
  2908  00049A  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2909  00049C  0E03               	movlw	3
  2910  00049E  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2911  0004A0  EC3F  F00B         	call	i1___wmul	;wreg free
  2912  0004A4  0100               	movlb	0	; () banked
  2913  0004A6  51A0               	movf	?i1___wmul& (0+255),w,b
  2914  0004A8  2430               	addwf	??_sem_wait^0,w,c
  2915  0004AA  6ED9               	movwf	fsr2l,c
  2916  0004AC  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2917  0004AE  2031               	addwfc	(??_sem_wait+1)^0,w,c
  2918  0004B0  6EDA               	movwf	fsr2h,c
  2919  0004B2  50DF               	movf	indf2,w,c
  2920  0004B4  6EFD               	movwf	253,c	;volatile
  2921  0004B6  C2FB  F0A0         	movff	_f_aptos+406,i1___wmul@multiplier
  2922  0004BA  C2FC  F0A1         	movff	_f_aptos+407,i1___wmul@multiplier+1
  2923  0004BE  0E00               	movlw	0
  2924  0004C0  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2925  0004C2  0E65               	movlw	101
  2926  0004C4  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2927  0004C6  EC3F  F00B         	call	i1___wmul	;wreg free
  2928  0004CA  0E65               	movlw	low _f_aptos
  2929  0004CC  6E30               	movwf	??_sem_wait^0,c
  2930  0004CE  0E01               	movlw	high _f_aptos
  2931  0004D0  6E31               	movwf	(??_sem_wait+1)^0,c
  2932  0004D2  0E06               	movlw	6
  2933  0004D4  2630               	addwf	??_sem_wait^0,f,c
  2934  0004D6  0E00               	movlw	0
  2935  0004D8  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2936  0004DA  0100               	movlb	0	; () banked
  2937  0004DC  51A0               	movf	?i1___wmul& (0+255),w,b
  2938  0004DE  2630               	addwf	??_sem_wait^0,f,c
  2939  0004E0  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2940  0004E2  2231               	addwfc	(??_sem_wait+1)^0,f,c
  2941  0004E4  C0BD  F0A0         	movff	_index,i1___wmul@multiplier
  2942  0004E8  C0BE  F0A1         	movff	_index+1,i1___wmul@multiplier+1
  2943  0004EC  0E00               	movlw	0
  2944  0004EE  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  2945  0004F0  0E03               	movlw	3
  2946  0004F2  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  2947  0004F4  EC3F  F00B         	call	i1___wmul	;wreg free
  2948  0004F8  0100               	movlb	0	; () banked
  2949  0004FA  51A0               	movf	?i1___wmul& (0+255),w,b
  2950  0004FC  2430               	addwf	??_sem_wait^0,w,c
  2951  0004FE  6ED9               	movwf	fsr2l,c
  2952  000500  51A1               	movf	(?i1___wmul+1)& (0+255),w,b
  2953  000502  2031               	addwfc	(??_sem_wait+1)^0,w,c
  2954  000504  6EDA               	movwf	fsr2h,c
  2955  000506  50DF               	movf	indf2,w,c
  2956  000508  6EFE               	movwf	254,c	;volatile
  2957  00050A                     
  2958                           ; BSR set to: 0
  2959  00050A  07BD               	decf	_index& (0+255),f,b
  2960  00050C  A0D8               	btfss	status,0,c
  2961  00050E  07BE               	decf	(_index+1)& (0+255),f,b
  2962  000510                     i1l2086:
  2963                           
  2964                           ; BSR set to: 0
  2965  000510  51BD               	movf	_index& (0+255),w,b
  2966  000512  11BE               	iorwf	(_index+1)& (0+255),w,b
  2967  000514  A4D8               	btfss	status,2,c
  2968  000516  EF8F  F002         	goto	i1u93_21
  2969  00051A  EF91  F002         	goto	i1u93_20
  2970  00051E                     i1u93_21:
  2971  00051E  EF05  F002         	goto	i1l256
  2972  000522                     i1u93_20:
  2973  000522                     i1l2088:
  2974                           
  2975                           ;semaforo.c: 35:    sem->contadorSem--;
  2976  000522  C09E  FFD9         	movff	sem_wait@sem,fsr2l
  2977  000526  C09F  FFDA         	movff	sem_wait@sem+1,fsr2h
  2978  00052A  06DE               	decf	postinc2,f,c
  2979  00052C  0E00               	movlw	0
  2980  00052E  5ADD               	subwfb	postdec2,f,c
  2981  000530                     
  2982                           ;semaforo.c: 37:    INTCONbits.GIE = 1;
  2983  000530  8EF2               	bsf	242,7,c	;volatile
  2984  000532  0012               	return		;funcret
  2985  000534                     __end_of_sem_wait:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _who *****************
  2989 ;; Defined at:
  2990 ;;		line 114 in file "kernel.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2   22[BANK0 ] unsigned int 
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3004 ;;      Params:         0       2       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0
  3007 ;;      Totals:         0       2       0       0       0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_sem_wait
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text16
  3019  001732                     __ptext16:
  3020                           	callstack 0
  3021  001732                     _who:
  3022                           	callstack 19
  3023  001732                     
  3024                           ;kernel.c: 116:    return f_aptos.task_running;
  3025  001732  C2FB  F096         	movff	_f_aptos+406,?_who
  3026  001736  C2FC  F097         	movff	_f_aptos+407,?_who+1
  3027  00173A  0012               	return		;funcret
  3028  00173C                     __end_of_who:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _scheduler *****************
  3032 ;; Defined at:
  3033 ;;		line 13 in file "scheduler.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   38[BANK0 ] unsigned int 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3047 ;;      Params:         0       2       0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0
  3050 ;;      Totals:         0       2       0       0       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    6
  3054 ;; This function calls:
  3055 ;;		_rr_scheduler
  3056 ;; This function is called by:
  3057 ;;		_task_delay
  3058 ;;		_sem_wait
  3059 ;;		_task_yield
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text17
  3064  00170A                     __ptext17:
  3065                           	callstack 0
  3066  00170A                     _scheduler:
  3067                           	callstack 17
  3068  00170A                     
  3069                           ;scheduler.c: 16:    return rr_scheduler();
  3070  00170A  EC41  F009         	call	_rr_scheduler	;wreg free
  3071  00170E  C0A4  F0A6         	movff	?_rr_scheduler,?_scheduler
  3072  001712  C0A5  F0A7         	movff	?_rr_scheduler+1,?_scheduler+1
  3073  001716  0012               	return		;funcret
  3074  001718                     __end_of_scheduler:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _rr_scheduler *****************
  3078 ;; Defined at:
  3079 ;;		line 22 in file "scheduler.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  next_task       2   57[COMRAM] unsigned int 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2   36[BANK0 ] unsigned int 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3093 ;;      Params:         0       2       0       0       0       0       0
  3094 ;;      Locals:         2       0       0       0       0       0       0
  3095 ;;      Temps:          2       0       0       0       0       0       0
  3096 ;;      Totals:         4       2       0       0       0       0       0
  3097 ;;Total ram usage:        6 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    5
  3100 ;; This function calls:
  3101 ;;		i1___wmul
  3102 ;; This function is called by:
  3103 ;;		_scheduler
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text18
  3108  001282                     __ptext18:
  3109                           	callstack 0
  3110  001282                     _rr_scheduler:
  3111                           	callstack 17
  3112  001282                     
  3113                           ;scheduler.c: 24:    u_int next_task = f_aptos.task_running;
  3114  001282  C2FB  F03A         	movff	_f_aptos+406,rr_scheduler@next_task
  3115  001286  C2FC  F03B         	movff	_f_aptos+407,rr_scheduler@next_task+1
  3116  00128A                     i1l1934:
  3117                           
  3118                           ;scheduler.c: 27:   next_task += 1;
  3119  00128A  4A3A               	infsnz	rr_scheduler@next_task^0,f,c
  3120  00128C  2A3B               	incf	(rr_scheduler@next_task+1)^0,f,c
  3121  00128E                     
  3122                           ;scheduler.c: 28:   if(next_task >= f_aptos.ready_queue_size){
  3123  00128E  EE22  F0F9         	lfsr	2,_f_aptos+404
  3124  001292  50DE               	movf	postinc2,w,c
  3125  001294  5C3A               	subwf	rr_scheduler@next_task^0,w,c
  3126  001296  50DE               	movf	postinc2,w,c
  3127  001298  583B               	subwfb	(rr_scheduler@next_task+1)^0,w,c
  3128  00129A  A0D8               	btfss	status,0,c
  3129  00129C  EF52  F009         	goto	i1u83_21
  3130  0012A0  EF54  F009         	goto	i1u83_20
  3131  0012A4                     i1u83_21:
  3132  0012A4  EF5A  F009         	goto	i1l1940
  3133  0012A8                     i1u83_20:
  3134  0012A8                     
  3135                           ;scheduler.c: 29:    next_task = 0;
  3136  0012A8  0E00               	movlw	0
  3137  0012AA  6E3B               	movwf	(rr_scheduler@next_task+1)^0,c
  3138  0012AC  0E00               	movlw	0
  3139  0012AE  6E3A               	movwf	rr_scheduler@next_task^0,c
  3140                           
  3141                           ;scheduler.c: 30:    break;
  3142  0012B0  EF74  F009         	goto	i1l157
  3143  0012B4                     i1l1940:
  3144                           
  3145                           ;scheduler.c: 32:  } while (f_aptos.ready_queue[next_task].task_state != READY);
  3146  0012B4  C03A  F0A0         	movff	rr_scheduler@next_task,i1___wmul@multiplier
  3147  0012B8  C03B  F0A1         	movff	rr_scheduler@next_task+1,i1___wmul@multiplier+1
  3148  0012BC  0E00               	movlw	0
  3149  0012BE  0100               	movlb	0	; () banked
  3150  0012C0  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  3151  0012C2  0E65               	movlw	101
  3152  0012C4  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  3153  0012C6  EC3F  F00B         	call	i1___wmul	;wreg free
  3154  0012CA  0E67               	movlw	low (_f_aptos+2)
  3155  0012CC  0100               	movlb	0	; () banked
  3156  0012CE  25A0               	addwf	?i1___wmul& (0+255),w,b
  3157  0012D0  6ED9               	movwf	fsr2l,c
  3158  0012D2  0E01               	movlw	high (_f_aptos+2)
  3159  0012D4  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  3160  0012D6  6EDA               	movwf	fsr2h,c
  3161  0012D8  50DF               	movf	indf2,w,c
  3162  0012DA  A4D8               	btfss	status,2,c
  3163  0012DC  EF72  F009         	goto	i1u84_21
  3164  0012E0  EF74  F009         	goto	i1u84_20
  3165  0012E4                     i1u84_21:
  3166  0012E4  EF45  F009         	goto	i1l1934
  3167  0012E8                     i1u84_20:
  3168  0012E8                     i1l157:
  3169                           
  3170                           ;scheduler.c: 34:  return next_task;
  3171  0012E8  C03A  F0A4         	movff	rr_scheduler@next_task,?_rr_scheduler
  3172  0012EC  C03B  F0A5         	movff	rr_scheduler@next_task+1,?_rr_scheduler+1
  3173  0012F0  0012               	return		;funcret
  3174  0012F2                     __end_of_rr_scheduler:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function i1___wmul *****************
  3178 ;; Defined at:
  3179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  multiplier      2   32[BANK0 ] unsigned int 
  3182 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  product         2   53[COMRAM] unsigned int 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  2   32[BANK0 ] unsigned int 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, prodl, prodh
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3194 ;;      Params:         0       4       0       0       0       0       0
  3195 ;;      Locals:         2       0       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0
  3197 ;;      Totals:         2       4       0       0       0       0       0
  3198 ;;Total ram usage:        6 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    4
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_task_delay
  3205 ;;		_rr_scheduler
  3206 ;;		_sem_wait
  3207 ;;		_sem_post
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text19
  3212  00167E                     __ptext19:
  3213                           	callstack 0
  3214  00167E                     i1___wmul:
  3215                           	callstack 19
  3216  00167E  0100               	movlb	0	; () banked
  3217  001680  51A0               	movf	i1___wmul@multiplier& (0+255),w,b
  3218  001682  03A2               	mulwf	i1___wmul@multiplicand& (0+255),b
  3219  001684  CFF3 F036          	movff	prodl,i1___wmul@product
  3220  001688  CFF4 F037          	movff	prodh,i1___wmul@product+1
  3221  00168C  51A0               	movf	i1___wmul@multiplier& (0+255),w,b
  3222  00168E  03A3               	mulwf	(i1___wmul@multiplicand+1)& (0+255),b
  3223  001690  50F3               	movf	243,w,c
  3224  001692  2637               	addwf	(i1___wmul@product+1)^0,f,c
  3225  001694  51A1               	movf	(i1___wmul@multiplier+1)& (0+255),w,b
  3226  001696  03A2               	mulwf	i1___wmul@multiplicand& (0+255),b
  3227  001698  50F3               	movf	243,w,c
  3228  00169A  2637               	addwf	(i1___wmul@product+1)^0,f,c
  3229  00169C                     
  3230                           ; BSR set to: 0
  3231  00169C  C036  F0A0         	movff	i1___wmul@product,?i1___wmul
  3232  0016A0  C037  F0A1         	movff	i1___wmul@product+1,?i1___wmul+1
  3233  0016A4                     
  3234                           ; BSR set to: 0
  3235  0016A4  0012               	return		;funcret
  3236  0016A6                     __end_ofi1___wmul:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _task_2 *****************
  3240 ;; Defined at:
  3241 ;;		line 30 in file "tasks.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3255 ;;      Params:         0       0       0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0
  3257 ;;      Temps:          1       0       0       0       0       0       0
  3258 ;;      Totals:         1       0       0       0       0       0       0
  3259 ;;Total ram usage:        1 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    4
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text20
  3270  0016A6                     __ptext20:
  3271                           	callstack 0
  3272  0016A6                     _task_2:
  3273                           	callstack 21
  3274  0016A6                     l134:
  3275  0016A6                     
  3276                           ;tasks.c: 33:   PORTDbits.RD1 = ~PORTDbits.RD1;
  3277  0016A6  B283               	btfsc	131,1,c	;volatile
  3278  0016A8  EF58  F00B         	goto	u100_21
  3279  0016AC  EF5B  F00B         	goto	u100_20
  3280  0016B0                     u100_21:
  3281  0016B0  0E01               	movlw	1
  3282  0016B2  EF5C  F00B         	goto	u100_26
  3283  0016B6                     u100_20:
  3284  0016B6  0E00               	movlw	0
  3285  0016B8                     u100_26:
  3286  0016B8  0AFF               	xorlw	255
  3287  0016BA  6E35               	movwf	??_task_2^0,c
  3288  0016BC  4635               	rlncf	??_task_2^0,f,c
  3289  0016BE  5083               	movf	131,w,c	;volatile
  3290  0016C0  1835               	xorwf	??_task_2^0,w,c
  3291  0016C2  0BFD               	andlw	-3
  3292  0016C4  1835               	xorwf	??_task_2^0,w,c
  3293  0016C6  6E83               	movwf	131,c	;volatile
  3294  0016C8  EF53  F00B         	goto	l134
  3295  0016CC  0012               	return		;funcret
  3296  0016CE                     __end_of_task_2:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _task_3 *****************
  3300 ;; Defined at:
  3301 ;;		line 37 in file "tasks.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         0       0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0
  3317 ;;      Temps:          1       0       0       0       0       0       0
  3318 ;;      Totals:         1       0       0       0       0       0       0
  3319 ;;Total ram usage:        1 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    8
  3322 ;; This function calls:
  3323 ;;		_sem_post
  3324 ;;		_task_delay
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text21
  3331  0013CC                     __ptext21:
  3332                           	callstack 0
  3333  0013CC                     _task_3:
  3334                           	callstack 17
  3335  0013CC                     l140:
  3336  0013CC                     
  3337                           ;tasks.c: 40:   PORTDbits.RD2 = ~PORTDbits.RD2;
  3338  0013CC  B483               	btfsc	131,2,c	;volatile
  3339  0013CE  EFEB  F009         	goto	u101_21
  3340  0013D2  EFEE  F009         	goto	u101_20
  3341  0013D6                     u101_21:
  3342  0013D6  0E01               	movlw	1
  3343  0013D8  EFEF  F009         	goto	u101_26
  3344  0013DC                     u101_20:
  3345  0013DC  0E00               	movlw	0
  3346  0013DE                     u101_26:
  3347  0013DE  0AFF               	xorlw	255
  3348  0013E0  6E3E               	movwf	??_task_3^0,c
  3349  0013E2  463E               	rlncf	??_task_3^0,f,c
  3350  0013E4  463E               	rlncf	??_task_3^0,f,c
  3351  0013E6  5083               	movf	131,w,c	;volatile
  3352  0013E8  183E               	xorwf	??_task_3^0,w,c
  3353  0013EA  0BFB               	andlw	-5
  3354  0013EC  183E               	xorwf	??_task_3^0,w,c
  3355  0013EE  6E83               	movwf	131,c	;volatile
  3356  0013F0                     
  3357                           ;tasks.c: 41:   task_delay(1500);
  3358  0013F0  0E05               	movlw	5
  3359  0013F2  0100               	movlb	0	; () banked
  3360  0013F4  6FA9               	movwf	(task_delay@ms+1)& (0+255),b
  3361  0013F6  0EDC               	movlw	220
  3362  0013F8  6FA8               	movwf	task_delay@ms& (0+255),b
  3363  0013FA  EC9A  F002         	call	_task_delay	;wreg free
  3364  0013FE                     
  3365                           ;tasks.c: 42:   PORTDbits.RD2 = ~PORTDbits.RD2;
  3366  0013FE  B483               	btfsc	131,2,c	;volatile
  3367  001400  EF04  F00A         	goto	u102_21
  3368  001404  EF07  F00A         	goto	u102_20
  3369  001408                     u102_21:
  3370  001408  0E01               	movlw	1
  3371  00140A  EF08  F00A         	goto	u102_26
  3372  00140E                     u102_20:
  3373  00140E  0E00               	movlw	0
  3374  001410                     u102_26:
  3375  001410  0AFF               	xorlw	255
  3376  001412  6E3E               	movwf	??_task_3^0,c
  3377  001414  463E               	rlncf	??_task_3^0,f,c
  3378  001416  463E               	rlncf	??_task_3^0,f,c
  3379  001418  5083               	movf	131,w,c	;volatile
  3380  00141A  183E               	xorwf	??_task_3^0,w,c
  3381  00141C  0BFB               	andlw	-5
  3382  00141E  183E               	xorwf	??_task_3^0,w,c
  3383  001420  6E83               	movwf	131,c	;volatile
  3384                           
  3385                           ;tasks.c: 43:   sem_post(&sem_teste);
  3386  001422  0EC9               	movlw	low _sem_teste
  3387  001424  0100               	movlb	0	; () banked
  3388  001426  6FA4               	movwf	sem_post@sem& (0+255),b
  3389  001428  0E00               	movlw	high _sem_teste
  3390  00142A  6FA5               	movwf	(sem_post@sem+1)& (0+255),b
  3391  00142C  ECA3  F008         	call	_sem_post	;wreg free
  3392  001430  EFE6  F009         	goto	l140
  3393  001434  0012               	return		;funcret
  3394  001436                     __end_of_task_3:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _sem_post *****************
  3398 ;; Defined at:
  3399 ;;		line 40 in file "semaforo.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  sem             2   36[BANK0 ] PTR struct semaforo
  3402 ;;		 -> sem_teste(10), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         0       2       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0
  3416 ;;      Temps:          4       0       0       0       0       0       0
  3417 ;;      Totals:         4       2       0       0       0       0       0
  3418 ;;Total ram usage:        6 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    5
  3421 ;; This function calls:
  3422 ;;		i1___wmul
  3423 ;; This function is called by:
  3424 ;;		_task_3
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text22
  3429  001146                     __ptext22:
  3430                           	callstack 0
  3431  001146                     _sem_post:
  3432                           	callstack 19
  3433  001146                     
  3434                           ;semaforo.c: 40: void sem_post(sem_t *sem);semaforo.c: 41: {;semaforo.c: 42:    INTCONbi
      +                          ts.GIE = 0;
  3435  001146  9EF2               	bcf	242,7,c	;volatile
  3436  001148                     
  3437                           ;semaforo.c: 44:    if (sem->contadorSem < 0) {
  3438  001148  C0A4  FFD9         	movff	sem_post@sem,fsr2l
  3439  00114C  C0A5  FFDA         	movff	sem_post@sem+1,fsr2h
  3440  001150  0E01               	movlw	1
  3441  001152  BEDB               	btfsc	plusw2,7,c
  3442  001154  EFB0  F008         	goto	i1u94_20
  3443  001158  EFAE  F008         	goto	i1u94_21
  3444  00115C                     i1u94_21:
  3445  00115C  EFFB  F008         	goto	i1l2100
  3446  001160                     i1u94_20:
  3447  001160                     
  3448                           ;semaforo.c: 45:       f_aptos.ready_queue[sem->fila.tasks[sem->fila.next_to_free]].task
      +                          _state = READY;
  3449  001160  0100               	movlb	0	; () banked
  3450  001162  EE20 F008          	lfsr	2,8
  3451  001166  51A4               	movf	sem_post@sem& (0+255),w,b
  3452  001168  26D9               	addwf	fsr2l,f,c
  3453  00116A  51A5               	movf	(sem_post@sem+1)& (0+255),w,b
  3454  00116C  22DA               	addwfc	fsr2h,f,c
  3455  00116E  CFDE F038          	movff	postinc2,??_sem_post
  3456  001172  CFDD F039          	movff	postdec2,??_sem_post+1
  3457  001176  90D8               	bcf	status,0,c
  3458  001178  3638               	rlcf	??_sem_post^0,f,c
  3459  00117A  3639               	rlcf	(??_sem_post+1)^0,f,c
  3460  00117C  C0A4  F03A         	movff	sem_post@sem,??_sem_post+2
  3461  001180  C0A5  F03B         	movff	sem_post@sem+1,??_sem_post+3
  3462  001184  5038               	movf	??_sem_post^0,w,c
  3463  001186  263A               	addwf	(??_sem_post+2)^0,f,c
  3464  001188  5039               	movf	(??_sem_post+1)^0,w,c
  3465  00118A  223B               	addwfc	(??_sem_post+3)^0,f,c
  3466  00118C  0E02               	movlw	2
  3467  00118E  243A               	addwf	(??_sem_post+2)^0,w,c
  3468  001190  6ED9               	movwf	fsr2l,c
  3469  001192  0E00               	movlw	0
  3470  001194  203B               	addwfc	(??_sem_post+3)^0,w,c
  3471  001196  6EDA               	movwf	fsr2h,c
  3472  001198  CFDE F0A0          	movff	postinc2,i1___wmul@multiplier
  3473  00119C  CFDD F0A1          	movff	postdec2,i1___wmul@multiplier+1
  3474  0011A0  0E00               	movlw	0
  3475  0011A2  6FA3               	movwf	(i1___wmul@multiplicand+1)& (0+255),b
  3476  0011A4  0E65               	movlw	101
  3477  0011A6  6FA2               	movwf	i1___wmul@multiplicand& (0+255),b
  3478  0011A8  EC3F  F00B         	call	i1___wmul	;wreg free
  3479  0011AC  0E67               	movlw	low (_f_aptos+2)
  3480  0011AE  0100               	movlb	0	; () banked
  3481  0011B0  25A0               	addwf	?i1___wmul& (0+255),w,b
  3482  0011B2  6ED9               	movwf	fsr2l,c
  3483  0011B4  0E01               	movlw	high (_f_aptos+2)
  3484  0011B6  21A1               	addwfc	(?i1___wmul+1)& (0+255),w,b
  3485  0011B8  6EDA               	movwf	fsr2h,c
  3486  0011BA  0E00               	movlw	0
  3487  0011BC  6EDF               	movwf	indf2,c
  3488  0011BE                     
  3489                           ; BSR set to: 0
  3490                           ;semaforo.c: 46:       sem->fila.next_to_free = (sem->fila.next_to_free + 1) % (3 - 1);
  3491  0011BE  EE20 F008          	lfsr	2,8
  3492  0011C2  51A4               	movf	sem_post@sem& (0+255),w,b
  3493  0011C4  26D9               	addwf	fsr2l,f,c
  3494  0011C6  51A5               	movf	(sem_post@sem+1)& (0+255),w,b
  3495  0011C8  22DA               	addwfc	fsr2h,f,c
  3496  0011CA  CFDE F038          	movff	postinc2,??_sem_post
  3497  0011CE  CFDD F039          	movff	postdec2,??_sem_post+1
  3498  0011D2  0E01               	movlw	1
  3499  0011D4  2638               	addwf	??_sem_post^0,f,c
  3500  0011D6  0E00               	movlw	0
  3501  0011D8  2239               	addwfc	(??_sem_post+1)^0,f,c
  3502  0011DA  0E01               	movlw	1
  3503  0011DC  1638               	andwf	??_sem_post^0,f,c
  3504  0011DE  0E00               	movlw	0
  3505  0011E0  1639               	andwf	(??_sem_post+1)^0,f,c
  3506  0011E2  EE20 F008          	lfsr	2,8
  3507  0011E6  51A4               	movf	sem_post@sem& (0+255),w,b
  3508  0011E8  26D9               	addwf	fsr2l,f,c
  3509  0011EA  51A5               	movf	(sem_post@sem+1)& (0+255),w,b
  3510  0011EC  22DA               	addwfc	fsr2h,f,c
  3511  0011EE  C038  FFDE         	movff	??_sem_post,postinc2
  3512  0011F2  C039  FFDD         	movff	??_sem_post+1,postdec2
  3513  0011F6                     i1l2100:
  3514                           
  3515                           ;semaforo.c: 48:    sem->contadorSem++;
  3516  0011F6  C0A4  FFD9         	movff	sem_post@sem,fsr2l
  3517  0011FA  C0A5  FFDA         	movff	sem_post@sem+1,fsr2h
  3518  0011FE  2ADE               	incf	postinc2,f,c
  3519  001200  0E00               	movlw	0
  3520  001202  22DD               	addwfc	postdec2,f,c
  3521  001204                     
  3522                           ;semaforo.c: 50:    INTCONbits.GIE = 1;
  3523  001204  8EF2               	bsf	242,7,c	;volatile
  3524  001206  0012               	return		;funcret
  3525  001208                     __end_of_sem_post:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _IRQ_Timer0 *****************
  3529 ;; Defined at:
  3530 ;;		line 39 in file "timer.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3544 ;;      Params:         0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0
  3546 ;;      Temps:          6       0       0       0       0       0       0
  3547 ;;      Totals:         6       0       0       0       0       0       0
  3548 ;;Total ram usage:        6 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    3
  3551 ;; This function calls:
  3552 ;;		_controle_delay
  3553 ;;		i2___wmul
  3554 ;;		i2_scheduler
  3555 ;; This function is called by:
  3556 ;;		Interrupt level 2
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	intcode
  3561  000008                     __pintcode:
  3562                           	callstack 0
  3563  000008                     _IRQ_Timer0:
  3564                           	callstack 17
  3565                           
  3566                           ;incstack = 0
  3567  000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3568  00000A  EDE9  F004         	call	int_func,f	;refresh shadow registers
  3569                           
  3570                           	psect	intcode_body
  3571  0009D2                     __pintcode_body:
  3572                           	callstack 17
  3573  0009D2                     int_func:
  3574                           	callstack 17
  3575  0009D2  0006               	pop		; remove dummy address from shadow register refresh
  3576  0009D4  CFD9 F011          	movff	fsr2l,??_IRQ_Timer0+2
  3577  0009D8  CFDA F012          	movff	fsr2h,??_IRQ_Timer0+3
  3578  0009DC  CFF3 F013          	movff	prodl,??_IRQ_Timer0+4
  3579  0009E0  CFF4 F014          	movff	prodh,??_IRQ_Timer0+5
  3580  0009E4                     
  3581                           ;timer.c: 40:  INTCONbits.GIE = 0;
  3582  0009E4  9EF2               	bcf	242,7,c	;volatile
  3583                           
  3584                           ;timer.c: 42:  if(INTCONbits.TMR0IF){
  3585  0009E6  A4F2               	btfss	242,2,c	;volatile
  3586  0009E8  EFF8  F004         	goto	i2u78_41
  3587  0009EC  EFFA  F004         	goto	i2u78_40
  3588  0009F0                     i2u78_41:
  3589  0009F0  EF2B  F007         	goto	i2l1904
  3590  0009F4                     i2u78_40:
  3591  0009F4                     
  3592                           ;timer.c: 44:    quantum--;
  3593  0009F4  063F               	decf	_quantum^0,f,c
  3594  0009F6  A0D8               	btfss	status,0,c
  3595  0009F8  0640               	decf	(_quantum+1)^0,f,c
  3596  0009FA                     
  3597                           ;timer.c: 45:    if(quantum == 0){
  3598  0009FA  503F               	movf	_quantum^0,w,c
  3599  0009FC  1040               	iorwf	(_quantum+1)^0,w,c
  3600  0009FE  A4D8               	btfss	status,2,c
  3601  000A00  EF04  F005         	goto	i2u79_41
  3602  000A04  EF06  F005         	goto	i2u79_40
  3603  000A08                     i2u79_41:
  3604  000A08  EF26  F007         	goto	i2l1898
  3605  000A0C                     i2u79_40:
  3606  000A0C                     
  3607                           ;timer.c: 46:     { index = 0; f_aptos.ready_queue[f_aptos.task_running].task_state = WA
      +                          ITING_DELAY; f_aptos.ready_queue[f_aptos.task_running].w_reg = WREG; f_aptos.ready_queue
      +                          [f_aptos.task_running].bsr_reg = BSR; f_aptos.ready_queue[f_aptos.task_running].status_r
      +                          eg = STATUS; while (STKPTR) { f_aptos.ready_queue[f_aptos.task_running].task_stack.stack
      +                          [index].TOSU_reg = TOSU; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[inde
      +                          x].TOSL_reg = TOSL; f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index].TO
      +                          SH_reg = TOSH; index++; __asm("POP"); } f_aptos.ready_queue[f_aptos.task_running].task_s
      +                          tack.size = index; };
  3608  000A0C  0E00               	movlw	0
  3609  000A0E  0100               	movlb	0	; () banked
  3610  000A10  6FBE               	movwf	(_index+1)& (0+255),b
  3611  000A12  0E00               	movlw	0
  3612  000A14  6FBD               	movwf	_index& (0+255),b
  3613  000A16                     
  3614                           ; BSR set to: 0
  3615  000A16  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3616  000A1A  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3617  000A1E  0E00               	movlw	0
  3618  000A20  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3619  000A22  0E65               	movlw	101
  3620  000A24  6E03               	movwf	i2___wmul@multiplicand^0,c
  3621  000A26  EC67  F00B         	call	i2___wmul	;wreg free
  3622  000A2A  0E67               	movlw	low (_f_aptos+2)
  3623  000A2C  2401               	addwf	?i2___wmul^0,w,c
  3624  000A2E  6ED9               	movwf	fsr2l,c
  3625  000A30  0E01               	movlw	high (_f_aptos+2)
  3626  000A32  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3627  000A34  6EDA               	movwf	fsr2h,c
  3628  000A36  0E03               	movlw	3
  3629  000A38  6EDF               	movwf	indf2,c
  3630  000A3A  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3631  000A3E  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3632  000A42  0E00               	movlw	0
  3633  000A44  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3634  000A46  0E65               	movlw	101
  3635  000A48  6E03               	movwf	i2___wmul@multiplicand^0,c
  3636  000A4A  EC67  F00B         	call	i2___wmul	;wreg free
  3637  000A4E  0EC6               	movlw	low (_f_aptos+97)
  3638  000A50  2401               	addwf	?i2___wmul^0,w,c
  3639  000A52  6ED9               	movwf	fsr2l,c
  3640  000A54  0E01               	movlw	high (_f_aptos+97)
  3641  000A56  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3642  000A58  6EDA               	movwf	fsr2h,c
  3643  000A5A  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3644  000A5E  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3645  000A62  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3646  000A66  0E00               	movlw	0
  3647  000A68  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3648  000A6A  0E65               	movlw	101
  3649  000A6C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3650  000A6E  EC67  F00B         	call	i2___wmul	;wreg free
  3651  000A72  0EC5               	movlw	low (_f_aptos+96)
  3652  000A74  2401               	addwf	?i2___wmul^0,w,c
  3653  000A76  6ED9               	movwf	fsr2l,c
  3654  000A78  0E01               	movlw	high (_f_aptos+96)
  3655  000A7A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3656  000A7C  6EDA               	movwf	fsr2h,c
  3657  000A7E  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3658  000A82  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3659  000A86  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3660  000A8A  0E00               	movlw	0
  3661  000A8C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3662  000A8E  0E65               	movlw	101
  3663  000A90  6E03               	movwf	i2___wmul@multiplicand^0,c
  3664  000A92  EC67  F00B         	call	i2___wmul	;wreg free
  3665  000A96  0EC7               	movlw	low (_f_aptos+98)
  3666  000A98  2401               	addwf	?i2___wmul^0,w,c
  3667  000A9A  6ED9               	movwf	fsr2l,c
  3668  000A9C  0E01               	movlw	high (_f_aptos+98)
  3669  000A9E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3670  000AA0  6EDA               	movwf	fsr2h,c
  3671  000AA2  CFD8 FFDF          	movff	status,indf2	;volatile
  3672  000AA6  EFD1  F005         	goto	i2l1876
  3673  000AAA                     i2l1872:
  3674  000AAA  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3675  000AAE  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3676  000AB2  0E00               	movlw	0
  3677  000AB4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3678  000AB6  0E65               	movlw	101
  3679  000AB8  6E03               	movwf	i2___wmul@multiplicand^0,c
  3680  000ABA  EC67  F00B         	call	i2___wmul	;wreg free
  3681  000ABE  0E65               	movlw	low _f_aptos
  3682  000AC0  6E0F               	movwf	??_IRQ_Timer0^0,c
  3683  000AC2  0E01               	movlw	high _f_aptos
  3684  000AC4  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  3685  000AC6  0E07               	movlw	7
  3686  000AC8  260F               	addwf	??_IRQ_Timer0^0,f,c
  3687  000ACA  0E00               	movlw	0
  3688  000ACC  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3689  000ACE  5001               	movf	?i2___wmul^0,w,c
  3690  000AD0  260F               	addwf	??_IRQ_Timer0^0,f,c
  3691  000AD2  5002               	movf	(?i2___wmul+1)^0,w,c
  3692  000AD4  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3693  000AD6  C0BD  F001         	movff	_index,i2___wmul@multiplier
  3694  000ADA  C0BE  F002         	movff	_index+1,i2___wmul@multiplier+1
  3695  000ADE  0E00               	movlw	0
  3696  000AE0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3697  000AE2  0E03               	movlw	3
  3698  000AE4  6E03               	movwf	i2___wmul@multiplicand^0,c
  3699  000AE6  EC67  F00B         	call	i2___wmul	;wreg free
  3700  000AEA  5001               	movf	?i2___wmul^0,w,c
  3701  000AEC  240F               	addwf	??_IRQ_Timer0^0,w,c
  3702  000AEE  6ED9               	movwf	fsr2l,c
  3703  000AF0  5002               	movf	(?i2___wmul+1)^0,w,c
  3704  000AF2  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3705  000AF4  6EDA               	movwf	fsr2h,c
  3706  000AF6  CFFF FFDF          	movff	tosu,indf2	;volatile
  3707  000AFA  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3708  000AFE  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3709  000B02  0E00               	movlw	0
  3710  000B04  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3711  000B06  0E65               	movlw	101
  3712  000B08  6E03               	movwf	i2___wmul@multiplicand^0,c
  3713  000B0A  EC67  F00B         	call	i2___wmul	;wreg free
  3714  000B0E  0E65               	movlw	low _f_aptos
  3715  000B10  6E0F               	movwf	??_IRQ_Timer0^0,c
  3716  000B12  0E01               	movlw	high _f_aptos
  3717  000B14  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  3718  000B16  0E08               	movlw	8
  3719  000B18  260F               	addwf	??_IRQ_Timer0^0,f,c
  3720  000B1A  0E00               	movlw	0
  3721  000B1C  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3722  000B1E  5001               	movf	?i2___wmul^0,w,c
  3723  000B20  260F               	addwf	??_IRQ_Timer0^0,f,c
  3724  000B22  5002               	movf	(?i2___wmul+1)^0,w,c
  3725  000B24  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3726  000B26  C0BD  F001         	movff	_index,i2___wmul@multiplier
  3727  000B2A  C0BE  F002         	movff	_index+1,i2___wmul@multiplier+1
  3728  000B2E  0E00               	movlw	0
  3729  000B30  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3730  000B32  0E03               	movlw	3
  3731  000B34  6E03               	movwf	i2___wmul@multiplicand^0,c
  3732  000B36  EC67  F00B         	call	i2___wmul	;wreg free
  3733  000B3A  5001               	movf	?i2___wmul^0,w,c
  3734  000B3C  240F               	addwf	??_IRQ_Timer0^0,w,c
  3735  000B3E  6ED9               	movwf	fsr2l,c
  3736  000B40  5002               	movf	(?i2___wmul+1)^0,w,c
  3737  000B42  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3738  000B44  6EDA               	movwf	fsr2h,c
  3739  000B46  CFFD FFDF          	movff	tosl,indf2	;volatile
  3740  000B4A  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3741  000B4E  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3742  000B52  0E00               	movlw	0
  3743  000B54  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3744  000B56  0E65               	movlw	101
  3745  000B58  6E03               	movwf	i2___wmul@multiplicand^0,c
  3746  000B5A  EC67  F00B         	call	i2___wmul	;wreg free
  3747  000B5E  0E65               	movlw	low _f_aptos
  3748  000B60  6E0F               	movwf	??_IRQ_Timer0^0,c
  3749  000B62  0E01               	movlw	high _f_aptos
  3750  000B64  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  3751  000B66  0E09               	movlw	9
  3752  000B68  260F               	addwf	??_IRQ_Timer0^0,f,c
  3753  000B6A  0E00               	movlw	0
  3754  000B6C  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3755  000B6E  5001               	movf	?i2___wmul^0,w,c
  3756  000B70  260F               	addwf	??_IRQ_Timer0^0,f,c
  3757  000B72  5002               	movf	(?i2___wmul+1)^0,w,c
  3758  000B74  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3759  000B76  C0BD  F001         	movff	_index,i2___wmul@multiplier
  3760  000B7A  C0BE  F002         	movff	_index+1,i2___wmul@multiplier+1
  3761  000B7E  0E00               	movlw	0
  3762  000B80  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3763  000B82  0E03               	movlw	3
  3764  000B84  6E03               	movwf	i2___wmul@multiplicand^0,c
  3765  000B86  EC67  F00B         	call	i2___wmul	;wreg free
  3766  000B8A  5001               	movf	?i2___wmul^0,w,c
  3767  000B8C  240F               	addwf	??_IRQ_Timer0^0,w,c
  3768  000B8E  6ED9               	movwf	fsr2l,c
  3769  000B90  5002               	movf	(?i2___wmul+1)^0,w,c
  3770  000B92  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3771  000B94  6EDA               	movwf	fsr2h,c
  3772  000B96  CFFE FFDF          	movff	tosh,indf2	;volatile
  3773  000B9A  0100               	movlb	0	; () banked
  3774  000B9C  4BBD               	infsnz	_index& (0+255),f,b
  3775  000B9E  2BBE               	incf	(_index+1)& (0+255),f,b
  3776  000BA0  0006               	pop		;# 
  3777  000BA2                     i2l1876:
  3778  000BA2  50FC               	movf	252,w,c	;volatile
  3779  000BA4  A4D8               	btfss	status,2,c
  3780  000BA6  EFD7  F005         	goto	i2u80_41
  3781  000BAA  EFD9  F005         	goto	i2u80_40
  3782  000BAE                     i2u80_41:
  3783  000BAE  EF55  F005         	goto	i2l1872
  3784  000BB2                     i2u80_40:
  3785  000BB2  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3786  000BB6  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3787  000BBA  0E00               	movlw	0
  3788  000BBC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3789  000BBE  0E65               	movlw	101
  3790  000BC0  6E03               	movwf	i2___wmul@multiplicand^0,c
  3791  000BC2  EC67  F00B         	call	i2___wmul	;wreg free
  3792  000BC6  0EC3               	movlw	low (_f_aptos+94)
  3793  000BC8  2401               	addwf	?i2___wmul^0,w,c
  3794  000BCA  6ED9               	movwf	fsr2l,c
  3795  000BCC  0E01               	movlw	high (_f_aptos+94)
  3796  000BCE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3797  000BD0  6EDA               	movwf	fsr2h,c
  3798  000BD2  C0BD  FFDE         	movff	_index,postinc2
  3799  000BD6  C0BE  FFDD         	movff	_index+1,postdec2
  3800                           
  3801                           ;timer.c: 47:     { f_aptos.task_running = scheduler(); STKPTR = 0; if (f_aptos.ready_qu
      +                          eue[f_aptos.task_running].task_stack.size == 0) { __asm("PUSH"); TOS = f_aptos.ready_que
      +                          ue[f_aptos.task_running].task_func; f_aptos.ready_queue[f_aptos.task_running].task_state
      +                           = RUNNING; } else { f_aptos.ready_queue[f_aptos.task_running].task_state = RUNNING; WRE
      +                          G = f_aptos.ready_queue[f_aptos.task_running].w_reg; BSR = f_aptos.ready_queue[f_aptos.t
      +                          ask_running].bsr_reg; STATUS = f_aptos.ready_queue[f_aptos.task_running].status_reg; ind
      +                          ex = f_aptos.ready_queue[f_aptos.task_running].task_stack.size; while(index) { __asm("PU
      +                          SH"); TOSU = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSU_
      +                          reg; TOSL = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSL_r
      +                          eg; TOSH = f_aptos.ready_queue[f_aptos.task_running].task_stack.stack[index - 1].TOSH_re
      +                          g; index--; } } };
  3802  000BDA  EC8C  F00B         	call	i2_scheduler	;wreg free
  3803  000BDE  C00D  F2FB         	movff	?i2_scheduler,_f_aptos+406
  3804  000BE2  C00E  F2FC         	movff	?i2_scheduler+1,_f_aptos+407
  3805  000BE6  0E00               	movlw	0
  3806  000BE8  6EFC               	movwf	252,c	;volatile
  3807  000BEA  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3808  000BEE  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3809  000BF2  0E00               	movlw	0
  3810  000BF4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3811  000BF6  0E65               	movlw	101
  3812  000BF8  6E03               	movwf	i2___wmul@multiplicand^0,c
  3813  000BFA  EC67  F00B         	call	i2___wmul	;wreg free
  3814  000BFE  0EC3               	movlw	low (_f_aptos+94)
  3815  000C00  2401               	addwf	?i2___wmul^0,w,c
  3816  000C02  6ED9               	movwf	fsr2l,c
  3817  000C04  0E01               	movlw	high (_f_aptos+94)
  3818  000C06  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3819  000C08  6EDA               	movwf	fsr2h,c
  3820  000C0A  50DE               	movf	postinc2,w,c
  3821  000C0C  10DE               	iorwf	postinc2,w,c
  3822  000C0E  A4D8               	btfss	status,2,c
  3823  000C10  EF0C  F006         	goto	i2u81_41
  3824  000C14  EF0E  F006         	goto	i2u81_40
  3825  000C18                     i2u81_41:
  3826  000C18  EF3C  F006         	goto	i2l1888
  3827  000C1C                     i2u81_40:
  3828  000C1C  0005               	push		;# 
  3829  000C1E  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3830  000C22  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3831  000C26  0E00               	movlw	0
  3832  000C28  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3833  000C2A  0E65               	movlw	101
  3834  000C2C  6E03               	movwf	i2___wmul@multiplicand^0,c
  3835  000C2E  EC67  F00B         	call	i2___wmul	;wreg free
  3836  000C32  0E6A               	movlw	low (_f_aptos+5)
  3837  000C34  2401               	addwf	?i2___wmul^0,w,c
  3838  000C36  6ED9               	movwf	fsr2l,c
  3839  000C38  0E01               	movlw	high (_f_aptos+5)
  3840  000C3A  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3841  000C3C  6EDA               	movwf	fsr2h,c
  3842  000C3E  CFDE F00F          	movff	postinc2,??_IRQ_Timer0
  3843  000C42  CFDD F010          	movff	postdec2,??_IRQ_Timer0+1
  3844  000C46  C00F  FFFD         	movff	??_IRQ_Timer0,tosl	;volatile
  3845  000C4A  C010  FFFE         	movff	??_IRQ_Timer0+1,tosh	;volatile
  3846  000C4E  6AFF               	clrf	255,c	;volatile
  3847  000C50  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3848  000C54  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3849  000C58  0E00               	movlw	0
  3850  000C5A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3851  000C5C  0E65               	movlw	101
  3852  000C5E  6E03               	movwf	i2___wmul@multiplicand^0,c
  3853  000C60  EC67  F00B         	call	i2___wmul	;wreg free
  3854  000C64  0E67               	movlw	low (_f_aptos+2)
  3855  000C66  2401               	addwf	?i2___wmul^0,w,c
  3856  000C68  6ED9               	movwf	fsr2l,c
  3857  000C6A  0E01               	movlw	high (_f_aptos+2)
  3858  000C6C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3859  000C6E  6EDA               	movwf	fsr2h,c
  3860  000C70  0E01               	movlw	1
  3861  000C72  6EDF               	movwf	indf2,c
  3862  000C74  EF22  F007         	goto	i2l1896
  3863  000C78                     i2l1888:
  3864  000C78  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3865  000C7C  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3866  000C80  0E00               	movlw	0
  3867  000C82  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3868  000C84  0E65               	movlw	101
  3869  000C86  6E03               	movwf	i2___wmul@multiplicand^0,c
  3870  000C88  EC67  F00B         	call	i2___wmul	;wreg free
  3871  000C8C  0E67               	movlw	low (_f_aptos+2)
  3872  000C8E  2401               	addwf	?i2___wmul^0,w,c
  3873  000C90  6ED9               	movwf	fsr2l,c
  3874  000C92  0E01               	movlw	high (_f_aptos+2)
  3875  000C94  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3876  000C96  6EDA               	movwf	fsr2h,c
  3877  000C98  0E01               	movlw	1
  3878  000C9A  6EDF               	movwf	indf2,c
  3879  000C9C  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3880  000CA0  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3881  000CA4  0E00               	movlw	0
  3882  000CA6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3883  000CA8  0E65               	movlw	101
  3884  000CAA  6E03               	movwf	i2___wmul@multiplicand^0,c
  3885  000CAC  EC67  F00B         	call	i2___wmul	;wreg free
  3886  000CB0  0EC6               	movlw	low (_f_aptos+97)
  3887  000CB2  2401               	addwf	?i2___wmul^0,w,c
  3888  000CB4  6ED9               	movwf	fsr2l,c
  3889  000CB6  0E01               	movlw	high (_f_aptos+97)
  3890  000CB8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3891  000CBA  6EDA               	movwf	fsr2h,c
  3892  000CBC  50DF               	movf	indf2,w,c
  3893  000CBE  6E0F               	movwf	??_IRQ_Timer0^0,c
  3894  000CC0  500F               	movf	??_IRQ_Timer0^0,w,c
  3895  000CC2  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3896  000CC6  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3897  000CCA  0E00               	movlw	0
  3898  000CCC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3899  000CCE  0E65               	movlw	101
  3900  000CD0  6E03               	movwf	i2___wmul@multiplicand^0,c
  3901  000CD2  EC67  F00B         	call	i2___wmul	;wreg free
  3902  000CD6  0EC5               	movlw	low (_f_aptos+96)
  3903  000CD8  2401               	addwf	?i2___wmul^0,w,c
  3904  000CDA  6ED9               	movwf	fsr2l,c
  3905  000CDC  0E01               	movlw	high (_f_aptos+96)
  3906  000CDE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3907  000CE0  6EDA               	movwf	fsr2h,c
  3908  000CE2  50DF               	movf	indf2,w,c
  3909  000CE4  6EE0               	movwf	224,c	;volatile
  3910  000CE6  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3911  000CEA  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3912  000CEE  0E00               	movlw	0
  3913  000CF0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3914  000CF2  0E65               	movlw	101
  3915  000CF4  6E03               	movwf	i2___wmul@multiplicand^0,c
  3916  000CF6  EC67  F00B         	call	i2___wmul	;wreg free
  3917  000CFA  0EC7               	movlw	low (_f_aptos+98)
  3918  000CFC  2401               	addwf	?i2___wmul^0,w,c
  3919  000CFE  6ED9               	movwf	fsr2l,c
  3920  000D00  0E01               	movlw	high (_f_aptos+98)
  3921  000D02  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3922  000D04  6EDA               	movwf	fsr2h,c
  3923  000D06  50DF               	movf	indf2,w,c
  3924  000D08  6ED8               	movwf	216,c	;volatile
  3925  000D0A  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3926  000D0E  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3927  000D12  0E00               	movlw	0
  3928  000D14  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3929  000D16  0E65               	movlw	101
  3930  000D18  6E03               	movwf	i2___wmul@multiplicand^0,c
  3931  000D1A  EC67  F00B         	call	i2___wmul	;wreg free
  3932  000D1E  0EC3               	movlw	low (_f_aptos+94)
  3933  000D20  2401               	addwf	?i2___wmul^0,w,c
  3934  000D22  6ED9               	movwf	fsr2l,c
  3935  000D24  0E01               	movlw	high (_f_aptos+94)
  3936  000D26  2002               	addwfc	(?i2___wmul+1)^0,w,c
  3937  000D28  6EDA               	movwf	fsr2h,c
  3938  000D2A  CFDE F0BD          	movff	postinc2,_index
  3939  000D2E  CFDD F0BE          	movff	postdec2,_index+1
  3940  000D32  EF18  F007         	goto	i2l1894
  3941  000D36                     i2l215:
  3942                           
  3943                           ; BSR set to: 0
  3944  000D36  0005               	push		;# 
  3945  000D38  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3946  000D3C  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3947  000D40  0E00               	movlw	0
  3948  000D42  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3949  000D44  0E65               	movlw	101
  3950  000D46  6E03               	movwf	i2___wmul@multiplicand^0,c
  3951  000D48  EC67  F00B         	call	i2___wmul	;wreg free
  3952  000D4C  0E65               	movlw	low _f_aptos
  3953  000D4E  6E0F               	movwf	??_IRQ_Timer0^0,c
  3954  000D50  0E01               	movlw	high _f_aptos
  3955  000D52  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  3956  000D54  0E04               	movlw	4
  3957  000D56  260F               	addwf	??_IRQ_Timer0^0,f,c
  3958  000D58  0E00               	movlw	0
  3959  000D5A  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3960  000D5C  5001               	movf	?i2___wmul^0,w,c
  3961  000D5E  260F               	addwf	??_IRQ_Timer0^0,f,c
  3962  000D60  5002               	movf	(?i2___wmul+1)^0,w,c
  3963  000D62  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3964  000D64  C0BD  F001         	movff	_index,i2___wmul@multiplier
  3965  000D68  C0BE  F002         	movff	_index+1,i2___wmul@multiplier+1
  3966  000D6C  0E00               	movlw	0
  3967  000D6E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3968  000D70  0E03               	movlw	3
  3969  000D72  6E03               	movwf	i2___wmul@multiplicand^0,c
  3970  000D74  EC67  F00B         	call	i2___wmul	;wreg free
  3971  000D78  5001               	movf	?i2___wmul^0,w,c
  3972  000D7A  240F               	addwf	??_IRQ_Timer0^0,w,c
  3973  000D7C  6ED9               	movwf	fsr2l,c
  3974  000D7E  5002               	movf	(?i2___wmul+1)^0,w,c
  3975  000D80  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  3976  000D82  6EDA               	movwf	fsr2h,c
  3977  000D84  50DF               	movf	indf2,w,c
  3978  000D86  6EFF               	movwf	255,c	;volatile
  3979  000D88  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  3980  000D8C  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  3981  000D90  0E00               	movlw	0
  3982  000D92  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3983  000D94  0E65               	movlw	101
  3984  000D96  6E03               	movwf	i2___wmul@multiplicand^0,c
  3985  000D98  EC67  F00B         	call	i2___wmul	;wreg free
  3986  000D9C  0E65               	movlw	low _f_aptos
  3987  000D9E  6E0F               	movwf	??_IRQ_Timer0^0,c
  3988  000DA0  0E01               	movlw	high _f_aptos
  3989  000DA2  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  3990  000DA4  0E05               	movlw	5
  3991  000DA6  260F               	addwf	??_IRQ_Timer0^0,f,c
  3992  000DA8  0E00               	movlw	0
  3993  000DAA  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3994  000DAC  5001               	movf	?i2___wmul^0,w,c
  3995  000DAE  260F               	addwf	??_IRQ_Timer0^0,f,c
  3996  000DB0  5002               	movf	(?i2___wmul+1)^0,w,c
  3997  000DB2  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  3998  000DB4  C0BD  F001         	movff	_index,i2___wmul@multiplier
  3999  000DB8  C0BE  F002         	movff	_index+1,i2___wmul@multiplier+1
  4000  000DBC  0E00               	movlw	0
  4001  000DBE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4002  000DC0  0E03               	movlw	3
  4003  000DC2  6E03               	movwf	i2___wmul@multiplicand^0,c
  4004  000DC4  EC67  F00B         	call	i2___wmul	;wreg free
  4005  000DC8  5001               	movf	?i2___wmul^0,w,c
  4006  000DCA  240F               	addwf	??_IRQ_Timer0^0,w,c
  4007  000DCC  6ED9               	movwf	fsr2l,c
  4008  000DCE  5002               	movf	(?i2___wmul+1)^0,w,c
  4009  000DD0  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  4010  000DD2  6EDA               	movwf	fsr2h,c
  4011  000DD4  50DF               	movf	indf2,w,c
  4012  000DD6  6EFD               	movwf	253,c	;volatile
  4013  000DD8  C2FB  F001         	movff	_f_aptos+406,i2___wmul@multiplier
  4014  000DDC  C2FC  F002         	movff	_f_aptos+407,i2___wmul@multiplier+1
  4015  000DE0  0E00               	movlw	0
  4016  000DE2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4017  000DE4  0E65               	movlw	101
  4018  000DE6  6E03               	movwf	i2___wmul@multiplicand^0,c
  4019  000DE8  EC67  F00B         	call	i2___wmul	;wreg free
  4020  000DEC  0E65               	movlw	low _f_aptos
  4021  000DEE  6E0F               	movwf	??_IRQ_Timer0^0,c
  4022  000DF0  0E01               	movlw	high _f_aptos
  4023  000DF2  6E10               	movwf	(??_IRQ_Timer0+1)^0,c
  4024  000DF4  0E06               	movlw	6
  4025  000DF6  260F               	addwf	??_IRQ_Timer0^0,f,c
  4026  000DF8  0E00               	movlw	0
  4027  000DFA  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4028  000DFC  5001               	movf	?i2___wmul^0,w,c
  4029  000DFE  260F               	addwf	??_IRQ_Timer0^0,f,c
  4030  000E00  5002               	movf	(?i2___wmul+1)^0,w,c
  4031  000E02  2210               	addwfc	(??_IRQ_Timer0+1)^0,f,c
  4032  000E04  C0BD  F001         	movff	_index,i2___wmul@multiplier
  4033  000E08  C0BE  F002         	movff	_index+1,i2___wmul@multiplier+1
  4034  000E0C  0E00               	movlw	0
  4035  000E0E  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4036  000E10  0E03               	movlw	3
  4037  000E12  6E03               	movwf	i2___wmul@multiplicand^0,c
  4038  000E14  EC67  F00B         	call	i2___wmul	;wreg free
  4039  000E18  5001               	movf	?i2___wmul^0,w,c
  4040  000E1A  240F               	addwf	??_IRQ_Timer0^0,w,c
  4041  000E1C  6ED9               	movwf	fsr2l,c
  4042  000E1E  5002               	movf	(?i2___wmul+1)^0,w,c
  4043  000E20  2010               	addwfc	(??_IRQ_Timer0+1)^0,w,c
  4044  000E22  6EDA               	movwf	fsr2h,c
  4045  000E24  50DF               	movf	indf2,w,c
  4046  000E26  6EFE               	movwf	254,c	;volatile
  4047  000E28  0100               	movlb	0	; () banked
  4048  000E2A  07BD               	decf	_index& (0+255),f,b
  4049  000E2C  A0D8               	btfss	status,0,c
  4050  000E2E  07BE               	decf	(_index+1)& (0+255),f,b
  4051  000E30                     i2l1894:
  4052  000E30  0100               	movlb	0	; () banked
  4053  000E32  51BD               	movf	_index& (0+255),w,b
  4054  000E34  11BE               	iorwf	(_index+1)& (0+255),w,b
  4055  000E36  A4D8               	btfss	status,2,c
  4056  000E38  EF20  F007         	goto	i2u82_41
  4057  000E3C  EF22  F007         	goto	i2u82_40
  4058  000E40                     i2u82_41:
  4059  000E40  EF9B  F006         	goto	i2l215
  4060  000E44                     i2u82_40:
  4061  000E44                     i2l1896:
  4062                           
  4063                           ;timer.c: 48:     quantum = 5;
  4064  000E44  0E00               	movlw	0
  4065  000E46  6E40               	movwf	(_quantum+1)^0,c
  4066  000E48  0E05               	movlw	5
  4067  000E4A  6E3F               	movwf	_quantum^0,c
  4068  000E4C                     i2l1898:
  4069                           
  4070                           ;timer.c: 54:   controle_delay();
  4071  000E4C  EC36  F008         	call	_controle_delay	;wreg free
  4072  000E50                     
  4073                           ;timer.c: 55:   INTCONbits.TMR0IF = 0;
  4074  000E50  94F2               	bcf	242,2,c	;volatile
  4075  000E52                     
  4076                           ;timer.c: 56:   TMR0L = 6;
  4077  000E52  0E06               	movlw	6
  4078  000E54  6ED6               	movwf	214,c	;volatile
  4079  000E56                     i2l1904:
  4080                           
  4081                           ;timer.c: 58:  INTCONbits.GIE = 1;
  4082  000E56  8EF2               	bsf	242,7,c	;volatile
  4083  000E58  C014  FFF4         	movff	??_IRQ_Timer0+5,prodh
  4084  000E5C  C013  FFF3         	movff	??_IRQ_Timer0+4,prodl
  4085  000E60  C012  FFDA         	movff	??_IRQ_Timer0+3,fsr2h
  4086  000E64  C011  FFD9         	movff	??_IRQ_Timer0+2,fsr2l
  4087  000E68  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4088  000E6A  0011               	retfie		f
  4089  000E6C                     __end_of_IRQ_Timer0:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function i2_scheduler *****************
  4093 ;; Defined at:
  4094 ;;		line 13 in file "scheduler.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2   12[COMRAM] unsigned int 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4108 ;;      Params:         2       0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0
  4111 ;;      Totals:         2       0       0       0       0       0       0
  4112 ;;Total ram usage:        2 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		i2_rr_scheduler
  4117 ;; This function is called by:
  4118 ;;		_IRQ_Timer0
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text24
  4123  001718                     __ptext24:
  4124                           	callstack 0
  4125  001718                     i2_scheduler:
  4126                           	callstack 17
  4127  001718                     
  4128                           ;scheduler.c: 16:    return rr_scheduler();
  4129  001718  ECB0  F009         	call	i2_rr_scheduler	;wreg free
  4130  00171C  C007  F00D         	movff	?i2_rr_scheduler,?i2_scheduler
  4131  001720  C008  F00E         	movff	?i2_rr_scheduler+1,?i2_scheduler+1
  4132  001724  0012               	return		;funcret
  4133  001726                     __end_ofi2_scheduler:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function i2_rr_scheduler *****************
  4137 ;; Defined at:
  4138 ;;		line 22 in file "scheduler.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  next_task       2   10[COMRAM] unsigned int 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  2    6[COMRAM] unsigned int 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4152 ;;      Params:         2       0       0       0       0       0       0
  4153 ;;      Locals:         2       0       0       0       0       0       0
  4154 ;;      Temps:          2       0       0       0       0       0       0
  4155 ;;      Totals:         6       0       0       0       0       0       0
  4156 ;;Total ram usage:        6 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    1
  4159 ;; This function calls:
  4160 ;;		i2___wmul
  4161 ;; This function is called by:
  4162 ;;		i2_scheduler
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text25
  4167  001360                     __ptext25:
  4168                           	callstack 0
  4169  001360                     i2_rr_scheduler:
  4170                           	callstack 17
  4171  001360                     
  4172                           ;scheduler.c: 24:    u_int next_task = f_aptos.task_running;
  4173  001360  C2FB  F00B         	movff	_f_aptos+406,i2rr_scheduler@next_task
  4174  001364  C2FC  F00C         	movff	_f_aptos+407,i2rr_scheduler@next_task+1
  4175  001368                     i2l1632:
  4176                           
  4177                           ;scheduler.c: 27:   next_task += 1;
  4178  001368  4A0B               	infsnz	i2rr_scheduler@next_task^0,f,c
  4179  00136A  2A0C               	incf	(i2rr_scheduler@next_task+1)^0,f,c
  4180  00136C                     
  4181                           ;scheduler.c: 28:   if(next_task >= f_aptos.ready_queue_size){
  4182  00136C  EE22  F0F9         	lfsr	2,_f_aptos+404
  4183  001370  50DE               	movf	postinc2,w,c
  4184  001372  5C0B               	subwf	i2rr_scheduler@next_task^0,w,c
  4185  001374  50DE               	movf	postinc2,w,c
  4186  001376  580C               	subwfb	(i2rr_scheduler@next_task+1)^0,w,c
  4187  001378  A0D8               	btfss	status,0,c
  4188  00137A  EFC1  F009         	goto	i2u56_41
  4189  00137E  EFC3  F009         	goto	i2u56_40
  4190  001382                     i2u56_41:
  4191  001382  EFC9  F009         	goto	i2l1638
  4192  001386                     i2u56_40:
  4193  001386                     
  4194                           ;scheduler.c: 29:    next_task = 0;
  4195  001386  0E00               	movlw	0
  4196  001388  6E0C               	movwf	(i2rr_scheduler@next_task+1)^0,c
  4197  00138A  0E00               	movlw	0
  4198  00138C  6E0B               	movwf	i2rr_scheduler@next_task^0,c
  4199                           
  4200                           ;scheduler.c: 30:    break;
  4201  00138E  EFE1  F009         	goto	i2l157
  4202  001392                     i2l1638:
  4203                           
  4204                           ;scheduler.c: 32:  } while (f_aptos.ready_queue[next_task].task_state != READY);
  4205  001392  C00B  F001         	movff	i2rr_scheduler@next_task,i2___wmul@multiplier
  4206  001396  C00C  F002         	movff	i2rr_scheduler@next_task+1,i2___wmul@multiplier+1
  4207  00139A  0E00               	movlw	0
  4208  00139C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4209  00139E  0E65               	movlw	101
  4210  0013A0  6E03               	movwf	i2___wmul@multiplicand^0,c
  4211  0013A2  EC67  F00B         	call	i2___wmul	;wreg free
  4212  0013A6  0E67               	movlw	low (_f_aptos+2)
  4213  0013A8  2401               	addwf	?i2___wmul^0,w,c
  4214  0013AA  6ED9               	movwf	fsr2l,c
  4215  0013AC  0E01               	movlw	high (_f_aptos+2)
  4216  0013AE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4217  0013B0  6EDA               	movwf	fsr2h,c
  4218  0013B2  50DF               	movf	indf2,w,c
  4219  0013B4  A4D8               	btfss	status,2,c
  4220  0013B6  EFDF  F009         	goto	i2u57_41
  4221  0013BA  EFE1  F009         	goto	i2u57_40
  4222  0013BE                     i2u57_41:
  4223  0013BE  EFB4  F009         	goto	i2l1632
  4224  0013C2                     i2u57_40:
  4225  0013C2                     i2l157:
  4226                           
  4227                           ;scheduler.c: 34:  return next_task;
  4228  0013C2  C00B  F007         	movff	i2rr_scheduler@next_task,?i2_rr_scheduler
  4229  0013C6  C00C  F008         	movff	i2rr_scheduler@next_task+1,?i2_rr_scheduler+1
  4230  0013CA  0012               	return		;funcret
  4231  0013CC                     __end_ofi2_rr_scheduler:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _controle_delay *****************
  4235 ;; Defined at:
  4236 ;;		line 27 in file "timer.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  i               2    8[COMRAM] int 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4250 ;;      Params:         0       0       0       0       0       0       0
  4251 ;;      Locals:         2       0       0       0       0       0       0
  4252 ;;      Temps:          2       0       0       0       0       0       0
  4253 ;;      Totals:         4       0       0       0       0       0       0
  4254 ;;Total ram usage:        4 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    1
  4257 ;; This function calls:
  4258 ;;		i2___wmul
  4259 ;; This function is called by:
  4260 ;;		_IRQ_Timer0
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text26
  4265  00106C                     __ptext26:
  4266                           	callstack 0
  4267  00106C                     _controle_delay:
  4268                           	callstack 18
  4269  00106C                     
  4270                           ;timer.c: 28:     int i;;timer.c: 29:     for (i = 0; i < f_aptos.ready_queue_size; i++)
      +                           {
  4271  00106C  0E00               	movlw	0
  4272  00106E  6E0A               	movwf	(controle_delay@i+1)^0,c
  4273  001070  0E00               	movlw	0
  4274  001072  6E09               	movwf	controle_delay@i^0,c
  4275  001074  EF95  F008         	goto	i2l1778
  4276  001078                     i2l1770:
  4277                           
  4278                           ;timer.c: 30:         if (f_aptos.ready_queue[i].task_state == WAITING_DELAY) {
  4279  001078  C009  F001         	movff	controle_delay@i,i2___wmul@multiplier
  4280  00107C  C00A  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4281  001080  0E00               	movlw	0
  4282  001082  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4283  001084  0E65               	movlw	101
  4284  001086  6E03               	movwf	i2___wmul@multiplicand^0,c
  4285  001088  EC67  F00B         	call	i2___wmul	;wreg free
  4286  00108C  0E67               	movlw	low (_f_aptos+2)
  4287  00108E  2401               	addwf	?i2___wmul^0,w,c
  4288  001090  6ED9               	movwf	fsr2l,c
  4289  001092  0E01               	movlw	high (_f_aptos+2)
  4290  001094  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4291  001096  6EDA               	movwf	fsr2h,c
  4292  001098  0E03               	movlw	3
  4293  00109A  18DE               	xorwf	postinc2,w,c
  4294  00109C  A4D8               	btfss	status,2,c
  4295  00109E  EF53  F008         	goto	i2u67_41
  4296  0010A2  EF55  F008         	goto	i2u67_40
  4297  0010A6                     i2u67_41:
  4298  0010A6  EF93  F008         	goto	i2l1776
  4299  0010AA                     i2u67_40:
  4300  0010AA                     
  4301                           ;timer.c: 31:             f_aptos.ready_queue[i].delay--;
  4302  0010AA  C009  F001         	movff	controle_delay@i,i2___wmul@multiplier
  4303  0010AE  C00A  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4304  0010B2  0E00               	movlw	0
  4305  0010B4  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4306  0010B6  0E65               	movlw	101
  4307  0010B8  6E03               	movwf	i2___wmul@multiplicand^0,c
  4308  0010BA  EC67  F00B         	call	i2___wmul	;wreg free
  4309  0010BE  0EC8               	movlw	low (_f_aptos+99)
  4310  0010C0  2401               	addwf	?i2___wmul^0,w,c
  4311  0010C2  6ED9               	movwf	fsr2l,c
  4312  0010C4  0E01               	movlw	high (_f_aptos+99)
  4313  0010C6  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4314  0010C8  6EDA               	movwf	fsr2h,c
  4315  0010CA  06DE               	decf	postinc2,f,c
  4316  0010CC  0E00               	movlw	0
  4317  0010CE  5ADD               	subwfb	postdec2,f,c
  4318                           
  4319                           ;timer.c: 32:             if (f_aptos.ready_queue[i].delay == 0) {
  4320  0010D0  C009  F001         	movff	controle_delay@i,i2___wmul@multiplier
  4321  0010D4  C00A  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4322  0010D8  0E00               	movlw	0
  4323  0010DA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4324  0010DC  0E65               	movlw	101
  4325  0010DE  6E03               	movwf	i2___wmul@multiplicand^0,c
  4326  0010E0  EC67  F00B         	call	i2___wmul	;wreg free
  4327  0010E4  0EC8               	movlw	low (_f_aptos+99)
  4328  0010E6  2401               	addwf	?i2___wmul^0,w,c
  4329  0010E8  6ED9               	movwf	fsr2l,c
  4330  0010EA  0E01               	movlw	high (_f_aptos+99)
  4331  0010EC  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4332  0010EE  6EDA               	movwf	fsr2h,c
  4333  0010F0  50DE               	movf	postinc2,w,c
  4334  0010F2  10DE               	iorwf	postinc2,w,c
  4335  0010F4  A4D8               	btfss	status,2,c
  4336  0010F6  EF7F  F008         	goto	i2u68_41
  4337  0010FA  EF81  F008         	goto	i2u68_40
  4338  0010FE                     i2u68_41:
  4339  0010FE  EF93  F008         	goto	i2l1776
  4340  001102                     i2u68_40:
  4341  001102                     
  4342                           ;timer.c: 33:     f_aptos.ready_queue[i].task_state = READY;
  4343  001102  C009  F001         	movff	controle_delay@i,i2___wmul@multiplier
  4344  001106  C00A  F002         	movff	controle_delay@i+1,i2___wmul@multiplier+1
  4345  00110A  0E00               	movlw	0
  4346  00110C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  4347  00110E  0E65               	movlw	101
  4348  001110  6E03               	movwf	i2___wmul@multiplicand^0,c
  4349  001112  EC67  F00B         	call	i2___wmul	;wreg free
  4350  001116  0E67               	movlw	low (_f_aptos+2)
  4351  001118  2401               	addwf	?i2___wmul^0,w,c
  4352  00111A  6ED9               	movwf	fsr2l,c
  4353  00111C  0E01               	movlw	high (_f_aptos+2)
  4354  00111E  2002               	addwfc	(?i2___wmul+1)^0,w,c
  4355  001120  6EDA               	movwf	fsr2h,c
  4356  001122  0E00               	movlw	0
  4357  001124  6EDF               	movwf	indf2,c
  4358  001126                     i2l1776:
  4359                           
  4360                           ;timer.c: 36:     }
  4361  001126  4A09               	infsnz	controle_delay@i^0,f,c
  4362  001128  2A0A               	incf	(controle_delay@i+1)^0,f,c
  4363  00112A                     i2l1778:
  4364  00112A  EE22  F0F9         	lfsr	2,_f_aptos+404
  4365  00112E  50DE               	movf	postinc2,w,c
  4366  001130  5C09               	subwf	controle_delay@i^0,w,c
  4367  001132  50DE               	movf	postinc2,w,c
  4368  001134  580A               	subwfb	(controle_delay@i+1)^0,w,c
  4369  001136  A0D8               	btfss	status,0,c
  4370  001138  EFA0  F008         	goto	i2u69_41
  4371  00113C  EFA2  F008         	goto	i2u69_40
  4372  001140                     i2u69_41:
  4373  001140  EF3C  F008         	goto	i2l1770
  4374  001144                     i2u69_40:
  4375  001144  0012               	return		;funcret
  4376  001146                     __end_of_controle_delay:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function i2___wmul *****************
  4380 ;; Defined at:
  4381 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  multiplier      2    0[COMRAM] unsigned int 
  4384 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  product         2    4[COMRAM] unsigned int 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2    0[COMRAM] unsigned int 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, prodl, prodh
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4396 ;;      Params:         4       0       0       0       0       0       0
  4397 ;;      Locals:         2       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0
  4399 ;;      Totals:         6       0       0       0       0       0       0
  4400 ;;Total ram usage:        6 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_controle_delay
  4406 ;;		_IRQ_Timer0
  4407 ;;		i2_rr_scheduler
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text27
  4412  0016CE                     __ptext27:
  4413                           	callstack 0
  4414  0016CE                     i2___wmul:
  4415                           	callstack 17
  4416  0016CE  5001               	movf	i2___wmul@multiplier^0,w,c
  4417  0016D0  0203               	mulwf	i2___wmul@multiplicand^0,c
  4418  0016D2  CFF3 F005          	movff	prodl,i2___wmul@product
  4419  0016D6  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4420  0016DA  5001               	movf	i2___wmul@multiplier^0,w,c
  4421  0016DC  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  4422  0016DE  50F3               	movf	243,w,c
  4423  0016E0  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4424  0016E2  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  4425  0016E4  0203               	mulwf	i2___wmul@multiplicand^0,c
  4426  0016E6  50F3               	movf	243,w,c
  4427  0016E8  2606               	addwf	(i2___wmul@product+1)^0,f,c
  4428  0016EA  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4429  0016EE  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4430  0016F2  0012               	return		;funcret
  4431  0016F4                     __end_ofi2___wmul:
  4432                           	callstack 0
  4433  0000                     
  4434                           	psect	text28
  4435  000000                     __ptext28:
  4436                           	callstack 0
  4437  000000                     
  4438                           	psect	rparam
  4439  0000                     
  4440                           	psect	temp
  4441  000041                     btemp:
  4442                           	callstack 0
  4443  000041                     	ds	1
  4444  0000                     int$flags	set	btemp
  4445  0000                     wtemp8	set	btemp+1
  4446  0000                     ttemp5	set	btemp+1
  4447  0000                     ttemp6	set	btemp+4
  4448  0000                     ttemp7	set	btemp+8
  4449                           
  4450                           	psect	idloc
  4451                           
  4452                           ;Config register IDLOC0 @ 0x200000
  4453                           ;	unspecified, using default values
  4454  200000                     	org	2097152
  4455  200000  FF                 	db	255
  4456                           
  4457                           ;Config register IDLOC1 @ 0x200001
  4458                           ;	unspecified, using default values
  4459  200001                     	org	2097153
  4460  200001  FF                 	db	255
  4461                           
  4462                           ;Config register IDLOC2 @ 0x200002
  4463                           ;	unspecified, using default values
  4464  200002                     	org	2097154
  4465  200002  FF                 	db	255
  4466                           
  4467                           ;Config register IDLOC3 @ 0x200003
  4468                           ;	unspecified, using default values
  4469  200003                     	org	2097155
  4470  200003  FF                 	db	255
  4471                           
  4472                           ;Config register IDLOC4 @ 0x200004
  4473                           ;	unspecified, using default values
  4474  200004                     	org	2097156
  4475  200004  FF                 	db	255
  4476                           
  4477                           ;Config register IDLOC5 @ 0x200005
  4478                           ;	unspecified, using default values
  4479  200005                     	org	2097157
  4480  200005  FF                 	db	255
  4481                           
  4482                           ;Config register IDLOC6 @ 0x200006
  4483                           ;	unspecified, using default values
  4484  200006                     	org	2097158
  4485  200006  FF                 	db	255
  4486                           
  4487                           ;Config register IDLOC7 @ 0x200007
  4488                           ;	unspecified, using default values
  4489  200007                     	org	2097159
  4490  200007  FF                 	db	255
  4491                           
  4492                           	psect	config
  4493                           
  4494                           ; Padding undefined space
  4495  300000                     	org	3145728
  4496  300000  FF                 	db	255
  4497                           
  4498                           ;Config register CONFIG1H @ 0x300001
  4499                           ;	Oscillator Selection bits
  4500                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  4501                           ;	Fail-Safe Clock Monitor Enable bit
  4502                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4503                           ;	Internal/External Oscillator Switchover bit
  4504                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4505  300001                     	org	3145729
  4506  300001  07                 	db	7
  4507                           
  4508                           ;Config register CONFIG2L @ 0x300002
  4509                           ;	Power-up Timer Enable bit
  4510                           ;	PWRT = OFF, PWRT disabled
  4511                           ;	Brown-out Reset Enable bits
  4512                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4513                           ;	Brown Out Reset Voltage bits
  4514                           ;	BORV = 3, Minimum setting
  4515  300002                     	org	3145730
  4516  300002  1F                 	db	31
  4517                           
  4518                           ;Config register CONFIG2H @ 0x300003
  4519                           ;	Watchdog Timer Enable bit
  4520                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4521                           ;	Watchdog Timer Postscale Select bits
  4522                           ;	WDTPS = 32768, 1:32768
  4523  300003                     	org	3145731
  4524  300003  1E                 	db	30
  4525                           
  4526                           ; Padding undefined space
  4527  300004                     	org	3145732
  4528  300004  FF                 	db	255
  4529                           
  4530                           ;Config register CONFIG3H @ 0x300005
  4531                           ;	CCP2 MUX bit
  4532                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4533                           ;	PORTB A/D Enable bit
  4534                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4535                           ;	Low-Power Timer1 Oscillator Enable bit
  4536                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4537                           ;	MCLR Pin Enable bit
  4538                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4539  300005                     	org	3145733
  4540  300005  81                 	db	129
  4541                           
  4542                           ;Config register CONFIG4L @ 0x300006
  4543                           ;	Stack Full/Underflow Reset Enable bit
  4544                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4545                           ;	Single-Supply ICSP Enable bit
  4546                           ;	LVP = ON, Single-Supply ICSP enabled
  4547                           ;	Extended Instruction Set Enable bit
  4548                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4549                           ;	Background Debugger Enable bit
  4550                           ;	DEBUG = 0x1, unprogrammed default
  4551  300006                     	org	3145734
  4552  300006  85                 	db	133
  4553                           
  4554                           ; Padding undefined space
  4555  300007                     	org	3145735
  4556  300007  FF                 	db	255
  4557                           
  4558                           ;Config register CONFIG5L @ 0x300008
  4559                           ;	Code Protection bit
  4560                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4561                           ;	Code Protection bit
  4562                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4563                           ;	Code Protection bit
  4564                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4565                           ;	Code Protection bit
  4566                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4567  300008                     	org	3145736
  4568  300008  0F                 	db	15
  4569                           
  4570                           ;Config register CONFIG5H @ 0x300009
  4571                           ;	Boot Block Code Protection bit
  4572                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4573                           ;	Data EEPROM Code Protection bit
  4574                           ;	CPD = OFF, Data EEPROM not code-protected
  4575  300009                     	org	3145737
  4576  300009  C0                 	db	192
  4577                           
  4578                           ;Config register CONFIG6L @ 0x30000A
  4579                           ;	Write Protection bit
  4580                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4581                           ;	Write Protection bit
  4582                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4583                           ;	Write Protection bit
  4584                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4585                           ;	Write Protection bit
  4586                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4587  30000A                     	org	3145738
  4588  30000A  0F                 	db	15
  4589                           
  4590                           ;Config register CONFIG6H @ 0x30000B
  4591                           ;	Configuration Register Write Protection bit
  4592                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4593                           ;	Boot Block Write Protection bit
  4594                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4595                           ;	Data EEPROM Write Protection bit
  4596                           ;	WRTD = OFF, Data EEPROM not write-protected
  4597  30000B                     	org	3145739
  4598  30000B  E0                 	db	224
  4599                           
  4600                           ;Config register CONFIG7L @ 0x30000C
  4601                           ;	Table Read Protection bit
  4602                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4603                           ;	Table Read Protection bit
  4604                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4605                           ;	Table Read Protection bit
  4606                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4607                           ;	Table Read Protection bit
  4608                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4609  30000C                     	org	3145740
  4610  30000C  0F                 	db	15
  4611                           
  4612                           ;Config register CONFIG7H @ 0x30000D
  4613                           ;	Boot Block Table Read Protection bit
  4614                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4615  30000D                     	org	3145741
  4616  30000D  40                 	db	64
  4617                           tosu	equ	0xFFF
  4618                           tosh	equ	0xFFE
  4619                           tosl	equ	0xFFD
  4620                           stkptr	equ	0xFFC
  4621                           pclatu	equ	0xFFB
  4622                           pclath	equ	0xFFA
  4623                           pcl	equ	0xFF9
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           prodh	equ	0xFF4
  4629                           prodl	equ	0xFF3
  4630                           indf0	equ	0xFEF
  4631                           postinc0	equ	0xFEE
  4632                           postdec0	equ	0xFED
  4633                           preinc0	equ	0xFEC
  4634                           plusw0	equ	0xFEB
  4635                           fsr0h	equ	0xFEA
  4636                           fsr0l	equ	0xFE9
  4637                           wreg	equ	0xFE8
  4638                           indf1	equ	0xFE7
  4639                           postinc1	equ	0xFE6
  4640                           postdec1	equ	0xFE5
  4641                           preinc1	equ	0xFE4
  4642                           plusw1	equ	0xFE3
  4643                           fsr1h	equ	0xFE2
  4644                           fsr1l	equ	0xFE1
  4645                           bsr	equ	0xFE0
  4646                           indf2	equ	0xFDF
  4647                           postinc2	equ	0xFDE
  4648                           postdec2	equ	0xFDD
  4649                           preinc2	equ	0xFDC
  4650                           plusw2	equ	0xFDB
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         942
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     62      64
    BANK0           128     61      83
    BANK1           256    101     101
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_write@p.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_read@p.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_create@p.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_create@p	PTR struct pipe size(2) Largest target is 11
		 -> pipe_teste(BANK0[10]), 

    sem_post@sem	PTR struct semaforo size(2) Largest target is 10
		 -> sem_teste(BANK0[10]), 

    sem_wait@sem	PTR struct semaforo size(2) Largest target is 10
		 -> sem_teste(BANK0[10]), 

    sem_init@sem	PTR struct semaforo size(2) Largest target is 10
		 -> sem_teste(BANK0[10]), 

    S366pipe$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_teste.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    task_create@func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 

    new_task.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 

    S38tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 

    f_aptos.ready_queue.task_func	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_3(), task_2(), task_1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    _task_1->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    _task_3->_task_delay
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul
    _sem_post->i1___wmul

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_1 in COMRAM

    _task_1->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_2 in COMRAM

    None.

Critical Paths under _task_3 in COMRAM

    _task_3->_task_delay
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul
    _sem_post->i1___wmul

Critical Paths under _IRQ_Timer0 in COMRAM

    _IRQ_Timer0->i2_scheduler
    i2_scheduler->i2_rr_scheduler
    i2_rr_scheduler->i2___wmul
    _controle_delay->i2___wmul

Critical Paths under _main in BANK0

    _task_create->___wmul
    _pipe_create->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_1 in BANK0

    _task_1->_sem_wait
    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_3 in BANK0

    _task_3->_task_delay
    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul
    _sem_post->i1___wmul

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_1 in BANK0

    _task_1->_sem_wait
    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul

Critical Paths under _task_2 in BANK0

    None.

Critical Paths under _task_3 in BANK0

    _task_3->_task_delay
    _task_delay->_scheduler
    _scheduler->_rr_scheduler
    _rr_scheduler->i1___wmul
    _sem_post->i1___wmul

Critical Paths under _IRQ_Timer0 in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_task_create
    _os_config->_task_create
    _config_tasks->_pipe_create

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_3 in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_1 in BANK1

    None.

Critical Paths under _task_2 in BANK1

    None.

Critical Paths under _task_3 in BANK1

    None.

Critical Paths under _IRQ_Timer0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_1 in BANK2

    None.

Critical Paths under _task_2 in BANK2

    None.

Critical Paths under _task_3 in BANK2

    None.

Critical Paths under _IRQ_Timer0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_1 in BANK3

    None.

Critical Paths under _task_2 in BANK3

    None.

Critical Paths under _task_3 in BANK3

    None.

Critical Paths under _IRQ_Timer0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_1 in BANK4

    None.

Critical Paths under _task_2 in BANK4

    None.

Critical Paths under _task_3 in BANK4

    None.

Critical Paths under _IRQ_Timer0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_1 in BANK5

    None.

Critical Paths under _task_2 in BANK5

    None.

Critical Paths under _task_3 in BANK5

    None.

Critical Paths under _IRQ_Timer0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   32040
                       _SRAMInitHeap
                          _os_config
                           _os_start
                        _task_create
                          _task_idle
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            1     1      0       0
                                             42 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0   16795
                       _config_tasks
                      _setup_timer_0
                        _task_create
 ---------------------------------------------------------------------------------
 (1) _task_create                                        107   103      4   15016
                                             48 BANK0      6     2      4
                                              0 BANK1    101   101      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   14052
                                             42 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _setup_timer_0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_tasks                                         0     0      0    1779
                        _pipe_create
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _sem_init                                             4     0      4     304
                                             42 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pipe_create                                          4     0      4    1475
                                              0 BANK1      4     0      4
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                           11     9      2     969
                                             50 BANK0     11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           8     6      2     478
                                             42 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SRAMInitHeap                                         4     4      0     229
                                             42 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            1     1      0       0
                                             42 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_1                                               1     1      0   16459
                                             51 COMRAM     1     1      0
                           _sem_wait
                         _task_delay
 ---------------------------------------------------------------------------------
 (7) _task_delay                                           4     2      2    8197
                                             59 COMRAM     2     2      0
                                             40 BANK0      2     0      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             6     4      2    8262
                                             47 COMRAM     4     4      0
                                             30 BANK0      2     0      2
                          _scheduler
                                _who
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _who                                                  2     0      2       0
                                             22 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            2     0      2    4044
                                             38 BANK0      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    4044
                                             55 COMRAM     4     4      0
                                             36 BANK0      2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    3942
                                             53 COMRAM     2     2      0
                                             32 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_2                                               1     1      0       0
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_3                                               1     1      0   12415
                                             61 COMRAM     1     1      0
                           _sem_post
                         _task_delay
 ---------------------------------------------------------------------------------
 (7) _task_delay                                           4     2      2    8197
                                             59 COMRAM     2     2      0
                                             40 BANK0      2     0      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            2     0      2    4044
                                             38 BANK0      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    4044
                                             55 COMRAM     4     4      0
                                             36 BANK0      2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             6     4      2    4218
                                             55 COMRAM     4     4      0
                                             36 BANK0      2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    3942
                                             53 COMRAM     2     2      0
                                             32 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            1     1      0       0
                                             42 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_1                                               1     1      0   16459
                                             51 COMRAM     1     1      0
                           _sem_wait
                         _task_delay
 ---------------------------------------------------------------------------------
 (7) _task_delay                                           4     2      2    8197
                                             59 COMRAM     2     2      0
                                             40 BANK0      2     0      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             6     4      2    8262
                                             47 COMRAM     4     4      0
                                             30 BANK0      2     0      2
                          _scheduler
                                _who
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _who                                                  2     0      2       0
                                             22 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            2     0      2    4044
                                             38 BANK0      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    4044
                                             55 COMRAM     4     4      0
                                             36 BANK0      2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    3942
                                             53 COMRAM     2     2      0
                                             32 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_2                                               1     1      0       0
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_3                                               1     1      0   12415
                                             61 COMRAM     1     1      0
                           _sem_post
                         _task_delay
 ---------------------------------------------------------------------------------
 (7) _task_delay                                           4     2      2    8197
                                             59 COMRAM     2     2      0
                                             40 BANK0      2     0      2
                          _scheduler
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            2     0      2    4044
                                             38 BANK0      2     0      2
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    4044
                                             55 COMRAM     4     4      0
                                             36 BANK0      2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             6     4      2    4218
                                             55 COMRAM     4     4      0
                                             36 BANK0      2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    3942
                                             53 COMRAM     2     2      0
                                             32 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _IRQ_Timer0                                          6     6      0    5338
                                             14 COMRAM     6     6      0
                     _controle_delay
                           i2___wmul
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (12) i2_scheduler                                         2     0      2    1788
                                             12 COMRAM     2     0      2
                     i2_rr_scheduler
 ---------------------------------------------------------------------------------
 (13) i2_rr_scheduler                                      6     4      2    1788
                                              6 COMRAM     6     4      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) _controle_delay                                      4     4      0    1831
                                              6 COMRAM     4     4      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4    1719
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _os_config
     _config_tasks
       _pipe_create
         _SRAMalloc
           __SRAMmerge
       _sem_init
     _setup_timer_0
     _task_create
       ___wmul
   _os_start
   _task_create
     ___wmul
   _task_idle

 _task_idle (ROOT)

 _task_1 (ROOT)
   _sem_wait
     _scheduler
       _rr_scheduler
         i1___wmul
     _who
     i1___wmul
   _task_delay
     _scheduler
       _rr_scheduler
         i1___wmul
     i1___wmul

 _task_2 (ROOT)

 _task_3 (ROOT)
   _sem_post
     i1___wmul
   _task_delay
     _scheduler
       _rr_scheduler
         i1___wmul
     i1___wmul

 _task_idle (ROOT)

 _task_1 (ROOT)
   _sem_wait
     _scheduler
       _rr_scheduler
         i1___wmul
     _who
     i1___wmul
   _task_delay
     _scheduler
       _rr_scheduler
         i1___wmul
     i1___wmul

 _task_2 (ROOT)

 _task_3 (ROOT)
   _sem_post
     i1___wmul
   _task_delay
     _scheduler
       _rr_scheduler
         i1___wmul
     i1___wmul

 _IRQ_Timer0 (ROOT)
   _controle_delay
     i2___wmul
   i2___wmul
   i2_scheduler
     i2_rr_scheduler
       i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     398      17       59.9%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     65      65       7       39.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3D      53       5       64.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3E      40       1       50.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8      15        0.0%
DATA                 0      0     490       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Dec 14 20:21:08 2020

    __end_ofi2_scheduler 1726                       l23 14F0                       l81 1730  
                     l84 15F0                       l78 1280                       l87 1628  
i2rr_scheduler@next_task 000B      ___wmul@multiplicand 00AC         i1___wmul@product 0036  
__size_of_controle_delay 00DA            SRAMalloc@temp 00B6                      l140 13CC  
                    l125 1626                      l134 16A6                      l311 0FDA  
                    l128 1536                      l312 106A                      l321 167C  
                    l306 149C                      l246 15B6                      l272 135E  
                    l194 1708                      l286 0F90                      l295 0F8C  
                    l288 0EC2                      _BSR 000FE0                      u420 0FD4  
                    u500 0EE2                      u421 0FD0                      u501 0EDE  
                    u430 0FE8                      u510 0EFE                      u431 0FE4  
                    u511 0EFA                      u440 0FF6                      u520 0F28  
                    u441 0FF2                      u521 0F24                      u450 100E  
                    u451 100A                      u460 1028                      u461 1024  
                    u470 0E82                      u471 0E7E                      u480 0EBE  
                    u481 0EBA                      u490 0ED0                      u491 0ECC  
                    u851 126E                      u860 145C                      u861 1458  
                    _TOS 000FFD                      _who 1732                      wreg 000FE8  
         SRAMalloc@pHeap 00BB             fp__task_idle 0000        SRAMInitHeap@pHeap 00AA  
      SRAMInitHeap@count 00AC                     l2002 1726                     l2004 1728  
                   l2006 172C                     l2008 172E                     l1502 105C  
                   l1512 0E8E                     l2170 13CC                     l2162 1536  
                   l1530 0F16                     l1514 0E96                     l1506 0E70  
                   l2172 13F0                     l2164 1556                     l2252 1628  
                   l1532 0F28                     l1540 0F42                     l1524 0ED0  
                   l1516 0EA4                     l1508 0E82                     l2260 1336  
                   l2174 13FE                     l2166 1564                     l1470 0FD4  
                   l1462 0F92                     l1542 0F50                     l1534 0F32  
                   l1526 0EE2                     l1518 0EAE                     l2262 134A  
                   l2254 12F2                     l2270 15B8                     l2168 16A6  
                   l1480 0FFA                     l1464 0FAC                     l1544 0F5C  
                   l1528 0EFE                     l2256 130C                     l2264 15F2  
                   l2272 15D2                     l2280 14A2                     l1490 1034  
                   l1474 0FE8                     l1466 0FB8                     l1546 0F80  
                   l2258 1322                     l2266 15FA                     l2274 15D6  
                   l2290 14EC                     l2282 14A6                     l1492 103C  
                   l1468 0FC4                     l2268 1610                     l2276 15EC  
                   l2284 14BC                     l1494 1048                     l1486 1012  
                   l2286 14D2                     l2278 149E                     l1496 1056  
                   l1488 1028                     l1920 15B4                     l1912 1578  
                   l2288 14E8                     l1914 157A                     l1916 158A  
                   l1918 15A0                     l1942 1656                     l1950 1228  
                   l1944 1674                     l1960 1276                     l1952 1230  
                   l1954 1234                     l1980 1446                     l1956 123C  
                   l1948 1208                     l1990 148C                     l1982 145C  
                   l1966 16F4                     l1958 1244                     l1984 1468  
                   l1976 1436                     l1968 16FC                     l1986 1470  
                   l1978 1440                     l1988 1480                     ?_who 0096  
                   i1l71 09CE                     i1l73 08B6                     i1l75 09D0  
                   _TOSH 000FFE                     _TOSL 000FFD                     _WREG 000FE8  
                   _TOSU 000FFF                     _main 149E                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0041                     prodh 000FF4  
                   prodl 000FF3                     start 000E           ??_config_tasks 00BD  
        SRAMalloc@nBytes 00BA             ___param_bank 000000          SRAMalloc@segLen 00B8  
            ?_IRQ_Timer0 0001                    ??_who 002A                    ?_main 0001  
                  i1l104 173A                    i1l152 1716                    i1l321 16A4  
                  i1l157 12E8                    i1l262 1206                    i1l158 12F0  
                  i1l256 040A                    i2l202 1144                    i1l258 0532  
                  i2l215 0D36                    i2l152 1724                    i2l321 16F2  
                  i2l217 0E58                    i2l157 13C2                    i2l158 13CA  
                  _TMR0L 000FD6                    u99_20 1546                    u99_21 1540  
                  u99_26 1548               __SRAMmerge 0F92                    _index 00BD  
     __size_of_SRAMalloc 0126                    tablat 000FF5         __end_ofi1___wmul 16A6  
       __end_ofi2___wmul 16F4                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 0042                    ttemp6 0045                    ttemp7 0049  
                  status 000FD8      i1___wmul@multiplier 00A0                    wtemp8 0042  
            i2_scheduler 1718          ??_setup_timer_0 00AA          __initialization 14F4  
           __end_of_main 14F4           i2_rr_scheduler 1360                   ??_main 00BD  
          __activetblptr 000000             ?_pipe_create 0100                   u100_20 16B6  
                 u100_21 16B0                   u100_26 16B8                   u101_20 13DC  
                 u101_21 13D6                   u101_26 13DE                   u102_20 140E  
                 u102_21 1408                   i1l2010 0534                   i1l2100 11F6  
                 i1l2020 05B2                   i1l2012 0536                   i1l2102 1204  
                 u102_26 1410                   i1l2030 0754                   i1l2022 05DC  
                 i1l2014 0540                   i1l2040 08B8                   i1l2032 0758  
                 i1l2024 06DA                   i1l2016 0566                   i1l2050 003A  
                 i1l2042 09B6                   i1l2034 078C                   i1l2026 06E0  
                 i1l2018 058C                   i1l2060 010A                   i1l2052 007E  
                 i1l2044 09BC                   i1l2036 078E                   i1l2028 06F0  
                 i1l2070 026E                   i1l2062 0130                   i1l2054 00B6  
                 i1l2046 0012                   i1l2038 07EE                   i1l2080 0342  
                 i1l2072 02A8                   i1l2064 015A                   i1l2056 00BE  
                 i1l2048 0014                   i1l2090 0530                   i1l2082 040C  
                 i1l2074 02AC                   i1l2066 0258                   i1l2058 00E4  
                 i1l2092 1146                   i1l2084 050A                   i1l2076 02E0  
                 i1l2068 025E                   i1l2094 1148                   i1l2086 0510  
                 i1l2078 02E2                   i1l2096 1160                   i1l2088 0522  
                 u105_20 1638                   u105_21 1632                   i1l2098 11BE  
                 i1l1628 1732                   u105_26 163A                   i1l1906 167E  
                 i1l1908 169C                   i1l1940 12B4                   i1l1932 1282  
                 i1l1934 128A                   i1l1936 128E                   i1l1938 12A8  
                 i1l1962 170A                   i2l1630 1360                   i2l1632 1368  
                 i2l1634 136C                   i2l1636 1386                   i2l1900 0E50  
                 i2l1638 1392                   i2l1902 0E52                   i2l1904 0E56  
                 i2l1594 16CE                   i2l1770 1078                   i2l1596 16EA  
                 i2l1772 10AA                   i2l1780 1718                   i2l1860 09FA  
                 i2l1774 1102                   i2l1870 0A82                   i2l1862 0A0C  
                 i2l1776 1126                   i2l1768 106C                   i2l1880 0BE6  
                 i2l1872 0AAA                   i2l1864 0A16                   i2l1856 09E4  
                 i2l1778 112A                   i2l1890 0D38                   i2l1882 0BEA  
                 i2l1874 0B9A                   i2l1866 0A3A                   i2l1858 09F4  
                 i2l1892 0E28                   i2l1884 0C1C                   i2l1876 0BA2  
                 i2l1868 0A5E                   i2l1894 0E30                   i2l1886 0C1E  
                 i2l1878 0BB2                   i2l1896 0E44                   i2l1888 0C78  
                 i2l1898 0E4C      __size_of_IRQ_Timer0 0E64      task_create@new_task 0100  
                 _STATUS 000FD8                   _STKPTR 000FFC             ?_task_create 00B0  
                 ___wmul 1656   __end_ofi2_rr_scheduler 13CC        __end_of_SRAMalloc 0F92  
         _controle_delay 106C                   clear_0 1514                   clear_1 1526  
                 _task_1 1536                   _task_2 16A6                   _task_3 13CC  
       __end_of_sem_init 15B8         __end_of_sem_wait 0534         __end_of_sem_post 1208  
           __pdataCOMRAM 003F         __end_of_os_start 1732     __end_of_config_tasks 1628  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
            ?__SRAMmerge 00AA               __accesstop 0080  __end_of__initialization 152C  
          ___rparam_used 000001           __pcstackCOMRAM 0001   __end_of_controle_delay 1146  
       task_create@prior 00B0          ?i2_rr_scheduler 0007          __SRAMmerge@uSum 00AF  
              ?i1___wmul 00A0                ?i2___wmul 0001               __pbssBANK0 00BD  
          __uDynamicHeap 02FD       __size_of_scheduler 000E                  ?___wmul 00AA  
        ?_controle_delay 0001      __size_of__SRAMmerge 00DA             ??_IRQ_Timer0 000F  
     __size_of_os_config 003A                  ?_task_1 0001                  ?_task_2 0001  
                ?_task_3 0001       __size_of_task_idle 002E               ??i1___wmul 0036  
             ??i2___wmul 0005                  i1u90_20 003A                  i1u90_21 0036  
                i1u83_20 12A8                  i1u91_20 026E                  i1u83_21 12A4  
                i1u91_21 026A                  i1u84_20 12E8                  i1u92_20 02E0  
                i1u84_21 12E4                  i1u92_21 02DC                  i1u93_20 0522  
                i1u93_21 051E                  i1u94_20 1160                  i1u94_21 115C  
                i1u87_20 06F0                  i1u87_21 06EC                  i1u88_20 078C  
                i1u88_21 0788                  i2u56_40 1386                  i2u80_40 0BB2  
                i2u56_41 1382                  i2u80_41 0BAE                  i1u89_20 09CE  
                i1u89_21 09CA                  i2u57_40 13C2                  i2u81_40 0C1C  
                i2u57_41 13BE                  i2u81_41 0C18                  i2u82_40 0E44  
                i2u82_41 0E40                  i2u67_40 10AA                  i2u67_41 10A6  
                i2u68_40 1102                  i2u68_41 10FE                  i2u69_40 1144  
                i2u69_41 1140                  i2u78_40 09F4                  i2u78_41 09F0  
                i2u79_40 0A0C                  i2u79_41 0A08     __size_of_pipe_create 006E  
            sem_init@sem 00AA       __end_of_IRQ_Timer0 0E6C             ?i2_scheduler 000D  
            sem_wait@sem 009E                  __Hparam 0000              sem_post@sem 00A4  
              ?_sem_init 00AA                ?_sem_wait 009E                ?_sem_post 00A4  
                __Lparam 0000     __size_of_task_create 007A                ?_os_start 0001  
        __size_of___wmul 0028                  _f_aptos 0165                  __pcinit 14F4  
  __size_of_config_tasks 0036                  __ramtop 0600          __size_of_task_1 0042  
        __size_of_task_2 0028          __size_of_task_3 006A            ?_SRAMInitHeap 0001  
                __ptext0 149E                  __ptext1 1726                  __ptext2 15B8  
                __ptext3 1208                  __ptext4 1656                  __ptext5 16F4  
                __ptext6 15F2                  __ptext7 1578                  __ptext8 12F2  
                __ptext9 0E6C                _T0CONbits 000FD5             __size_of_who 000A  
                _quantum 003F        __end_of_scheduler 1718           __pintcode_body 09D2  
   end_of_initialization 152C        __end_of_os_config 15F2        __end_of_task_idle 1656  
                int_func 09D2               _pipe_teste 00BF      i2___wmul@multiplier 0001  
             _task_delay 0534    __end_of_setup_timer_0 170A               ??_sem_init 00AE  
             ??_sem_wait 0030               ??_sem_post 0038             _config_tasks 15F2  
             ??_os_start 00AA                  postdec1 000FE5                  postdec2 000FDD  
          ?_rr_scheduler 00A4                  postinc0 000FEE                  postinc2 000FDE  
  i1___wmul@multiplicand 00A2           ??_SRAMInitHeap 00AA                _PORTDbits 000F83  
              _SRAMalloc 0E6C                _TRISDbits 000F95             ??__SRAMmerge 00AC  
          sem_init@valor 00AC         ??i2_rr_scheduler 0009           ??_rr_scheduler 0038  
     __end_of__SRAMmerge 106C           __end_of___wmul 167E            __pidataCOMRAM 173C  
         __end_of_task_1 1578           __end_of_task_2 16CE           __end_of_task_3 1436  
       i2___wmul@product 0005               ?_SRAMalloc 00B2      start_initialization 14F4  
     SRAMalloc@segHeader 00B9        __size_ofi1___wmul 0028        __size_ofi2___wmul 0026  
       __SRAMmerge@pSegA 00AA         __SRAMmerge@pSegB 00AD         __SRAMmerge@uSegA 00B0  
       __SRAMmerge@uSegB 00B1              __end_of_who 173C         ??_controle_delay 0007  
            ?_task_delay 00A8     __size_ofi2_scheduler 000E                 ??___wmul 00AE  
               ??_task_1 0034                 ??_task_2 0035                 ??_task_3 003E  
            __pbssBIGRAM 0165            __pcstackBANK0 0080            __pcstackBANK1 0100  
        task_create@func 00B2     __end_of_SRAMInitHeap 149E                __pintcode 0008  
      __size_of_sem_init 0040        __size_of_sem_wait 0522        __size_of_sem_post 00C2  
      __size_of_os_start 000C              ??_SRAMalloc 00B4            ??_pipe_create 00BD  
    __size_of_task_delay 049E     __end_of_rr_scheduler 12F2                _scheduler 170A  
         ___wmul@product 00AE            ??_task_create 00B4                _os_config 15B8  
           pipe_create@p 0100                _sem_teste 00C9                _task_idle 1628  
              fp__task_1 0000                fp__task_2 0000                fp__task_3 0000  
      ___wmul@multiplier 00AA                 i1___wmul 167E                 i2___wmul 16CE  
    __end_of_pipe_create 1360               ?_scheduler 00A6               ?_os_config 0001  
               __Hrparam 0000               ?_task_idle 0001                 __Lrparam 0000  
    __end_of_task_create 1282    i2___wmul@multiplicand 0003    rr_scheduler@next_task 003A  
           task_delay@ms 00A8          pipe_create@size 0102   __size_of_setup_timer_0 0016  
  __size_of_SRAMInitHeap 0068                 __ptext10 0F92                 __ptext11 1436  
               __ptext20 16A6                 __ptext12 1628                 __ptext21 13CC  
               __ptext13 1536                 __ptext22 1146                 __ptext14 0534  
               __ptext15 0012                 __ptext24 1718                 __ptext16 1732  
               __ptext25 1360                 __ptext17 170A                 __ptext26 106C  
               __ptext18 1282                 __ptext27 16CE                 __ptext19 167E  
               __ptext28 0000            __size_of_main 0056             ??_task_delay 003C  
               _sem_init 1578                 _sem_wait 0012                 _sem_post 1146  
               _os_start 1726                 int$flags 0041             _SRAMInitHeap 1436  
  __size_of_rr_scheduler 0070               _INTCONbits 000FF2              _pipe_create 12F2  
     __end_of_task_delay 09D2                 intlevel1 0000                 intlevel2 0000  
          ??i2_scheduler 000F              ??_scheduler 003C              _task_create 1208  
            ??_os_config 00BD              ??_task_idle 00AA            _setup_timer_0 16F4  
        controle_delay@i 0009             _rr_scheduler 1282               _IRQ_Timer0 0008  
__size_ofi2_rr_scheduler 006C           ?_setup_timer_0 0001            ?_config_tasks 0001  
